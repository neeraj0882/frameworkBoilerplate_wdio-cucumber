'use strict';

var _slicedToArray = require('babel-runtime/helpers/sliced-to-array')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _teen_process = require('teen_process');

var touchEnrollMenuKeys = ['Toggle Enrolled State', 'Touch ID Enrolled'];
var touchEnrollBackups = undefined;
var NS_USER_KEY_EQUIVALENTS = 'NSUserKeyEquivalents';
var TOUCH_ENROLL_KEY_CODE = '@~$^t';

function setTouchEnrollKey() {
  var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, key;

  return _regeneratorRuntime.async(function setTouchEnrollKey$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(backupTouchEnrollShortcuts());

      case 2:
        _iteratorNormalCompletion = true;
        _didIteratorError = false;
        _iteratorError = undefined;
        context$1$0.prev = 5;
        _iterator = _getIterator(touchEnrollMenuKeys);

      case 7:
        if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
          context$1$0.next = 14;
          break;
        }

        key = _step.value;
        context$1$0.next = 11;
        return _regeneratorRuntime.awrap(setUserDefault(NS_USER_KEY_EQUIVALENTS, key, TOUCH_ENROLL_KEY_CODE));

      case 11:
        _iteratorNormalCompletion = true;
        context$1$0.next = 7;
        break;

      case 14:
        context$1$0.next = 20;
        break;

      case 16:
        context$1$0.prev = 16;
        context$1$0.t0 = context$1$0['catch'](5);
        _didIteratorError = true;
        _iteratorError = context$1$0.t0;

      case 20:
        context$1$0.prev = 20;
        context$1$0.prev = 21;

        if (!_iteratorNormalCompletion && _iterator['return']) {
          _iterator['return']();
        }

      case 23:
        context$1$0.prev = 23;

        if (!_didIteratorError) {
          context$1$0.next = 26;
          break;
        }

        throw _iteratorError;

      case 26:
        return context$1$0.finish(23);

      case 27:
        return context$1$0.finish(20);

      case 28:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[5, 16, 20, 28], [21,, 23, 27]]);
}

function setTouchEnrollKeys(pairs) {
  var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _step2$value, key, value;

  return _regeneratorRuntime.async(function setTouchEnrollKeys$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _iteratorNormalCompletion2 = true;
        _didIteratorError2 = false;
        _iteratorError2 = undefined;
        context$1$0.prev = 3;
        _iterator2 = _getIterator(pairs);

      case 5:
        if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
          context$1$0.next = 14;
          break;
        }

        _step2$value = _slicedToArray(_step2.value, 2);
        key = _step2$value[0];
        value = _step2$value[1];
        context$1$0.next = 11;
        return _regeneratorRuntime.awrap(setUserDefault(NS_USER_KEY_EQUIVALENTS, key, value));

      case 11:
        _iteratorNormalCompletion2 = true;
        context$1$0.next = 5;
        break;

      case 14:
        context$1$0.next = 20;
        break;

      case 16:
        context$1$0.prev = 16;
        context$1$0.t0 = context$1$0['catch'](3);
        _didIteratorError2 = true;
        _iteratorError2 = context$1$0.t0;

      case 20:
        context$1$0.prev = 20;
        context$1$0.prev = 21;

        if (!_iteratorNormalCompletion2 && _iterator2['return']) {
          _iterator2['return']();
        }

      case 23:
        context$1$0.prev = 23;

        if (!_didIteratorError2) {
          context$1$0.next = 26;
          break;
        }

        throw _iteratorError2;

      case 26:
        return context$1$0.finish(23);

      case 27:
        return context$1$0.finish(20);

      case 28:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[3, 16, 20, 28], [21,, 23, 27]]);
}

function getTouchEnrollKeys() {
  var backups, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, key;

  return _regeneratorRuntime.async(function getTouchEnrollKeys$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        backups = [];
        _iteratorNormalCompletion3 = true;
        _didIteratorError3 = false;
        _iteratorError3 = undefined;
        context$1$0.prev = 4;
        _iterator3 = _getIterator(touchEnrollMenuKeys);

      case 6:
        if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
          context$1$0.next = 18;
          break;
        }

        key = _step3.value;
        context$1$0.t0 = backups;
        context$1$0.t1 = key;
        context$1$0.next = 12;
        return _regeneratorRuntime.awrap(getUserDefault(NS_USER_KEY_EQUIVALENTS, key));

      case 12:
        context$1$0.t2 = context$1$0.sent;
        context$1$0.t3 = [context$1$0.t1, context$1$0.t2];
        context$1$0.t0.push.call(context$1$0.t0, context$1$0.t3);

      case 15:
        _iteratorNormalCompletion3 = true;
        context$1$0.next = 6;
        break;

      case 18:
        context$1$0.next = 24;
        break;

      case 20:
        context$1$0.prev = 20;
        context$1$0.t4 = context$1$0['catch'](4);
        _didIteratorError3 = true;
        _iteratorError3 = context$1$0.t4;

      case 24:
        context$1$0.prev = 24;
        context$1$0.prev = 25;

        if (!_iteratorNormalCompletion3 && _iterator3['return']) {
          _iterator3['return']();
        }

      case 27:
        context$1$0.prev = 27;

        if (!_didIteratorError3) {
          context$1$0.next = 30;
          break;
        }

        throw _iteratorError3;

      case 30:
        return context$1$0.finish(27);

      case 31:
        return context$1$0.finish(24);

      case 32:
        return context$1$0.abrupt('return', backups);

      case 33:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[4, 20, 24, 32], [25,, 27, 31]]);
}

/**
 * Get MacOS User Defaults by domain and key (for reference: `man defaults`)
 * @param {*} domain {string}
 * @param {*} key {string|number|boolean}
 */
function getUserDefault(domain, key) {
  var res, stdout, nsUserKeyArr, _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, _step4$value, testKey, value;

  return _regeneratorRuntime.async(function getUserDefault$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        res = undefined;
        context$1$0.prev = 1;
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap((0, _teen_process.exec)('defaults', ['read', 'Apple Global Domain', domain]));

      case 4:
        res = context$1$0.sent;
        context$1$0.next = 10;
        break;

      case 7:
        context$1$0.prev = 7;
        context$1$0.t0 = context$1$0['catch'](1);
        return context$1$0.abrupt('return');

      case 10:
        stdout = res.stdout;
        nsUserKeyArr = stdout.trim().replace(/^{/, '') // Remove leading {
        .replace(/}$/, '') // Remove trailing }
        .trim().replace(/;$/, '') // Remove trailing semicolon
        .split(';') // Break up expressions by semicolon
        .map(function (expr) {
          var _expr$split = expr.split('=');

          var _expr$split2 = _slicedToArray(_expr$split, 2);

          var key = _expr$split2[0];
          var value = _expr$split2[1];

          key = key.trim().replace(/^"/, '').replace(/"$/, '');
          value = value.trim().replace(/^"/, '').replace(/"$/, '');
          return [key, value];
        });
        _iteratorNormalCompletion4 = true;
        _didIteratorError4 = false;
        _iteratorError4 = undefined;
        context$1$0.prev = 15;
        _iterator4 = _getIterator(nsUserKeyArr);

      case 17:
        if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {
          context$1$0.next = 26;
          break;
        }

        _step4$value = _slicedToArray(_step4.value, 2);
        testKey = _step4$value[0];
        value = _step4$value[1];

        if (!(testKey === key)) {
          context$1$0.next = 23;
          break;
        }

        return context$1$0.abrupt('return', value.replace(/\\\\/g, '\\'));

      case 23:
        _iteratorNormalCompletion4 = true;
        context$1$0.next = 17;
        break;

      case 26:
        context$1$0.next = 32;
        break;

      case 28:
        context$1$0.prev = 28;
        context$1$0.t1 = context$1$0['catch'](15);
        _didIteratorError4 = true;
        _iteratorError4 = context$1$0.t1;

      case 32:
        context$1$0.prev = 32;
        context$1$0.prev = 33;

        if (!_iteratorNormalCompletion4 && _iterator4['return']) {
          _iterator4['return']();
        }

      case 35:
        context$1$0.prev = 35;

        if (!_didIteratorError4) {
          context$1$0.next = 38;
          break;
        }

        throw _iteratorError4;

      case 38:
        return context$1$0.finish(35);

      case 39:
        return context$1$0.finish(32);

      case 40:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[1, 7], [15, 28, 32, 40], [33,, 35, 39]]);
}

/**
 * Sets a MacOS User Default value on a domain
 * @param {*} domain 
 * @param {*} key 
 * @param {*} value 
 */
function setUserDefault(domain, key, value) {
  return _regeneratorRuntime.async(function setUserDefault$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap((0, _teen_process.exec)('defaults', ['write', 'Apple Global Domain', domain, '-dict-add', key, typeof value === 'undefined' ? 'nil' : value]));

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function backupTouchEnrollShortcuts() {
  return _regeneratorRuntime.async(function backupTouchEnrollShortcuts$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (touchEnrollBackups) {
          context$1$0.next = 4;
          break;
        }

        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(getTouchEnrollKeys());

      case 3:
        touchEnrollBackups = context$1$0.sent;

      case 4:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function restoreTouchEnrollShortcuts() {
  return _regeneratorRuntime.async(function restoreTouchEnrollShortcuts$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!touchEnrollBackups) {
          context$1$0.next = 4;
          break;
        }

        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(setTouchEnrollKeys(touchEnrollBackups));

      case 3:
        touchEnrollBackups = undefined;

      case 4:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function getTouchEnrollBackups() {
  return touchEnrollBackups;
}

exports.setTouchEnrollKey = setTouchEnrollKey;
exports.getTouchEnrollKeys = getTouchEnrollKeys;
exports.setTouchEnrollKeys = setTouchEnrollKeys;
exports.getUserDefault = getUserDefault;
exports.setUserDefault = setUserDefault;
exports.getTouchEnrollBackups = getTouchEnrollBackups;
exports.touchEnrollMenuKeys = touchEnrollMenuKeys;
exports.backupTouchEnrollShortcuts = backupTouchEnrollShortcuts;
exports.restoreTouchEnrollShortcuts = restoreTouchEnrollShortcuts;
exports.NS_USER_KEY_EQUIVALENTS = NS_USER_KEY_EQUIVALENTS;
exports.TOUCH_ENROLL_KEY_CODE = TOUCH_ENROLL_KEY_CODE;

// If it doesn't find anything for this domain, it will throw an error so return undefined

// Parse the result into a Javascript array
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi90b3VjaC1lbnJvbGwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OzRCQUFxQixjQUFjOztBQUVuQyxJQUFJLG1CQUFtQixHQUFHLENBQUMsdUJBQXVCLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztBQUN6RSxJQUFJLGtCQUFrQixZQUFBLENBQUM7QUFDdkIsSUFBTSx1QkFBdUIsR0FBRyxzQkFBc0IsQ0FBQztBQUN2RCxJQUFNLHFCQUFxQixHQUFHLE9BQU8sQ0FBQzs7QUFFdEMsU0FBZSxpQkFBaUI7c0ZBRXJCLEdBQUc7Ozs7Ozt5Q0FETiwwQkFBMEIsRUFBRTs7Ozs7OztpQ0FDbEIsbUJBQW1COzs7Ozs7OztBQUExQixXQUFHOzt5Q0FDSixjQUFjLENBQUMsdUJBQXVCLEVBQUUsR0FBRyxFQUFFLHFCQUFxQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBRTVFOztBQUVELFNBQWUsa0JBQWtCLENBQUUsS0FBSzt5R0FDNUIsR0FBRyxFQUFFLEtBQUs7Ozs7Ozs7OztrQ0FBSyxLQUFLOzs7Ozs7Ozs7QUFBcEIsV0FBRztBQUFFLGFBQUs7O3lDQUNaLGNBQWMsQ0FBQyx1QkFBdUIsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBRTVEOztBQUVELFNBQWUsa0JBQWtCO01BQzNCLE9BQU8sdUZBQ0YsR0FBRzs7Ozs7QUFEUixlQUFPLEdBQUcsRUFBRTs7Ozs7a0NBQ0EsbUJBQW1COzs7Ozs7OztBQUExQixXQUFHO3lCQUNWLE9BQU87eUJBQU8sR0FBRzs7eUNBQVEsY0FBYyxDQUFDLHVCQUF1QixFQUFFLEdBQUcsQ0FBQzs7Ozs7dUJBQTdELElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0Q0FFUCxPQUFPOzs7Ozs7O0NBQ2Y7Ozs7Ozs7QUFPRCxTQUFlLGNBQWMsQ0FBRSxNQUFNLEVBQUUsR0FBRztNQUNwQyxHQUFHLEVBT0gsTUFBTSxFQUdOLFlBQVkscUdBY04sT0FBTyxFQUFFLEtBQUs7Ozs7O0FBeEJwQixXQUFHOzs7eUNBR08sd0JBQUssVUFBVSxFQUFFLENBQUMsTUFBTSxFQUFFLHFCQUFxQixFQUFFLE1BQU0sQ0FBQyxDQUFDOzs7QUFBckUsV0FBRzs7Ozs7Ozs7OztBQUlELGNBQU0sR0FBRyxHQUFHLENBQUMsTUFBTTtBQUduQixvQkFBWSxHQUFHLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FDN0IsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUM7U0FDakIsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUM7U0FDakIsSUFBSSxFQUFFLENBQ04sT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUM7U0FDakIsS0FBSyxDQUFDLEdBQUcsQ0FBQztTQUNWLEdBQUcsQ0FBQyxVQUFDLElBQUksRUFBSzs0QkFDTSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQzs7OztjQUE3QixHQUFHO2NBQUUsS0FBSzs7QUFDZixhQUFHLEdBQUcsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztBQUNyRCxlQUFLLEdBQUcsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztBQUN6RCxpQkFBTyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztTQUNyQixDQUFDOzs7OztrQ0FHeUIsWUFBWTs7Ozs7Ozs7O0FBQS9CLGVBQU87QUFBRSxhQUFLOztjQUNsQixPQUFPLEtBQUssR0FBRyxDQUFBOzs7Ozs0Q0FDVixLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FHeEM7Ozs7Ozs7O0FBUUQsU0FBZSxjQUFjLENBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxLQUFLOzs7Ozt5Q0FDekMsd0JBQUssVUFBVSxFQUFFLENBQUMsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsR0FBRyxFQUFFLE9BQU8sS0FBSyxBQUFDLEtBQUssV0FBVyxHQUFHLEtBQUssR0FBRyxLQUFLLENBQUMsQ0FBQzs7Ozs7OztDQUNsSTs7QUFFRCxTQUFlLDBCQUEwQjs7OztZQUNsQyxrQkFBa0I7Ozs7Ozt5Q0FDTSxrQkFBa0IsRUFBRTs7O0FBQS9DLDBCQUFrQjs7Ozs7OztDQUVyQjs7QUFFRCxTQUFlLDJCQUEyQjs7OzthQUNwQyxrQkFBa0I7Ozs7Ozt5Q0FDZCxrQkFBa0IsQ0FBQyxrQkFBa0IsQ0FBQzs7O0FBQzVDLDBCQUFrQixHQUFHLFNBQVMsQ0FBQzs7Ozs7OztDQUVsQzs7QUFFRCxTQUFTLHFCQUFxQixHQUFJO0FBQ2hDLFNBQU8sa0JBQWtCLENBQUM7Q0FDM0I7O1FBRVEsaUJBQWlCLEdBQWpCLGlCQUFpQjtRQUFFLGtCQUFrQixHQUFsQixrQkFBa0I7UUFBRSxrQkFBa0IsR0FBbEIsa0JBQWtCO1FBQUUsY0FBYyxHQUFkLGNBQWM7UUFBRSxjQUFjLEdBQWQsY0FBYztRQUFFLHFCQUFxQixHQUFyQixxQkFBcUI7UUFDdkgsbUJBQW1CLEdBQW5CLG1CQUFtQjtRQUFFLDBCQUEwQixHQUExQiwwQkFBMEI7UUFBRSwyQkFBMkIsR0FBM0IsMkJBQTJCO1FBQzVFLHVCQUF1QixHQUF2Qix1QkFBdUI7UUFBRSxxQkFBcUIsR0FBckIscUJBQXFCIiwiZmlsZSI6ImxpYi90b3VjaC1lbnJvbGwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBleGVjIH0gZnJvbSAndGVlbl9wcm9jZXNzJztcblxubGV0IHRvdWNoRW5yb2xsTWVudUtleXMgPSBbJ1RvZ2dsZSBFbnJvbGxlZCBTdGF0ZScsICdUb3VjaCBJRCBFbnJvbGxlZCddO1xubGV0IHRvdWNoRW5yb2xsQmFja3VwcztcbmNvbnN0IE5TX1VTRVJfS0VZX0VRVUlWQUxFTlRTID0gJ05TVXNlcktleUVxdWl2YWxlbnRzJztcbmNvbnN0IFRPVUNIX0VOUk9MTF9LRVlfQ09ERSA9ICdAfiRedCc7XG5cbmFzeW5jIGZ1bmN0aW9uIHNldFRvdWNoRW5yb2xsS2V5ICgpIHtcbiAgYXdhaXQgYmFja3VwVG91Y2hFbnJvbGxTaG9ydGN1dHMoKTtcbiAgZm9yIChsZXQga2V5IG9mIHRvdWNoRW5yb2xsTWVudUtleXMpIHtcbiAgICBhd2FpdCBzZXRVc2VyRGVmYXVsdChOU19VU0VSX0tFWV9FUVVJVkFMRU5UUywga2V5LCBUT1VDSF9FTlJPTExfS0VZX0NPREUpO1xuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHNldFRvdWNoRW5yb2xsS2V5cyAocGFpcnMpIHtcbiAgZm9yIChsZXQgW2tleSwgdmFsdWVdIG9mIHBhaXJzKSB7XG4gICAgYXdhaXQgc2V0VXNlckRlZmF1bHQoTlNfVVNFUl9LRVlfRVFVSVZBTEVOVFMsIGtleSwgdmFsdWUpO1xuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldFRvdWNoRW5yb2xsS2V5cyAoKSB7XG4gIGxldCBiYWNrdXBzID0gW107XG4gIGZvciAobGV0IGtleSBvZiB0b3VjaEVucm9sbE1lbnVLZXlzKSB7XG4gICAgYmFja3Vwcy5wdXNoKFtrZXksIGF3YWl0IGdldFVzZXJEZWZhdWx0KE5TX1VTRVJfS0VZX0VRVUlWQUxFTlRTLCBrZXkpXSk7XG4gIH1cbiAgcmV0dXJuIGJhY2t1cHM7XG59XG5cbi8qKlxuICogR2V0IE1hY09TIFVzZXIgRGVmYXVsdHMgYnkgZG9tYWluIGFuZCBrZXkgKGZvciByZWZlcmVuY2U6IGBtYW4gZGVmYXVsdHNgKVxuICogQHBhcmFtIHsqfSBkb21haW4ge3N0cmluZ31cbiAqIEBwYXJhbSB7Kn0ga2V5IHtzdHJpbmd8bnVtYmVyfGJvb2xlYW59XG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGdldFVzZXJEZWZhdWx0IChkb21haW4sIGtleSkge1xuICBsZXQgcmVzO1xuICB0cnkge1xuICAgIC8vIElmIGl0IGRvZXNuJ3QgZmluZCBhbnl0aGluZyBmb3IgdGhpcyBkb21haW4sIGl0IHdpbGwgdGhyb3cgYW4gZXJyb3Igc28gcmV0dXJuIHVuZGVmaW5lZFxuICAgIHJlcyA9IGF3YWl0IGV4ZWMoJ2RlZmF1bHRzJywgWydyZWFkJywgJ0FwcGxlIEdsb2JhbCBEb21haW4nLCBkb21haW5dKTtcbiAgfSBjYXRjaCAoc3RkZXJyKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGxldCBzdGRvdXQgPSByZXMuc3Rkb3V0O1xuXG4gIC8vIFBhcnNlIHRoZSByZXN1bHQgaW50byBhIEphdmFzY3JpcHQgYXJyYXlcbiAgbGV0IG5zVXNlcktleUFyciA9IHN0ZG91dC50cmltKClcbiAgICAucmVwbGFjZSgvXnsvLCAnJykgLy8gUmVtb3ZlIGxlYWRpbmcge1xuICAgIC5yZXBsYWNlKC99JC8sICcnKSAvLyBSZW1vdmUgdHJhaWxpbmcgfVxuICAgIC50cmltKClcbiAgICAucmVwbGFjZSgvOyQvLCAnJykgLy8gUmVtb3ZlIHRyYWlsaW5nIHNlbWljb2xvblxuICAgIC5zcGxpdCgnOycpIC8vIEJyZWFrIHVwIGV4cHJlc3Npb25zIGJ5IHNlbWljb2xvblxuICAgIC5tYXAoKGV4cHIpID0+IHtcbiAgICAgIGxldCBba2V5LCB2YWx1ZV0gPSBleHByLnNwbGl0KCc9Jyk7XG4gICAgICBrZXkgPSBrZXkudHJpbSgpLnJlcGxhY2UoL15cIi8sICcnKS5yZXBsYWNlKC9cIiQvLCAnJyk7XG4gICAgICB2YWx1ZSA9IHZhbHVlLnRyaW0oKS5yZXBsYWNlKC9eXCIvLCAnJykucmVwbGFjZSgvXCIkLywgJycpO1xuICAgICAgcmV0dXJuIFtrZXksIHZhbHVlXTtcbiAgICB9KTtcblxuICBcbiAgZm9yIChsZXQgW3Rlc3RLZXksIHZhbHVlXSBvZiBuc1VzZXJLZXlBcnIpIHtcbiAgICBpZiAodGVzdEtleSA9PT0ga2V5KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvXFxcXFxcXFwvZywgJ1xcXFwnKTtcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBTZXRzIGEgTWFjT1MgVXNlciBEZWZhdWx0IHZhbHVlIG9uIGEgZG9tYWluXG4gKiBAcGFyYW0geyp9IGRvbWFpbiBcbiAqIEBwYXJhbSB7Kn0ga2V5IFxuICogQHBhcmFtIHsqfSB2YWx1ZSBcbiAqL1xuYXN5bmMgZnVuY3Rpb24gc2V0VXNlckRlZmF1bHQgKGRvbWFpbiwga2V5LCB2YWx1ZSkge1xuICBhd2FpdCBleGVjKCdkZWZhdWx0cycsIFsnd3JpdGUnLCAnQXBwbGUgR2xvYmFsIERvbWFpbicsIGRvbWFpbiwgJy1kaWN0LWFkZCcsIGtleSwgdHlwZW9mKHZhbHVlKSA9PT0gJ3VuZGVmaW5lZCcgPyAnbmlsJyA6IHZhbHVlXSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGJhY2t1cFRvdWNoRW5yb2xsU2hvcnRjdXRzICgpIHtcbiAgaWYgKCF0b3VjaEVucm9sbEJhY2t1cHMpIHtcbiAgICB0b3VjaEVucm9sbEJhY2t1cHMgPSBhd2FpdCBnZXRUb3VjaEVucm9sbEtleXMoKTtcbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiByZXN0b3JlVG91Y2hFbnJvbGxTaG9ydGN1dHMgKCkge1xuICBpZiAodG91Y2hFbnJvbGxCYWNrdXBzKSB7XG4gICAgYXdhaXQgc2V0VG91Y2hFbnJvbGxLZXlzKHRvdWNoRW5yb2xsQmFja3Vwcyk7XG4gICAgdG91Y2hFbnJvbGxCYWNrdXBzID0gdW5kZWZpbmVkO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldFRvdWNoRW5yb2xsQmFja3VwcyAoKSB7XG4gIHJldHVybiB0b3VjaEVucm9sbEJhY2t1cHM7XG59XG5cbmV4cG9ydCB7IHNldFRvdWNoRW5yb2xsS2V5LCBnZXRUb3VjaEVucm9sbEtleXMsIHNldFRvdWNoRW5yb2xsS2V5cywgZ2V0VXNlckRlZmF1bHQsIHNldFVzZXJEZWZhdWx0LCBnZXRUb3VjaEVucm9sbEJhY2t1cHMsXG4gIHRvdWNoRW5yb2xsTWVudUtleXMsIGJhY2t1cFRvdWNoRW5yb2xsU2hvcnRjdXRzLCByZXN0b3JlVG91Y2hFbnJvbGxTaG9ydGN1dHMsXG4gIE5TX1VTRVJfS0VZX0VRVUlWQUxFTlRTLCBUT1VDSF9FTlJPTExfS0VZX0NPREV9O1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9
