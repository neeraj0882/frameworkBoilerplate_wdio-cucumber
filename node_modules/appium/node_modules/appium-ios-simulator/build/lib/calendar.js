// import Simulator from './simulator-xcode-6';
'use strict';

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _appiumSupport = require('appium-support');

var _utils = require('./utils');

var Calendar = (function () {
  function Calendar(sharedResourcesDir) {
    _classCallCheck(this, Calendar);

    this.sharedResourcesDir = sharedResourcesDir;
  }

  _createClass(Calendar, [{
    key: 'getDB',
    value: function getDB() {
      var tccPath;
      return _regeneratorRuntime.async(function getDB$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            if (!this.db) {
              context$2$0.next = 2;
              break;
            }

            return context$2$0.abrupt('return', this.db);

          case 2:
            tccPath = _path2['default'].resolve(this.sharedResourcesDir, 'Library', 'TCC');
            context$2$0.next = 5;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(tccPath));

          case 5:
            if (context$2$0.sent) {
              context$2$0.next = 8;
              break;
            }

            context$2$0.next = 8;
            return _regeneratorRuntime.awrap((0, _appiumSupport.mkdirp)(tccPath));

          case 8:

            this.db = _path2['default'].resolve(tccPath, 'TCC.db');
            context$2$0.next = 11;
            return _regeneratorRuntime.awrap((0, _utils.execSQLiteQuery)(this.db, 'CREATE TABLE IF NOT EXISTS access (\n      service TEXT NOT NULL DEFAULT \'\', \n      client TEXT NOT NULL DEFAULT \'\', \n      client_type INTEGER,\n      allowed INTEGER,\n      prompt_count INTEGER,\n      csreq BLOB NOT NULL DEFAULT \'\', \n      policy_ID INTEGER, \n      PRIMARY KEY(service, client, client_type)\n    );'.replace(/\n/g, '')));

          case 11:
            return context$2$0.abrupt('return', this.db);

          case 12:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'getCalendarRowCount',
    value: function getCalendarRowCount(bundleID) {
      var db, count;
      return _regeneratorRuntime.async(function getCalendarRowCount$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            context$2$0.next = 2;
            return _regeneratorRuntime.awrap(this.getDB());

          case 2:
            db = context$2$0.sent;
            context$2$0.next = 5;
            return _regeneratorRuntime.awrap((0, _utils.execSQLiteQuery)(db, 'SELECT count(*) FROM access WHERE client=\'?\' AND service=\'kTCCServiceCalendar\';', bundleID));

          case 5:
            count = context$2$0.sent;
            return context$2$0.abrupt('return', parseInt(count.stdout.split('=')[1], 10));

          case 7:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'hasCalendarAccess',
    value: function hasCalendarAccess(bundleID) {
      var count;
      return _regeneratorRuntime.async(function hasCalendarAccess$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            context$2$0.t0 = _regeneratorRuntime;
            context$2$0.next = 3;
            return _regeneratorRuntime.awrap(this.getDB());

          case 3:
            context$2$0.t1 = context$2$0.sent;
            context$2$0.t2 = bundleID;
            context$2$0.t3 = (0, _utils.execSQLiteQuery)(context$2$0.t1, 'SELECT count(*) FROM access WHERE client=\'?\' AND allowed=1 AND service=\'kTCCServiceCalendar\';', context$2$0.t2);
            context$2$0.next = 8;
            return context$2$0.t0.awrap.call(context$2$0.t0, context$2$0.t3);

          case 8:
            count = context$2$0.sent;
            return context$2$0.abrupt('return', parseInt(count.stdout.split('=')[1], 10) > 0);

          case 10:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'enableCalendarAccess',
    value: function enableCalendarAccess(bundleID) {
      var db;
      return _regeneratorRuntime.async(function enableCalendarAccess$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            context$2$0.next = 2;
            return _regeneratorRuntime.awrap(this.getDB());

          case 2:
            db = context$2$0.sent;
            context$2$0.next = 5;
            return _regeneratorRuntime.awrap(this.getCalendarRowCount(bundleID));

          case 5:
            context$2$0.t0 = context$2$0.sent;

            if (!(context$2$0.t0 > 0)) {
              context$2$0.next = 11;
              break;
            }

            context$2$0.next = 9;
            return _regeneratorRuntime.awrap((0, _utils.execSQLiteQuery)(db, 'UPDATE \'access\' SET \n        service=\'kTCCServiceCalendar\', \n        client_type=0, \n        allowed=1, \n        prompt_count=1,\n        csreq=0\n      WHERE client=\'?\' AND service=\'kTCCServiceCalendar\''.replace(/\n/g, ' '), bundleID));

          case 9:
            context$2$0.next = 13;
            break;

          case 11:
            context$2$0.next = 13;
            return _regeneratorRuntime.awrap((0, _utils.execSQLiteQuery)(db, 'INSERT INTO \'access\' VALUES (\'kTCCServiceCalendar\', \'?\', 0, 1, 1, 0, 0);', bundleID));

          case 13:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'disableCalendarAccess',
    value: function disableCalendarAccess(bundleID) {
      var db;
      return _regeneratorRuntime.async(function disableCalendarAccess$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            context$2$0.next = 2;
            return _regeneratorRuntime.awrap(this.getDB());

          case 2:
            db = context$2$0.sent;
            context$2$0.next = 5;
            return _regeneratorRuntime.awrap(this.getCalendarRowCount(bundleID));

          case 5:
            context$2$0.t0 = context$2$0.sent;

            if (!(context$2$0.t0 > 0)) {
              context$2$0.next = 9;
              break;
            }

            context$2$0.next = 9;
            return _regeneratorRuntime.awrap((0, _utils.execSQLiteQuery)(db, 'DELETE FROM \'access\' WHERE client=\'?\' AND service=\'kTCCServiceCalendar\''.replace(/\n/g, ' '), bundleID));

          case 9:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }]);

  return Calendar;
})();

exports['default'] = Calendar;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jYWxlbmRhci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7b0JBQ2lCLE1BQU07Ozs7NkJBQ0ksZ0JBQWdCOztxQkFDWCxTQUFTOztJQUVwQixRQUFRO0FBRWYsV0FGTyxRQUFRLENBRWQsa0JBQWtCLEVBQUU7MEJBRmQsUUFBUTs7QUFHekIsUUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO0dBQzlDOztlQUprQixRQUFROztXQU1mO1VBS04sT0FBTzs7OztpQkFKUCxJQUFJLENBQUMsRUFBRTs7Ozs7Z0RBQ0YsSUFBSSxDQUFDLEVBQUU7OztBQUdaLG1CQUFPLEdBQUcsa0JBQUssT0FBTyxDQUFDLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxTQUFTLEVBQUUsS0FBSyxDQUFDOzs2Q0FDekQsa0JBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQzs7Ozs7Ozs7OzZDQUN0QiwyQkFBTyxPQUFPLENBQUM7Ozs7QUFHdkIsZ0JBQUksQ0FBQyxFQUFFLEdBQUcsa0JBQUssT0FBTyxDQUFDLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQzs7NkNBQ3BDLDRCQUFnQixJQUFJLENBQUMsRUFBRSxFQUFFLDRVQVMzQixPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDOzs7Z0RBRWhCLElBQUksQ0FBQyxFQUFFOzs7Ozs7O0tBQ2Y7OztXQUV5Qiw2QkFBQyxRQUFRO1VBQzdCLEVBQUUsRUFDRixLQUFLOzs7Ozs2Q0FETSxJQUFJLENBQUMsS0FBSyxFQUFFOzs7QUFBdkIsY0FBRTs7NkNBQ1ksNEJBQWdCLEVBQUUseUZBQXFGLFFBQVEsQ0FBQzs7O0FBQTlILGlCQUFLO2dEQUNGLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7Ozs7Ozs7S0FDaEQ7OztXQUV1QiwyQkFBQyxRQUFRO1VBQzNCLEtBQUs7Ozs7Ozs2Q0FBK0IsSUFBSSxDQUFDLEtBQUssRUFBRTs7Ozs2QkFBbUcsUUFBUTs7Ozs7O0FBQTNKLGlCQUFLO2dEQUNGLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDOzs7Ozs7O0tBQ3BEOzs7V0FFMEIsOEJBQUMsUUFBUTtVQUM5QixFQUFFOzs7Ozs2Q0FBUyxJQUFJLENBQUMsS0FBSyxFQUFFOzs7QUFBdkIsY0FBRTs7NkNBRUssSUFBSSxDQUFDLG1CQUFtQixDQUFDLFFBQVEsQ0FBQzs7Ozs7bUNBQUksQ0FBQzs7Ozs7OzZDQUMxQyw0QkFBZ0IsRUFBRSxFQUFFLDBOQU0wQixPQUFPLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxFQUFFLFFBQVEsQ0FBQzs7Ozs7Ozs7NkNBRTVFLDRCQUFnQixFQUFFLG9GQUE4RSxRQUFRLENBQUM7Ozs7Ozs7S0FFbEg7OztXQUUyQiwrQkFBQyxRQUFRO1VBQy9CLEVBQUU7Ozs7OzZDQUFTLElBQUksQ0FBQyxLQUFLLEVBQUU7OztBQUF2QixjQUFFOzs2Q0FFSyxJQUFJLENBQUMsbUJBQW1CLENBQUMsUUFBUSxDQUFDOzs7OzttQ0FBSSxDQUFDOzs7Ozs7NkNBQzFDLDRCQUFnQixFQUFFLEVBQUUsZ0ZBQTBFLE9BQU8sQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLEVBQUUsUUFBUSxDQUFDOzs7Ozs7O0tBRXJJOzs7U0FoRWtCLFFBQVE7OztxQkFBUixRQUFRIiwiZmlsZSI6ImxpYi9jYWxlbmRhci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCBTaW11bGF0b3IgZnJvbSAnLi9zaW11bGF0b3IteGNvZGUtNic7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IGZzLCBta2RpcnAgfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5pbXBvcnQgeyBleGVjU1FMaXRlUXVlcnkgfSBmcm9tICcuL3V0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FsZW5kYXIge1xuXG4gIGNvbnN0cnVjdG9yIChzaGFyZWRSZXNvdXJjZXNEaXIpIHtcbiAgICB0aGlzLnNoYXJlZFJlc291cmNlc0RpciA9IHNoYXJlZFJlc291cmNlc0RpcjtcbiAgfVxuXG4gIGFzeW5jIGdldERCICgpIHtcbiAgICBpZiAodGhpcy5kYikge1xuICAgICAgcmV0dXJuIHRoaXMuZGI7XG4gICAgfVxuXG4gICAgbGV0IHRjY1BhdGggPSBwYXRoLnJlc29sdmUodGhpcy5zaGFyZWRSZXNvdXJjZXNEaXIsICdMaWJyYXJ5JywgJ1RDQycpO1xuICAgIGlmICghKGF3YWl0IGZzLmV4aXN0cyh0Y2NQYXRoKSkpIHtcbiAgICAgIGF3YWl0IG1rZGlycCh0Y2NQYXRoKTtcbiAgICB9XG5cbiAgICB0aGlzLmRiID0gcGF0aC5yZXNvbHZlKHRjY1BhdGgsICdUQ0MuZGInKTtcbiAgICBhd2FpdCBleGVjU1FMaXRlUXVlcnkodGhpcy5kYiwgYENSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGFjY2VzcyAoXG4gICAgICBzZXJ2aWNlIFRFWFQgTk9UIE5VTEwgREVGQVVMVCAnJywgXG4gICAgICBjbGllbnQgVEVYVCBOT1QgTlVMTCBERUZBVUxUICcnLCBcbiAgICAgIGNsaWVudF90eXBlIElOVEVHRVIsXG4gICAgICBhbGxvd2VkIElOVEVHRVIsXG4gICAgICBwcm9tcHRfY291bnQgSU5URUdFUixcbiAgICAgIGNzcmVxIEJMT0IgTk9UIE5VTEwgREVGQVVMVCAnJywgXG4gICAgICBwb2xpY3lfSUQgSU5URUdFUiwgXG4gICAgICBQUklNQVJZIEtFWShzZXJ2aWNlLCBjbGllbnQsIGNsaWVudF90eXBlKVxuICAgICk7YC5yZXBsYWNlKC9cXG4vZywgJycpKTtcblxuICAgIHJldHVybiB0aGlzLmRiO1xuICB9XG5cbiAgYXN5bmMgZ2V0Q2FsZW5kYXJSb3dDb3VudCAoYnVuZGxlSUQpIHtcbiAgICBsZXQgZGIgPSBhd2FpdCB0aGlzLmdldERCKCk7XG4gICAgbGV0IGNvdW50ID0gYXdhaXQgZXhlY1NRTGl0ZVF1ZXJ5KGRiLCBgU0VMRUNUIGNvdW50KCopIEZST00gYWNjZXNzIFdIRVJFIGNsaWVudD0nPycgQU5EIHNlcnZpY2U9J2tUQ0NTZXJ2aWNlQ2FsZW5kYXInO2AsIGJ1bmRsZUlEKTtcbiAgICByZXR1cm4gcGFyc2VJbnQoY291bnQuc3Rkb3V0LnNwbGl0KCc9JylbMV0sIDEwKTtcbiAgfSBcblxuICBhc3luYyBoYXNDYWxlbmRhckFjY2VzcyAoYnVuZGxlSUQpIHtcbiAgICBsZXQgY291bnQgPSBhd2FpdCBleGVjU1FMaXRlUXVlcnkoYXdhaXQgdGhpcy5nZXREQigpLCBgU0VMRUNUIGNvdW50KCopIEZST00gYWNjZXNzIFdIRVJFIGNsaWVudD0nPycgQU5EIGFsbG93ZWQ9MSBBTkQgc2VydmljZT0na1RDQ1NlcnZpY2VDYWxlbmRhcic7YCwgYnVuZGxlSUQpO1xuICAgIHJldHVybiBwYXJzZUludChjb3VudC5zdGRvdXQuc3BsaXQoJz0nKVsxXSwgMTApID4gMDtcbiAgfVxuXG4gIGFzeW5jIGVuYWJsZUNhbGVuZGFyQWNjZXNzIChidW5kbGVJRCkge1xuICAgIGxldCBkYiA9IGF3YWl0IHRoaXMuZ2V0REIoKTtcblxuICAgIGlmICgoYXdhaXQgdGhpcy5nZXRDYWxlbmRhclJvd0NvdW50KGJ1bmRsZUlEKSkgPiAwKSB7XG4gICAgICBhd2FpdCBleGVjU1FMaXRlUXVlcnkoZGIsIGBVUERBVEUgJ2FjY2VzcycgU0VUIFxuICAgICAgICBzZXJ2aWNlPSdrVENDU2VydmljZUNhbGVuZGFyJywgXG4gICAgICAgIGNsaWVudF90eXBlPTAsIFxuICAgICAgICBhbGxvd2VkPTEsIFxuICAgICAgICBwcm9tcHRfY291bnQ9MSxcbiAgICAgICAgY3NyZXE9MFxuICAgICAgV0hFUkUgY2xpZW50PSc/JyBBTkQgc2VydmljZT0na1RDQ1NlcnZpY2VDYWxlbmRhcidgLnJlcGxhY2UoL1xcbi9nLCAnICcpLCBidW5kbGVJRCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGF3YWl0IGV4ZWNTUUxpdGVRdWVyeShkYiwgYElOU0VSVCBJTlRPICdhY2Nlc3MnIFZBTFVFUyAoJ2tUQ0NTZXJ2aWNlQ2FsZW5kYXInLCAnPycsIDAsIDEsIDEsIDAsIDApO2AsIGJ1bmRsZUlEKTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBkaXNhYmxlQ2FsZW5kYXJBY2Nlc3MgKGJ1bmRsZUlEKSB7XG4gICAgbGV0IGRiID0gYXdhaXQgdGhpcy5nZXREQigpO1xuXG4gICAgaWYgKChhd2FpdCB0aGlzLmdldENhbGVuZGFyUm93Q291bnQoYnVuZGxlSUQpKSA+IDApIHtcbiAgICAgIGF3YWl0IGV4ZWNTUUxpdGVRdWVyeShkYiwgYERFTEVURSBGUk9NICdhY2Nlc3MnIFdIRVJFIGNsaWVudD0nPycgQU5EIHNlcnZpY2U9J2tUQ0NTZXJ2aWNlQ2FsZW5kYXInYC5yZXBsYWNlKC9cXG4vZywgJyAnKSwgYnVuZGxlSUQpO1xuICAgIH1cbiAgfVxufSJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
