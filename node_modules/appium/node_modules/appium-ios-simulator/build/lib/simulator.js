'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _simulatorXcode6 = require('./simulator-xcode-6');

var _simulatorXcode62 = _interopRequireDefault(_simulatorXcode6);

var _simulatorXcode7 = require('./simulator-xcode-7');

var _simulatorXcode72 = _interopRequireDefault(_simulatorXcode7);

var _simulatorXcode73 = require('./simulator-xcode-7.3');

var _simulatorXcode732 = _interopRequireDefault(_simulatorXcode73);

var _simulatorXcode8 = require('./simulator-xcode-8');

var _simulatorXcode82 = _interopRequireDefault(_simulatorXcode8);

var _simulatorXcode9 = require('./simulator-xcode-9');

var _simulatorXcode92 = _interopRequireDefault(_simulatorXcode9);

var _utils = require('./utils');

var _appiumXcode = require('appium-xcode');

var _appiumXcode2 = _interopRequireDefault(_appiumXcode);

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

function handleUnsupportedXcode(xcodeVersion) {
  if (xcodeVersion.major < 6) {
    throw new Error('Tried to use an iOS simulator with xcode ' + ('version ' + xcodeVersion.versionString + ' but only Xcode version ') + '6.0.0 and up are supported');
  } else if (xcodeVersion.major >= 10) {
    throw new Error('Xcode version ' + xcodeVersion.versionString + ' is ' + 'not yet supported');
  }
}

function getSimulator(udid) {
  var xcodeVersion;
  return _regeneratorRuntime.async(function getSimulator$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(_appiumXcode2['default'].getVersion(true));

      case 2:
        xcodeVersion = context$1$0.sent;
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap((0, _utils.simExists)(udid));

      case 5:
        if (context$1$0.sent) {
          context$1$0.next = 7;
          break;
        }

        throw new Error('No sim found with udid ' + udid);

      case 7:

        handleUnsupportedXcode(xcodeVersion);

        _logger2['default'].info('Constructing iOS simulator for Xcode version ' + xcodeVersion.versionString + ' ' + ('with udid \'' + udid + '\''));

        if (!(xcodeVersion.major === 6)) {
          context$1$0.next = 13;
          break;
        }

        return context$1$0.abrupt('return', new _simulatorXcode62['default'](udid, xcodeVersion));

      case 13:
        if (!(xcodeVersion.major >= 7 && xcodeVersion.major < 8)) {
          context$1$0.next = 21;
          break;
        }

        if (!(xcodeVersion.minor < 3)) {
          context$1$0.next = 18;
          break;
        }

        return context$1$0.abrupt('return', new _simulatorXcode72['default'](udid, xcodeVersion));

      case 18:
        return context$1$0.abrupt('return', new _simulatorXcode732['default'](udid, xcodeVersion));

      case 19:
        context$1$0.next = 27;
        break;

      case 21:
        if (!(xcodeVersion.major === 8)) {
          context$1$0.next = 25;
          break;
        }

        return context$1$0.abrupt('return', new _simulatorXcode82['default'](udid, xcodeVersion));

      case 25:
        if (!(xcodeVersion.major === 9)) {
          context$1$0.next = 27;
          break;
        }

        return context$1$0.abrupt('return', new _simulatorXcode92['default'](udid, xcodeVersion));

      case 27:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function getDeviceString(opts) {
  var xcodeVersion;
  return _regeneratorRuntime.async(function getDeviceString$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(_appiumXcode2['default'].getVersion(true));

      case 2:
        xcodeVersion = context$1$0.sent;

        handleUnsupportedXcode(xcodeVersion);

        _logger2['default'].info('Retrieving device name string for Xcode version ' + xcodeVersion.versionString);

        if (!(xcodeVersion.major >= 8)) {
          context$1$0.next = 9;
          break;
        }

        return context$1$0.abrupt('return', _simulatorXcode72['default'].getDeviceString(opts));

      case 9:
        if (!(xcodeVersion.major === 7)) {
          context$1$0.next = 13;
          break;
        }

        return context$1$0.abrupt('return', _simulatorXcode72['default'].getDeviceString(opts));

      case 13:
        if (!(xcodeVersion.major === 6)) {
          context$1$0.next = 15;
          break;
        }

        return context$1$0.abrupt('return', _simulatorXcode62['default'].getDeviceString(opts));

      case 15:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

exports.getSimulator = getSimulator;
exports.getDeviceString = getDeviceString;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zaW11bGF0b3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OzsrQkFBNEIscUJBQXFCOzs7OytCQUNyQixxQkFBcUI7Ozs7Z0NBQ3BCLHVCQUF1Qjs7OzsrQkFDeEIscUJBQXFCOzs7OytCQUNyQixxQkFBcUI7Ozs7cUJBQ3ZCLFNBQVM7OzJCQUNqQixjQUFjOzs7O3NCQUNoQixVQUFVOzs7O0FBRzFCLFNBQVMsc0JBQXNCLENBQUUsWUFBWSxFQUFFO0FBQzdDLE1BQUksWUFBWSxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUU7QUFDMUIsVUFBTSxJQUFJLEtBQUssQ0FBQyw0REFDVyxZQUFZLENBQUMsYUFBYSw4QkFBMEIsK0JBQ25DLENBQUMsQ0FBQztHQUMvQyxNQUFNLElBQUksWUFBWSxDQUFDLEtBQUssSUFBSSxFQUFFLEVBQUU7QUFDbkMsVUFBTSxJQUFJLEtBQUssQ0FBQyxtQkFBaUIsWUFBWSxDQUFDLGFBQWEsK0JBQ3hCLENBQUMsQ0FBQztHQUN0QztDQUNGOztBQUVELFNBQWUsWUFBWSxDQUFFLElBQUk7TUFDM0IsWUFBWTs7Ozs7eUNBQVMseUJBQU0sVUFBVSxDQUFDLElBQUksQ0FBQzs7O0FBQTNDLG9CQUFZOzt5Q0FFTCxzQkFBVSxJQUFJLENBQUM7Ozs7Ozs7O2NBQ2xCLElBQUksS0FBSyw2QkFBMkIsSUFBSSxDQUFHOzs7O0FBR25ELDhCQUFzQixDQUFDLFlBQVksQ0FBQyxDQUFDOztBQUVyQyw0QkFBSSxJQUFJLENBQUMsa0RBQWdELFlBQVksQ0FBQyxhQUFhLDJCQUM1RCxJQUFJLFFBQUcsQ0FBQyxDQUFDOztjQUM1QixZQUFZLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQTs7Ozs7NENBQ25CLGlDQUFvQixJQUFJLEVBQUUsWUFBWSxDQUFDOzs7Y0FDckMsWUFBWSxDQUFDLEtBQUssSUFBSSxDQUFDLElBQUksWUFBWSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUE7Ozs7O2NBQ3RELFlBQVksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFBOzs7Ozs0Q0FDakIsaUNBQW9CLElBQUksRUFBRSxZQUFZLENBQUM7Ozs0Q0FFdkMsa0NBQXFCLElBQUksRUFBRSxZQUFZLENBQUM7Ozs7Ozs7Y0FFeEMsWUFBWSxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUE7Ozs7OzRDQUMxQixpQ0FBb0IsSUFBSSxFQUFFLFlBQVksQ0FBQzs7O2NBQ3JDLFlBQVksQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFBOzs7Ozs0Q0FDMUIsaUNBQW9CLElBQUksRUFBRSxZQUFZLENBQUM7Ozs7Ozs7Q0FFakQ7O0FBRUQsU0FBZSxlQUFlLENBQUUsSUFBSTtNQUM5QixZQUFZOzs7Ozt5Q0FBUyx5QkFBTSxVQUFVLENBQUMsSUFBSSxDQUFDOzs7QUFBM0Msb0JBQVk7O0FBRWhCLDhCQUFzQixDQUFDLFlBQVksQ0FBQyxDQUFDOztBQUVyQyw0QkFBSSxJQUFJLHNEQUFvRCxZQUFZLENBQUMsYUFBYSxDQUFHLENBQUM7O2NBQ3RGLFlBQVksQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFBOzs7Ozs0Q0FDbEIsNkJBQWdCLGVBQWUsQ0FBQyxJQUFJLENBQUM7OztjQUNuQyxZQUFZLENBQUMsS0FBSyxLQUFLLENBQUMsQ0FBQTs7Ozs7NENBQzFCLDZCQUFnQixlQUFlLENBQUMsSUFBSSxDQUFDOzs7Y0FDbkMsWUFBWSxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUE7Ozs7OzRDQUMxQiw2QkFBZ0IsZUFBZSxDQUFDLElBQUksQ0FBQzs7Ozs7OztDQUUvQzs7UUFFUSxZQUFZLEdBQVosWUFBWTtRQUFFLGVBQWUsR0FBZixlQUFlIiwiZmlsZSI6ImxpYi9zaW11bGF0b3IuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2ltdWxhdG9yWGNvZGU2IGZyb20gJy4vc2ltdWxhdG9yLXhjb2RlLTYnO1xuaW1wb3J0IFNpbXVsYXRvclhjb2RlNyBmcm9tICcuL3NpbXVsYXRvci14Y29kZS03JztcbmltcG9ydCBTaW11bGF0b3JYY29kZTczIGZyb20gJy4vc2ltdWxhdG9yLXhjb2RlLTcuMyc7XG5pbXBvcnQgU2ltdWxhdG9yWGNvZGU4IGZyb20gJy4vc2ltdWxhdG9yLXhjb2RlLTgnO1xuaW1wb3J0IFNpbXVsYXRvclhjb2RlOSBmcm9tICcuL3NpbXVsYXRvci14Y29kZS05JztcbmltcG9ydCB7IHNpbUV4aXN0cyB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IHhjb2RlIGZyb20gJ2FwcGl1bS14Y29kZSc7XG5pbXBvcnQgbG9nIGZyb20gJy4vbG9nZ2VyJztcblxuXG5mdW5jdGlvbiBoYW5kbGVVbnN1cHBvcnRlZFhjb2RlICh4Y29kZVZlcnNpb24pIHtcbiAgaWYgKHhjb2RlVmVyc2lvbi5tYWpvciA8IDYpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFRyaWVkIHRvIHVzZSBhbiBpT1Mgc2ltdWxhdG9yIHdpdGggeGNvZGUgYCArXG4gICAgICAgICAgICAgICAgICAgIGB2ZXJzaW9uICR7eGNvZGVWZXJzaW9uLnZlcnNpb25TdHJpbmd9IGJ1dCBvbmx5IFhjb2RlIHZlcnNpb24gYCArXG4gICAgICAgICAgICAgICAgICAgIGA2LjAuMCBhbmQgdXAgYXJlIHN1cHBvcnRlZGApO1xuICB9IGVsc2UgaWYgKHhjb2RlVmVyc2lvbi5tYWpvciA+PSAxMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihgWGNvZGUgdmVyc2lvbiAke3hjb2RlVmVyc2lvbi52ZXJzaW9uU3RyaW5nfSBpcyBgICtcbiAgICAgICAgICAgICAgICAgICAgYG5vdCB5ZXQgc3VwcG9ydGVkYCk7XG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0U2ltdWxhdG9yICh1ZGlkKSB7XG4gIGxldCB4Y29kZVZlcnNpb24gPSBhd2FpdCB4Y29kZS5nZXRWZXJzaW9uKHRydWUpO1xuXG4gIGlmICghYXdhaXQgc2ltRXhpc3RzKHVkaWQpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBObyBzaW0gZm91bmQgd2l0aCB1ZGlkICR7dWRpZH1gKTtcbiAgfVxuXG4gIGhhbmRsZVVuc3VwcG9ydGVkWGNvZGUoeGNvZGVWZXJzaW9uKTtcblxuICBsb2cuaW5mbyhgQ29uc3RydWN0aW5nIGlPUyBzaW11bGF0b3IgZm9yIFhjb2RlIHZlcnNpb24gJHt4Y29kZVZlcnNpb24udmVyc2lvblN0cmluZ30gYCArXG4gICAgICAgICAgIGB3aXRoIHVkaWQgJyR7dWRpZH0nYCk7XG4gIGlmICh4Y29kZVZlcnNpb24ubWFqb3IgPT09IDYpIHtcbiAgICByZXR1cm4gbmV3IFNpbXVsYXRvclhjb2RlNih1ZGlkLCB4Y29kZVZlcnNpb24pO1xuICB9IGVsc2UgaWYgKHhjb2RlVmVyc2lvbi5tYWpvciA+PSA3ICYmIHhjb2RlVmVyc2lvbi5tYWpvciA8IDgpIHtcbiAgICBpZiAoeGNvZGVWZXJzaW9uLm1pbm9yIDwgMykge1xuICAgICAgcmV0dXJuIG5ldyBTaW11bGF0b3JYY29kZTcodWRpZCwgeGNvZGVWZXJzaW9uKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5ldyBTaW11bGF0b3JYY29kZTczKHVkaWQsIHhjb2RlVmVyc2lvbik7XG4gICAgfVxuICB9IGVsc2UgaWYgKHhjb2RlVmVyc2lvbi5tYWpvciA9PT0gOCkge1xuICAgIHJldHVybiBuZXcgU2ltdWxhdG9yWGNvZGU4KHVkaWQsIHhjb2RlVmVyc2lvbik7XG4gIH0gZWxzZSBpZiAoeGNvZGVWZXJzaW9uLm1ham9yID09PSA5KSB7XG4gICAgcmV0dXJuIG5ldyBTaW11bGF0b3JYY29kZTkodWRpZCwgeGNvZGVWZXJzaW9uKTtcbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiBnZXREZXZpY2VTdHJpbmcgKG9wdHMpIHtcbiAgbGV0IHhjb2RlVmVyc2lvbiA9IGF3YWl0IHhjb2RlLmdldFZlcnNpb24odHJ1ZSk7XG5cbiAgaGFuZGxlVW5zdXBwb3J0ZWRYY29kZSh4Y29kZVZlcnNpb24pO1xuXG4gIGxvZy5pbmZvKGBSZXRyaWV2aW5nIGRldmljZSBuYW1lIHN0cmluZyBmb3IgWGNvZGUgdmVyc2lvbiAke3hjb2RlVmVyc2lvbi52ZXJzaW9uU3RyaW5nfWApO1xuICBpZiAoeGNvZGVWZXJzaW9uLm1ham9yID49IDgpIHtcbiAgICByZXR1cm4gU2ltdWxhdG9yWGNvZGU3LmdldERldmljZVN0cmluZyhvcHRzKTtcbiAgfSBlbHNlIGlmICh4Y29kZVZlcnNpb24ubWFqb3IgPT09IDcpIHtcbiAgICByZXR1cm4gU2ltdWxhdG9yWGNvZGU3LmdldERldmljZVN0cmluZyhvcHRzKTtcbiAgfSBlbHNlIGlmICh4Y29kZVZlcnNpb24ubWFqb3IgPT09IDYpIHtcbiAgICByZXR1cm4gU2ltdWxhdG9yWGNvZGU2LmdldERldmljZVN0cmluZyhvcHRzKTtcbiAgfVxufVxuXG5leHBvcnQgeyBnZXRTaW11bGF0b3IsIGdldERldmljZVN0cmluZyB9O1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9
