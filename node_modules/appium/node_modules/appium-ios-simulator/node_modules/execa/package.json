{
  "_args": [
    [
      {
        "raw": "execa@https://registry.npmjs.org/execa/-/execa-0.2.2.tgz",
        "scope": null,
        "escapedName": "execa",
        "name": "execa",
        "rawSpec": "https://registry.npmjs.org/execa/-/execa-0.2.2.tgz",
        "spec": "https://registry.npmjs.org/execa/-/execa-0.2.2.tgz",
        "type": "remote"
      },
      "/Users/saxenan3/myprojects/uiAutomation/mytest_project/node_modules/appium"
    ]
  ],
  "_from": "execa@https://registry.npmjs.org/execa/-/execa-0.2.2.tgz",
  "_id": "execa@0.2.2",
  "_inCache": true,
  "_location": "/appium/appium-ios-simulator/execa",
  "_phantomChildren": {},
  "_requested": {
    "raw": "execa@https://registry.npmjs.org/execa/-/execa-0.2.2.tgz",
    "scope": null,
    "escapedName": "execa",
    "name": "execa",
    "rawSpec": "https://registry.npmjs.org/execa/-/execa-0.2.2.tgz",
    "spec": "https://registry.npmjs.org/execa/-/execa-0.2.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium/appium-ios-simulator",
    "/appium/appium-ios-simulator/fkill"
  ],
  "_resolved": "https://registry.npmjs.org/execa/-/execa-0.2.2.tgz",
  "_shasum": "e2ead472c2c31aad6f73f1ac956eef45e12320cb",
  "_shrinkwrap": null,
  "_spec": "execa@https://registry.npmjs.org/execa/-/execa-0.2.2.tgz",
  "_where": "/Users/saxenan3/myprojects/uiAutomation/mytest_project/node_modules/appium",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/execa/issues"
  },
  "dependencies": {
    "cross-spawn-async": "^2.1.1",
    "npm-run-path": "^1.0.0",
    "object-assign": "^4.0.1",
    "path-key": "^1.0.0",
    "strip-eof": "^1.0.0"
  },
  "description": "A better `child_process`",
  "devDependencies": {
    "ava": "*",
    "cat-names": "^1.0.2",
    "xo": "*"
  },
  "engines": {
    "node": ">=0.12"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/sindresorhus/execa#readme",
  "keywords": [
    "exec",
    "execute",
    "fork",
    "child",
    "process",
    "execfile",
    "spawn",
    "file",
    "shell",
    "bin",
    "binary",
    "binaries",
    "npm",
    "path",
    "local"
  ],
  "license": "MIT",
  "name": "execa",
  "optionalDependencies": {},
  "readme": "# execa [![Build Status](https://travis-ci.org/sindresorhus/execa.svg?branch=master)](https://travis-ci.org/sindresorhus/execa)\n\n> A better [`child_process`](https://nodejs.org/api/child_process.html)\n\n\n## Why\n\n- Promise interface.\n- [Strips EOF](https://github.com/sindresorhus/strip-eof) from the output so you don't have to `stdout.trim()`.\n- Supports [shebang](https://en.wikipedia.org/wiki/Shebang_(Unix)) binaries cross-platform.\n- [Improved Windows support.](https://github.com/IndigoUnited/node-cross-spawn-async#why)\n- Higher max buffer. 10 MB instead of 200 KB.\n- [Executes locally installed binaries by name.](#preferlocal)\n\n\n## Install\n\n```\n$ npm install --save execa\n```\n\n\n## Usage\n\n```js\nconst execa = require('execa');\n\nexeca('echo', ['unicorns']).then(result => {\n\tconsole.log(result.stdout);\n\t//=> 'unicorns'\n});\n\nexeca.shell('echo unicorns').then(result => {\n\tconsole.log(result.stdout);\n\t//=> 'unicorns'\n});\n\n// example of catching an error\nexeca.shell('exit 3').catch(error => {\n\tconsole.log(error);\n\t/*\n\t{\n\t\tmessage: 'Command failed: /bin/sh -c exit 3'\n\t\tkilled: false,\n\t\tcode: 3,\n\t\tsignal: null,\n\t\tcmd: '/bin/sh -c exit 3',\n\t\tstdout: '',\n\t\tstderr: ''\n\t}\n\t*/\n});\n```\n\n\n## API\n\n### execa(file, [arguments], [options])\n\nExecute a file directly.\n\nSame options as [`child_process.execFile`](https://nodejs.org/api/child_process.html#child_process_child_process_execfile_file_args_options_callback).\n\nReturns a promise for a result object with `stdout` and `stderr` properties.\n\n### execa.shell(command, [options])\n\nExecute a command through the system shell. Prefer `execa()` whenever possible, as it's both faster and safer.\n\nSame options as [`child_process.exec`](https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback).\n\nReturns a promise for a result object with `stdout` and `stderr` properties.\n\n### execa.spawn(file, [arguments], [options])\n\nSpawn a file.\n\nSame API as [`child_process.spawn`](https://nodejs.org/api/child_process.html#child_process_child_process_spawn_command_args_options).\n\n### options\n\nAdditional exposed options:\n\n#### stripEof\n\nType: `boolean`<br>\nDefault: `true`\n\n[Strip EOF](https://github.com/sindresorhus/strip-eof) (last newline) from the output.\n\n#### preferLocal\n\nType: `boolean`<br>\nDefault: `true`\n\nPrefer locally installed binaries when looking for a binary to execute.<br>\nIf you `$ npm install foo`, you can then `execa('foo')`.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/execa.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "0.2.2"
}
