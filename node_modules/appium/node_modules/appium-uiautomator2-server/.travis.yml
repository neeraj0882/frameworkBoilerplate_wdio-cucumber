language: android
dist: precise
android:
  components:
    # use the latest revision of Android SDK Tools
    - platform-tools
    - tools
    - build-tools-$ANDROID_BUILD_TOOLS
    - android-22
    - android-24

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    - addon-google_apis-google-19

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-armeabi-v7a-android-24
    - sys-img-armeabi-v7a-android-22
env:
  global:
    - DEVICE=android
    - START_EMU=1
    - ANDROID_EMU_NAME=test
    - ANDROID_EMU_ABI=armeabi-v7a
    - ANDROID_BUILD_TOOLS=26.0.2
    - E2E_TEST_PACKAGE=io.appium.uiautomator2.unittest.test
  matrix:
    - TEST=unit START_EMU=0
    - TEST=GestureCommandsTest ANDROID_EMU_TARGET=android-24
    - TEST=DeviceCommandsTest ANDROID_EMU_TARGET=android-24
    - TEST=ElementCommandsTest ANDROID_EMU_TARGET=android-24
    - TEST=GestureCommandsTest ANDROID_EMU_TARGET=android-22
    - TEST=DeviceCommandsTest ANDROID_EMU_TARGET=android-22
    - TEST=ElementCommandsTest ANDROID_EMU_TARGET=android-22
before_script:
  # node stuff
  - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash
  - nvm install 6
  - node --version
  - npm --version
  - npm install appium-test-support # get the travis emu scripts

  # android stuff
  - android list sdk --extended --no-ui --all
  - android list targets
  
  # npm stuff
  - npm install

  - |
    if [ ${START_EMU} = "1" ]; then
      echo no | android create avd --force -n ${ANDROID_EMU_NAME} -t ${ANDROID_EMU_TARGET} --abi ${ANDROID_EMU_ABI} --sdcard 200M
      emulator -avd ${ANDROID_EMU_NAME} -no-audio -no-window &
    fi

  # make sure emulator started
  - $(npm bin)/android-emu-travis-post
script:
  - |
    if [ "$TEST" == "unit" ]; then
      ./gradlew testServerDebugUnitTest
    else
      stdbuf -oL adb logcat -v time *:S appium:V appium-e2e-tests:V TestRunner:V *:E *:F > logcat.txt &
      ./gradlew connectedE2eTestDebugAndroidTest \
        -Pandroid.testInstrumentationRunnerArguments.class=$E2E_TEST_PACKAGE.$TEST \
        -Pandroid.testInstrumentationRunnerArguments.notAnnotation=$E2E_TEST_PACKAGE.internal.SkipHeadlessDevices
    fi
after_failure:
  - |
    if [ "$TEST" != "unit" ]; then
      echo -e "----UIAUTOMATOR DUMPS----\n"
      adb pull /sdcard/hierarchy .
      for f in *.xml
      do
        echo -e "Hierarchy dump for $f\n"
        cat "$f"
      done

      echo -e "----LOGCAT----\n"
      cat logcat.txt
    fi
