'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});
var commands = {};

commands.getScreenshot = function callee$0$0() {
  var commandObject, commandJSON, data;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        commandObject = {
          name: 'GetScreenShot'
        };
        commandJSON = JSON.stringify(commandObject);
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.executeSocketCommand(commandJSON));

      case 4:
        data = context$1$0.sent;

        if (!data) {
          context$1$0.next = 9;
          break;
        }

        return context$1$0.abrupt('return', new Buffer(data).toString('base64'));

      case 9:
        throw new Error("Bad response from GetScreenShot");

      case 10:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

exports['default'] = commands;
module.exports = exports['default'];

// this should never happen but we've received bug reports; this will help us track down
// what's wrong in getTreeForXML
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9zY3JlZW5zaG90LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFJLFFBQVEsR0FBRyxFQUFFLENBQUM7O0FBRWxCLFFBQVEsQ0FBQyxhQUFhLEdBQUc7TUFFbkIsYUFBYSxFQUdiLFdBQVcsRUFFWCxJQUFJOzs7O0FBTEoscUJBQWEsR0FBRztBQUNsQixjQUFJLEVBQUUsZUFBZTtTQUN0QjtBQUNHLG1CQUFXLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUM7O3lDQUU5QixJQUFJLENBQUMsb0JBQW9CLENBQUMsV0FBVyxDQUFDOzs7QUFBbkQsWUFBSTs7YUFFSixJQUFJOzs7Ozs0Q0FFQyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDOzs7Y0FJcEMsSUFBSSxLQUFLLENBQUMsaUNBQWlDLENBQUM7Ozs7Ozs7Q0FFckQsQ0FBQzs7cUJBRWEsUUFBUSIsImZpbGUiOiJsaWIvY29tbWFuZHMvc2NyZWVuc2hvdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBjb21tYW5kcyA9IHt9O1xuXG5jb21tYW5kcy5nZXRTY3JlZW5zaG90ID0gYXN5bmMgZnVuY3Rpb24gKCkge1xuXG4gIHZhciBjb21tYW5kT2JqZWN0ID0ge1xuICAgIG5hbWU6ICdHZXRTY3JlZW5TaG90J1xuICB9O1xuICB2YXIgY29tbWFuZEpTT04gPSBKU09OLnN0cmluZ2lmeShjb21tYW5kT2JqZWN0KTtcblxuICBsZXQgZGF0YSA9IGF3YWl0IHRoaXMuZXhlY3V0ZVNvY2tldENvbW1hbmQoY29tbWFuZEpTT04pO1xuXG4gIGlmIChkYXRhKSB7XG5cbiAgICByZXR1cm4gbmV3IEJ1ZmZlcihkYXRhKS50b1N0cmluZygnYmFzZTY0Jyk7XG4gIH0gZWxzZSB7XG4gICAgLy8gdGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuIGJ1dCB3ZSd2ZSByZWNlaXZlZCBidWcgcmVwb3J0czsgdGhpcyB3aWxsIGhlbHAgdXMgdHJhY2sgZG93blxuICAgIC8vIHdoYXQncyB3cm9uZyBpbiBnZXRUcmVlRm9yWE1MXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQmFkIHJlc3BvbnNlIGZyb20gR2V0U2NyZWVuU2hvdFwiKTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29tbWFuZHM7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
