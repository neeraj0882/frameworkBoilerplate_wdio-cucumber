'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _helpersSession = require('../helpers/session');

var _desired = require('../desired');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('touch', function () {
  var _this = this;

  this.timeout(_helpersSession.MOCHA_TIMEOUT);

  var driver = undefined;
  before(function callee$1$0() {
    var caps;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          caps = _Object$assign({
            appActivity: 'io.appium.android.apis.view.TextFields'
          }, _desired.APIDEMO_CAPS);
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap((0, _helpersSession.initSession)(caps));

        case 3:
          driver = context$2$0.sent;

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersSession.deleteSession)());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should click on an element by the x,y coordinates', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementById('id/edit1'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(el.click());

        case 5:
          context$2$0.prev = 5;
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(el.click());

        case 8:
          context$2$0.next = 13;
          break;

        case 10:
          context$2$0.prev = 10;
          context$2$0.t0 = context$2$0['catch'](5);

          console.log(context$2$0.t0); // eslint-disable-line

        case 13:
          context$2$0.next = 15;
          return _regeneratorRuntime.awrap(el.sendKeys('hello'));

        case 15:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[5, 10]]);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy90b3VjaC1lMmUtc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7b0JBQWlCLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7OzhCQUNhLG9CQUFvQjs7dUJBQ2pELFlBQVk7O0FBR3pDLGtCQUFLLE1BQU0sRUFBRSxDQUFDO0FBQ2Qsa0JBQUssR0FBRyw2QkFBZ0IsQ0FBQzs7QUFFekIsUUFBUSxDQUFDLE9BQU8sRUFBRSxZQUFZOzs7QUFDNUIsTUFBSSxDQUFDLE9BQU8sK0JBQWUsQ0FBQzs7QUFFNUIsTUFBSSxNQUFNLFlBQUEsQ0FBQztBQUNYLFFBQU0sQ0FBQztRQUNELElBQUk7Ozs7QUFBSixjQUFJLEdBQUcsZUFBYztBQUN2Qix1QkFBVyxFQUFFLHdDQUF3QztXQUN0RCx3QkFBZTs7MkNBQ0QsaUNBQVksSUFBSSxDQUFDOzs7QUFBaEMsZ0JBQU07Ozs7Ozs7R0FDUCxDQUFDLENBQUM7QUFDSCxPQUFLLENBQUM7Ozs7OzJDQUNFLG9DQUFlOzs7Ozs7O0dBQ3RCLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsbURBQW1ELEVBQUU7UUFDbEQsRUFBRTs7Ozs7MkNBQVMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUM7OztBQUF6QyxZQUFFOzsyQ0FDQSxFQUFFLENBQUMsS0FBSyxFQUFFOzs7OzsyQ0FHUixFQUFFLENBQUMsS0FBSyxFQUFFOzs7Ozs7Ozs7O0FBRWhCLGlCQUFPLENBQUMsR0FBRyxnQkFBSyxDQUFDOzs7OzJDQUdiLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDOzs7Ozs7O0dBQzNCLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2Z1bmN0aW9uYWwvY29tbWFuZHMvdG91Y2gtZTJlLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNoYWkgZnJvbSAnY2hhaSc7XG5pbXBvcnQgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XG5pbXBvcnQgeyBpbml0U2Vzc2lvbiwgZGVsZXRlU2Vzc2lvbiwgTU9DSEFfVElNRU9VVCB9IGZyb20gJy4uL2hlbHBlcnMvc2Vzc2lvbic7XG5pbXBvcnQgeyBBUElERU1PX0NBUFMgfSBmcm9tICcuLi9kZXNpcmVkJztcblxuXG5jaGFpLnNob3VsZCgpO1xuY2hhaS51c2UoY2hhaUFzUHJvbWlzZWQpO1xuXG5kZXNjcmliZSgndG91Y2gnLCBmdW5jdGlvbiAoKSB7XG4gIHRoaXMudGltZW91dChNT0NIQV9USU1FT1VUKTtcblxuICBsZXQgZHJpdmVyO1xuICBiZWZvcmUoYXN5bmMgKCkgPT4ge1xuICAgIGxldCBjYXBzID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICBhcHBBY3Rpdml0eTogJ2lvLmFwcGl1bS5hbmRyb2lkLmFwaXMudmlldy5UZXh0RmllbGRzJ1xuICAgIH0sIEFQSURFTU9fQ0FQUyk7XG4gICAgZHJpdmVyID0gYXdhaXQgaW5pdFNlc3Npb24oY2Fwcyk7XG4gIH0pO1xuICBhZnRlcihhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgZGVsZXRlU2Vzc2lvbigpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGNsaWNrIG9uIGFuIGVsZW1lbnQgYnkgdGhlIHgseSBjb29yZGluYXRlcycsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgZWwgPSBhd2FpdCBkcml2ZXIuZWxlbWVudEJ5SWQoJ2lkL2VkaXQxJyk7XG4gICAgYXdhaXQgZWwuY2xpY2soKTtcblxuICAgIHRyeSB7XG4gICAgICBhd2FpdCBlbC5jbGljaygpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgY29uc29sZS5sb2coZXJyKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIH1cblxuICAgIGF3YWl0IGVsLnNlbmRLZXlzKCdoZWxsbycpO1xuICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLiJ9
