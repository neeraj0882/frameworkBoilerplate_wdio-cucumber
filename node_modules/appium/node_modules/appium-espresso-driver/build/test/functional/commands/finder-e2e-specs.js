'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _wd = require('wd');

var _wd2 = _interopRequireDefault(_wd);

var _helpersSession = require('../helpers/session');

var _desired = require('../desired');

var _ = require('../../..');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('elementByXPath', function () {
  var _this = this;

  this.timeout(_helpersSession.MOCHA_TIMEOUT);

  var driver = undefined;
  var server = undefined;
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _.startServer)(_helpersSession.PORT, _helpersSession.HOST));

        case 2:
          server = context$2$0.sent;

          driver = _wd2['default'].promiseChainRemote(_helpersSession.HOST, _helpersSession.PORT);

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.prev = 0;
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(server.close());

        case 3:
          context$2$0.next = 7;
          break;

        case 5:
          context$2$0.prev = 5;
          context$2$0.t0 = context$2$0['catch'](0);

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[0, 5]]);
  });
  beforeEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.prev = 0;
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.init(_desired.APIDEMO_CAPS));

        case 3:
          context$2$0.next = 7;
          break;

        case 5:
          context$2$0.prev = 5;
          context$2$0.t0 = context$2$0['catch'](0);

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[0, 5]]);
  });
  afterEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.prev = 0;
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.quit());

        case 3:
          context$2$0.next = 7;
          break;

        case 5:
          context$2$0.prev = 5;
          context$2$0.t0 = context$2$0['catch'](0);

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this, [[0, 5]]);
  });

  it('should find an element by it\'s xpath', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@content-desc='Animation']"));

        case 2:
          el = context$2$0.sent;

          el.should.exist;
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(el.click());

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  it('should find multiple elements that match one xpath', function callee$1$0() {
    var els;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementsByXPath('//android.widget.TextView'));

        case 2:
          els = context$2$0.sent;

          els.length.should.be.above(1);

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  it('should get the first element of an xpath that matches more than one element', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByXPath('//android.widget.TextView'));

        case 2:
          el = context$2$0.sent;

          el.should.exist;

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  it('should throw a stale element exception if clicking on element that does not exist', function callee$1$0() {
    var el;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByXPath("//*[@content-desc='Animation']"));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(el.click());

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(el.click().should.eventually.be.rejectedWith(/no longer attached /));

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy9maW5kZXItZTJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztvQkFBaUIsTUFBTTs7Ozs4QkFDSSxrQkFBa0I7Ozs7a0JBQzlCLElBQUk7Ozs7OEJBQ3VCLG9CQUFvQjs7dUJBQ2pDLFlBQVk7O2dCQUNiLFVBQVU7O0FBR3RDLGtCQUFLLE1BQU0sRUFBRSxDQUFDO0FBQ2Qsa0JBQUssR0FBRyw2QkFBZ0IsQ0FBQzs7QUFFekIsUUFBUSxDQUFDLGdCQUFnQixFQUFFLFlBQVk7OztBQUNyQyxNQUFJLENBQUMsT0FBTywrQkFBZSxDQUFDOztBQUU1QixNQUFJLE1BQU0sWUFBQSxDQUFDO0FBQ1gsTUFBSSxNQUFNLFlBQUEsQ0FBQztBQUNYLFFBQU0sQ0FBQzs7Ozs7MkNBQ1UsOERBQXVCOzs7QUFBdEMsZ0JBQU07O0FBQ04sZ0JBQU0sR0FBRyxnQkFBRyxrQkFBa0IsNENBQVksQ0FBQzs7Ozs7OztHQUM1QyxDQUFDLENBQUM7QUFDSCxPQUFLLENBQUM7Ozs7OzsyQ0FFSSxNQUFNLENBQUMsS0FBSyxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7R0FFdkIsQ0FBQyxDQUFDO0FBQ0gsWUFBVSxDQUFDOzs7Ozs7MkNBRUQsTUFBTSxDQUFDLElBQUksdUJBQWM7Ozs7Ozs7Ozs7Ozs7OztHQUVsQyxDQUFDLENBQUM7QUFDSCxXQUFTLENBQUM7Ozs7OzsyQ0FFQSxNQUFNLENBQUMsSUFBSSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7R0FFdEIsQ0FBQyxDQUFDOztBQUVILElBQUUsQ0FBQyx1Q0FBdUMsRUFBRTtRQUN0QyxFQUFFOzs7OzsyQ0FBUyxNQUFNLENBQUMsY0FBYyxDQUFDLGdDQUFnQyxDQUFDOzs7QUFBbEUsWUFBRTs7QUFDTixZQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQzs7MkNBQ1YsRUFBRSxDQUFDLEtBQUssRUFBRTs7Ozs7OztHQUNqQixDQUFDLENBQUM7QUFDSCxJQUFFLENBQUMsb0RBQW9ELEVBQUU7UUFDbkQsR0FBRzs7Ozs7MkNBQVMsTUFBTSxDQUFDLGVBQWUsQ0FBQywyQkFBMkIsQ0FBQzs7O0FBQS9ELGFBQUc7O0FBQ1AsYUFBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQzs7Ozs7OztHQUMvQixDQUFDLENBQUM7QUFDSCxJQUFFLENBQUMsNkVBQTZFLEVBQUU7UUFDNUUsRUFBRTs7Ozs7MkNBQVMsTUFBTSxDQUFDLGNBQWMsQ0FBQywyQkFBMkIsQ0FBQzs7O0FBQTdELFlBQUU7O0FBQ04sWUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7Ozs7Ozs7R0FDakIsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLG1GQUFtRixFQUFFO1FBQ2xGLEVBQUU7Ozs7OzJDQUFTLE1BQU0sQ0FBQyxjQUFjLENBQUMsZ0NBQWdDLENBQUM7OztBQUFsRSxZQUFFOzsyQ0FDQSxFQUFFLENBQUMsS0FBSyxFQUFFOzs7OzJDQUNWLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMscUJBQXFCLENBQUM7Ozs7Ozs7R0FDMUUsQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy9maW5kZXItZTJlLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNoYWkgZnJvbSAnY2hhaSc7XG5pbXBvcnQgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XG5pbXBvcnQgd2QgZnJvbSAnd2QnO1xuaW1wb3J0IHsgSE9TVCwgUE9SVCwgTU9DSEFfVElNRU9VVCB9IGZyb20gJy4uL2hlbHBlcnMvc2Vzc2lvbic7XG5pbXBvcnQgeyBBUElERU1PX0NBUFMgfSBmcm9tICcuLi9kZXNpcmVkJztcbmltcG9ydCB7IHN0YXJ0U2VydmVyIH0gZnJvbSAnLi4vLi4vLi4nO1xuXG5cbmNoYWkuc2hvdWxkKCk7XG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmRlc2NyaWJlKCdlbGVtZW50QnlYUGF0aCcsIGZ1bmN0aW9uICgpIHtcbiAgdGhpcy50aW1lb3V0KE1PQ0hBX1RJTUVPVVQpO1xuXG4gIGxldCBkcml2ZXI7XG4gIGxldCBzZXJ2ZXI7XG4gIGJlZm9yZShhc3luYyAoKSA9PiB7XG4gICAgc2VydmVyID0gYXdhaXQgc3RhcnRTZXJ2ZXIoUE9SVCwgSE9TVCk7XG4gICAgZHJpdmVyID0gd2QucHJvbWlzZUNoYWluUmVtb3RlKEhPU1QsIFBPUlQpO1xuICB9KTtcbiAgYWZ0ZXIoYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCBzZXJ2ZXIuY2xvc2UoKTtcbiAgICB9IGNhdGNoIChpZ24pIHt9XG4gIH0pO1xuICBiZWZvcmVFYWNoKGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgZHJpdmVyLmluaXQoQVBJREVNT19DQVBTKTtcbiAgICB9IGNhdGNoIChpZ24pIHt9XG4gIH0pO1xuICBhZnRlckVhY2goYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCBkcml2ZXIucXVpdCgpO1xuICAgIH0gY2F0Y2ggKGlnbikge31cbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBmaW5kIGFuIGVsZW1lbnQgYnkgaXRcXCdzIHhwYXRoJywgYXN5bmMgKCkgPT4ge1xuICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlYUGF0aChcIi8vKltAY29udGVudC1kZXNjPSdBbmltYXRpb24nXVwiKTtcbiAgICBlbC5zaG91bGQuZXhpc3Q7XG4gICAgYXdhaXQgZWwuY2xpY2soKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgZmluZCBtdWx0aXBsZSBlbGVtZW50cyB0aGF0IG1hdGNoIG9uZSB4cGF0aCcsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgZWxzID0gYXdhaXQgZHJpdmVyLmVsZW1lbnRzQnlYUGF0aCgnLy9hbmRyb2lkLndpZGdldC5UZXh0VmlldycpO1xuICAgIGVscy5sZW5ndGguc2hvdWxkLmJlLmFib3ZlKDEpO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCBnZXQgdGhlIGZpcnN0IGVsZW1lbnQgb2YgYW4geHBhdGggdGhhdCBtYXRjaGVzIG1vcmUgdGhhbiBvbmUgZWxlbWVudCcsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgZWwgPSBhd2FpdCBkcml2ZXIuZWxlbWVudEJ5WFBhdGgoJy8vYW5kcm9pZC53aWRnZXQuVGV4dFZpZXcnKTtcbiAgICBlbC5zaG91bGQuZXhpc3Q7XG4gIH0pO1xuICBpdCgnc2hvdWxkIHRocm93IGEgc3RhbGUgZWxlbWVudCBleGNlcHRpb24gaWYgY2xpY2tpbmcgb24gZWxlbWVudCB0aGF0IGRvZXMgbm90IGV4aXN0JywgYXN5bmMgKCkgPT4ge1xuICAgIGxldCBlbCA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlYUGF0aChcIi8vKltAY29udGVudC1kZXNjPSdBbmltYXRpb24nXVwiKTtcbiAgICBhd2FpdCBlbC5jbGljaygpO1xuICAgIGF3YWl0IGVsLmNsaWNrKCkuc2hvdWxkLmV2ZW50dWFsbHkuYmUucmVqZWN0ZWRXaXRoKC9ubyBsb25nZXIgYXR0YWNoZWQgLyk7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uIn0=
