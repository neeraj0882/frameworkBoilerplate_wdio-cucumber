'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _helpersSession = require('../helpers/session');

var _desired = require('../desired');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('moveTo', function () {
  var _this = this;

  this.timeout(_helpersSession.MOCHA_TIMEOUT);

  var driver = undefined;
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersSession.initSession)(_desired.APIDEMO_CAPS));

        case 2:
          driver = context$2$0.sent;

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersSession.deleteSession)());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('should move to an element', function callee$1$0() {
    var el, moveToEl;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.elementByAccessibilityId('Views'));

        case 2:
          el = context$2$0.sent;
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(el.click());

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.elementByAccessibilityId('Expandable Lists'));

        case 7:
          moveToEl = context$2$0.sent;
          context$2$0.next = 10;
          return _regeneratorRuntime.awrap(driver.elementByAccessibilityId('ImageView').should.eventually.be.rejectedWith(/Could not find element/));

        case 10:
          context$2$0.next = 12;
          return _regeneratorRuntime.awrap(driver.moveTo(moveToEl));

        case 12:
          context$2$0.next = 14;
          return _regeneratorRuntime.awrap(driver.elementByAccessibilityId('ImageView').should.eventually.exist);

        case 14:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy9tb3ZlLXRvLWUyZS1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7b0JBQWlCLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7OzhCQUNhLG9CQUFvQjs7dUJBQ2pELFlBQVk7O0FBR3pDLGtCQUFLLE1BQU0sRUFBRSxDQUFDO0FBQ2Qsa0JBQUssR0FBRyw2QkFBZ0IsQ0FBQzs7QUFFekIsUUFBUSxDQUFDLFFBQVEsRUFBRSxZQUFZOzs7QUFDN0IsTUFBSSxDQUFDLE9BQU8sK0JBQWUsQ0FBQzs7QUFFNUIsTUFBSSxNQUFNLFlBQUEsQ0FBQztBQUNYLFFBQU0sQ0FBQzs7Ozs7MkNBQ1UsdURBQXlCOzs7QUFBeEMsZ0JBQU07Ozs7Ozs7R0FDUCxDQUFDLENBQUM7QUFDSCxPQUFLLENBQUM7Ozs7OzJDQUNFLG9DQUFlOzs7Ozs7O0dBQ3RCLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsMkJBQTJCLEVBQUU7UUFDMUIsRUFBRSxFQUVGLFFBQVE7Ozs7OzJDQUZHLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQyxPQUFPLENBQUM7OztBQUFuRCxZQUFFOzsyQ0FDQSxFQUFFLENBQUMsS0FBSyxFQUFFOzs7OzJDQUNLLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQyxrQkFBa0IsQ0FBQzs7O0FBQXBFLGtCQUFROzsyQ0FDTixNQUFNLENBQUMsd0JBQXdCLENBQUMsV0FBVyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLHdCQUF3QixDQUFDOzs7OzJDQUN4RyxNQUFNLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQzs7OzsyQ0FDdkIsTUFBTSxDQUFDLHdCQUF3QixDQUFDLFdBQVcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsS0FBSzs7Ozs7OztHQUMzRSxDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9mdW5jdGlvbmFsL2NvbW1hbmRzL21vdmUtdG8tZTJlLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNoYWkgZnJvbSAnY2hhaSc7XG5pbXBvcnQgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XG5pbXBvcnQgeyBpbml0U2Vzc2lvbiwgZGVsZXRlU2Vzc2lvbiwgTU9DSEFfVElNRU9VVCB9IGZyb20gJy4uL2hlbHBlcnMvc2Vzc2lvbic7XG5pbXBvcnQgeyBBUElERU1PX0NBUFMgfSBmcm9tICcuLi9kZXNpcmVkJztcblxuXG5jaGFpLnNob3VsZCgpO1xuY2hhaS51c2UoY2hhaUFzUHJvbWlzZWQpO1xuXG5kZXNjcmliZSgnbW92ZVRvJywgZnVuY3Rpb24gKCkge1xuICB0aGlzLnRpbWVvdXQoTU9DSEFfVElNRU9VVCk7XG5cbiAgbGV0IGRyaXZlcjtcbiAgYmVmb3JlKGFzeW5jICgpID0+IHtcbiAgICBkcml2ZXIgPSBhd2FpdCBpbml0U2Vzc2lvbihBUElERU1PX0NBUFMpO1xuICB9KTtcbiAgYWZ0ZXIoYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IGRlbGV0ZVNlc3Npb24oKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBtb3ZlIHRvIGFuIGVsZW1lbnQnLCBhc3luYyAoKSA9PiB7XG4gICAgbGV0IGVsID0gYXdhaXQgZHJpdmVyLmVsZW1lbnRCeUFjY2Vzc2liaWxpdHlJZCgnVmlld3MnKTtcbiAgICBhd2FpdCBlbC5jbGljaygpO1xuICAgIGxldCBtb3ZlVG9FbCA9IGF3YWl0IGRyaXZlci5lbGVtZW50QnlBY2Nlc3NpYmlsaXR5SWQoJ0V4cGFuZGFibGUgTGlzdHMnKTtcbiAgICBhd2FpdCBkcml2ZXIuZWxlbWVudEJ5QWNjZXNzaWJpbGl0eUlkKCdJbWFnZVZpZXcnKS5zaG91bGQuZXZlbnR1YWxseS5iZS5yZWplY3RlZFdpdGgoL0NvdWxkIG5vdCBmaW5kIGVsZW1lbnQvKTtcbiAgICBhd2FpdCBkcml2ZXIubW92ZVRvKG1vdmVUb0VsKTtcbiAgICBhd2FpdCBkcml2ZXIuZWxlbWVudEJ5QWNjZXNzaWJpbGl0eUlkKCdJbWFnZVZpZXcnKS5zaG91bGQuZXZlbnR1YWxseS5leGlzdDtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4ifQ==
