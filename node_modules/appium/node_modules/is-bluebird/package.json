{
  "_args": [
    [
      {
        "raw": "is-bluebird@https://registry.npmjs.org/is-bluebird/-/is-bluebird-1.0.2.tgz",
        "scope": null,
        "escapedName": "is-bluebird",
        "name": "is-bluebird",
        "rawSpec": "https://registry.npmjs.org/is-bluebird/-/is-bluebird-1.0.2.tgz",
        "spec": "https://registry.npmjs.org/is-bluebird/-/is-bluebird-1.0.2.tgz",
        "type": "remote"
      },
      "/Users/saxenan3/myprojects/uiAutomation/mytest_project/node_modules/appium"
    ]
  ],
  "_from": "is-bluebird@https://registry.npmjs.org/is-bluebird/-/is-bluebird-1.0.2.tgz",
  "_id": "is-bluebird@1.0.2",
  "_inCache": true,
  "_location": "/appium/is-bluebird",
  "_phantomChildren": {},
  "_requested": {
    "raw": "is-bluebird@https://registry.npmjs.org/is-bluebird/-/is-bluebird-1.0.2.tgz",
    "scope": null,
    "escapedName": "is-bluebird",
    "name": "is-bluebird",
    "rawSpec": "https://registry.npmjs.org/is-bluebird/-/is-bluebird-1.0.2.tgz",
    "spec": "https://registry.npmjs.org/is-bluebird/-/is-bluebird-1.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium",
    "/appium/cls-bluebird"
  ],
  "_resolved": "https://registry.npmjs.org/is-bluebird/-/is-bluebird-1.0.2.tgz",
  "_shasum": "096439060f4aa411abee19143a84d6a55346d6e2",
  "_shrinkwrap": null,
  "_spec": "is-bluebird@https://registry.npmjs.org/is-bluebird/-/is-bluebird-1.0.2.tgz",
  "_where": "/Users/saxenan3/myprojects/uiAutomation/mytest_project/node_modules/appium",
  "author": {
    "name": "Overlook Motel"
  },
  "bugs": {
    "url": "https://github.com/overlookmotel/is-bluebird/issues"
  },
  "dependencies": {},
  "description": "Is this a bluebird promise I see before me?",
  "devDependencies": {
    "bluebird2": "^3.0.0",
    "bluebird3": "^3.0.6",
    "chai": "^3.5.0",
    "coveralls": "^2.11.12",
    "istanbul": "^0.4.5",
    "jshint": "^2.9.3",
    "mocha": "^3.0.2"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "homepage": "https://github.com/overlookmotel/is-bluebird#readme",
  "keywords": [
    "bluebird",
    "promise",
    "is",
    "instance",
    "constructor",
    "version",
    "then",
    "check",
    "test"
  ],
  "license": "MIT",
  "main": "./lib/",
  "name": "is-bluebird",
  "optionalDependencies": {},
  "readme": "# is-bluebird.js\n\n# Is this a bluebird promise I see before me?\n\n[![NPM version](https://img.shields.io/npm/v/is-bluebird.svg)](https://www.npmjs.com/package/is-bluebird)\n[![Build Status](https://img.shields.io/travis/overlookmotel/is-bluebird/master.svg)](http://travis-ci.org/overlookmotel/is-bluebird)\n[![Dependency Status](https://img.shields.io/david/overlookmotel/is-bluebird.svg)](https://david-dm.org/overlookmotel/is-bluebird)\n[![Dev dependency Status](https://img.shields.io/david/dev/overlookmotel/is-bluebird.svg)](https://david-dm.org/overlookmotel/is-bluebird)\n[![Coverage Status](https://img.shields.io/coveralls/overlookmotel/is-bluebird/master.svg)](https://coveralls.io/r/overlookmotel/is-bluebird)\n\n## Usage\n\nTools to check whether some input is a [bluebird](http://bluebirdjs.com/) promise, a bluebird promise constructor, or determining the version of bluebird from a promise or constructor.\n\n#### `isBluebird( promise )`\n\nReturns true if is a bluebird promise, false if not.\n\n```js\nvar isBluebird = require('is-bluebird');\nvar Bluebird = require('bluebird');\n\nconsole.log( isBluebird( Bluebird.resolve() ) ); // true\nconsole.log( isBluebird( Promise.resolve() ) ); // false (native JS promise)\n```\n\n#### `isBluebird.ctor( Promise )`\n\nReturns true if is bluebird promise constructor, false if not.\n\n```js\nvar isBluebird = require('is-bluebird');\nvar Bluebird = require('bluebird');\n\nconsole.log( isBluebird.ctor( Bluebird ) ); // true\nconsole.log( isBluebird.ctor( Promise ) ); // false (native JS promise)\n```\n\n#### `isBluebird.v2( promise )` / `isBluebird.v3( promise )`\n\nReturns true if is a bluebird promise of the specified version.\n\n```js\nvar isBluebird = require('is-bluebird');\nvar Bluebird2 = require('bluebird2');\nvar Bluebird3 = require('bluebird3');\n\nconsole.log( isBluebird.v2( Bluebird2.resolve() ) ); // true\nconsole.log( isBluebird.v2( Bluebird3.resolve() ) ); // false\nconsole.log( isBluebird.v2( Promise.resolve() ) ); // false (native JS promise)\n```\n\n#### `isBluebird.v2.ctor( Promise )` / `isBluebird.v3.ctor( Promise )`\n\nReturns true if is bluebird promise constructor of the specified version.\n\n```js\nvar isBluebird = require('is-bluebird');\nvar Bluebird2 = require('bluebird2');\nvar Bluebird3 = require('bluebird3');\n\nconsole.log( isBluebird.v2.ctor( Bluebird2 ) ); // true\nconsole.log( isBluebird.v2.ctor( Bluebird3 ) ); // false\nconsole.log( isBluebird.v2.ctor( Promise ) ); // false (native JS promise)\n```\n\n## Tests\n\nUse `npm test` to run the tests. Use `npm run cover` to check coverage.\n\n## Changelog\n\nSee [changelog.md](https://github.com/overlookmotel/is-bluebird/blob/master/changelog.md)\n\n## Issues\n\nIf you discover a bug, please raise an issue on Github. https://github.com/overlookmotel/is-bluebird/issues\n\n## Contribution\n\nPull requests are very welcome. Please:\n\n* ensure all tests pass before submitting PR\n* add an entry to changelog\n* add tests for new features\n* document new functionality/API additions in README\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/overlookmotel/is-bluebird.git"
  },
  "scripts": {
    "cover": "npm run cover-main && rm -rf coverage",
    "cover-main": "COVERAGE=true ./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha --report lcovonly -- -R spec 'test/**/*.test.js'",
    "coveralls": "npm run cover-main && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage",
    "jshint": "jshint lib test",
    "test": "if [ $COVERAGE ]; then npm run coveralls; else npm run jshint && npm run test-main; fi",
    "test-main": "./node_modules/mocha/bin/mocha --check-leaks --colors -t 10000 --reporter spec 'test/**/*.test.js'"
  },
  "version": "1.0.2"
}
