'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _appiumBaseDriver = require('appium-base-driver');

var commands = {},
    helpers = {},
    extensions = {};

commands.title = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        this.assertWebviewContext();
        return context$1$0.abrupt('return', this.appModel.title);

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.keys = function callee$0$0(value) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (this.focusedElId) {
          context$1$0.next = 2;
          break;
        }

        throw new _appiumBaseDriver.errors.InvalidElementStateError();

      case 2:
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.setValue(value, this.focusedElId));

      case 4:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.setGeoLocation = function callee$0$0(location) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        // TODO test this adequately once WD bug is fixed
        this.appModel.lat = location.latitude;
        this.appModel.long = location.longitude;

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getGeoLocation = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        return context$1$0.abrupt('return', this.appModel.currentGeoLocation);

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getPageSource = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        return context$1$0.abrupt('return', this.appModel.rawXml);

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getOrientation = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        return context$1$0.abrupt('return', this.appModel.orientation);

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.setOrientation = function callee$0$0(o) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (_lodash2['default'].includes(["LANDSCAPE", "PORTRAIT"], o)) {
          context$1$0.next = 2;
          break;
        }

        throw new _appiumBaseDriver.errors.UnknownError("Orientation must be LANDSCAPE or PORTRAIT");

      case 2:
        this.appModel.orientation = o;

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getScreenshot = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        return context$1$0.abrupt('return', this.appModel.getScreenshot());

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports['default'] = extensions;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9nZW5lcmFsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztzQkFBYyxRQUFROzs7O2dDQUNDLG9CQUFvQjs7QUFFM0MsSUFBSSxRQUFRLEdBQUcsRUFBRTtJQUFFLE9BQU8sR0FBRyxFQUFFO0lBQUUsVUFBVSxHQUFHLEVBQUUsQ0FBQzs7QUFFakQsUUFBUSxDQUFDLEtBQUssR0FBRzs7OztBQUNmLFlBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDOzRDQUNyQixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUs7Ozs7Ozs7Q0FDM0IsQ0FBQzs7QUFFRixRQUFRLENBQUMsSUFBSSxHQUFHLG9CQUFnQixLQUFLOzs7O1lBQzlCLElBQUksQ0FBQyxXQUFXOzs7OztjQUNiLElBQUkseUJBQU8sd0JBQXdCLEVBQUU7Ozs7eUNBRXZDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUM7Ozs7Ozs7Q0FDN0MsQ0FBQzs7QUFFRixRQUFRLENBQUMsY0FBYyxHQUFHLG9CQUFnQixRQUFROzs7OztBQUVoRCxZQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsUUFBUSxDQUFDO0FBQ3RDLFlBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUM7Ozs7Ozs7Q0FDekMsQ0FBQzs7QUFFRixRQUFRLENBQUMsY0FBYyxHQUFHOzs7OzRDQUNqQixJQUFJLENBQUMsUUFBUSxDQUFDLGtCQUFrQjs7Ozs7OztDQUN4QyxDQUFDOztBQUVGLFFBQVEsQ0FBQyxhQUFhLEdBQUc7Ozs7NENBQ2hCLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTTs7Ozs7OztDQUM1QixDQUFDOztBQUVGLFFBQVEsQ0FBQyxjQUFjLEdBQUc7Ozs7NENBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVzs7Ozs7OztDQUNqQyxDQUFDOztBQUVGLFFBQVEsQ0FBQyxjQUFjLEdBQUcsb0JBQWdCLENBQUM7Ozs7WUFDcEMsb0JBQUUsUUFBUSxDQUFDLENBQUMsV0FBVyxFQUFFLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQzs7Ozs7Y0FDckMsSUFBSSx5QkFBTyxZQUFZLENBQUMsMkNBQTJDLENBQUM7OztBQUU1RSxZQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7Ozs7Ozs7Q0FDL0IsQ0FBQzs7QUFFRixRQUFRLENBQUMsYUFBYSxHQUFHOzs7OzRDQUNoQixJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRTs7Ozs7OztDQUNyQyxDQUFDOztBQUVGLGVBQWMsVUFBVSxFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNwQyxRQUFRLEdBQVIsUUFBUTtRQUFFLE9BQU8sR0FBUCxPQUFPO3FCQUNYLFVBQVUiLCJmaWxlIjoibGliL2NvbW1hbmRzL2dlbmVyYWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgZXJyb3JzIH0gZnJvbSAnYXBwaXVtLWJhc2UtZHJpdmVyJztcblxubGV0IGNvbW1hbmRzID0ge30sIGhlbHBlcnMgPSB7fSwgZXh0ZW5zaW9ucyA9IHt9O1xuXG5jb21tYW5kcy50aXRsZSA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5hc3NlcnRXZWJ2aWV3Q29udGV4dCgpO1xuICByZXR1cm4gdGhpcy5hcHBNb2RlbC50aXRsZTtcbn07XG5cbmNvbW1hbmRzLmtleXMgPSBhc3luYyBmdW5jdGlvbiAodmFsdWUpIHtcbiAgaWYgKCF0aGlzLmZvY3VzZWRFbElkKSB7XG4gICAgdGhyb3cgbmV3IGVycm9ycy5JbnZhbGlkRWxlbWVudFN0YXRlRXJyb3IoKTtcbiAgfVxuICBhd2FpdCB0aGlzLnNldFZhbHVlKHZhbHVlLCB0aGlzLmZvY3VzZWRFbElkKTtcbn07XG5cbmNvbW1hbmRzLnNldEdlb0xvY2F0aW9uID0gYXN5bmMgZnVuY3Rpb24gKGxvY2F0aW9uKSB7XG4gIC8vIFRPRE8gdGVzdCB0aGlzIGFkZXF1YXRlbHkgb25jZSBXRCBidWcgaXMgZml4ZWRcbiAgdGhpcy5hcHBNb2RlbC5sYXQgPSBsb2NhdGlvbi5sYXRpdHVkZTtcbiAgdGhpcy5hcHBNb2RlbC5sb25nID0gbG9jYXRpb24ubG9uZ2l0dWRlO1xufTtcblxuY29tbWFuZHMuZ2V0R2VvTG9jYXRpb24gPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLmFwcE1vZGVsLmN1cnJlbnRHZW9Mb2NhdGlvbjtcbn07XG5cbmNvbW1hbmRzLmdldFBhZ2VTb3VyY2UgPSBhc3luYyBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLmFwcE1vZGVsLnJhd1htbDtcbn07XG5cbmNvbW1hbmRzLmdldE9yaWVudGF0aW9uID0gYXN5bmMgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5hcHBNb2RlbC5vcmllbnRhdGlvbjtcbn07XG5cbmNvbW1hbmRzLnNldE9yaWVudGF0aW9uID0gYXN5bmMgZnVuY3Rpb24gKG8pIHtcbiAgaWYgKCFfLmluY2x1ZGVzKFtcIkxBTkRTQ0FQRVwiLCBcIlBPUlRSQUlUXCJdLCBvKSkge1xuICAgIHRocm93IG5ldyBlcnJvcnMuVW5rbm93bkVycm9yKFwiT3JpZW50YXRpb24gbXVzdCBiZSBMQU5EU0NBUEUgb3IgUE9SVFJBSVRcIik7XG4gIH1cbiAgdGhpcy5hcHBNb2RlbC5vcmllbnRhdGlvbiA9IG87XG59O1xuXG5jb21tYW5kcy5nZXRTY3JlZW5zaG90ID0gYXN5bmMgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5hcHBNb2RlbC5nZXRTY3JlZW5zaG90KCk7XG59O1xuXG5PYmplY3QuYXNzaWduKGV4dGVuc2lvbnMsIGNvbW1hbmRzLCBoZWxwZXJzKTtcbmV4cG9ydCB7IGNvbW1hbmRzLCBoZWxwZXJzIH07XG5leHBvcnQgZGVmYXVsdCBleHRlbnNpb25zO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLiJ9
