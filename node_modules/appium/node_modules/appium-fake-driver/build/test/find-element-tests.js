'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _helpers = require('./helpers');

var should = _chai2['default'].should();

function findElementTests() {
  describe('finding elements', function () {
    var driver = undefined;
    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _helpers.initSession)(_helpers.DEFAULT_CAPS));

          case 2:
            driver = context$3$0.sent;

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    after(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _helpers.deleteSession)());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    it('should find a single element by xpath', function callee$2$0() {
      var el;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementByXPath('//MockWebView'));

          case 2:
            el = context$3$0.sent;

            should.exist(el.value);

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not find a single element that is not there', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementByXPath('//dontexist').should.eventually.be.rejectedWith(/7/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should find multiple elements', function callee$2$0() {
      var els;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementsByXPath('//MockListItem'));

          case 2:
            els = context$3$0.sent;

            els.should.have.length(3);

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not find multiple elements that are not there', function callee$2$0() {
      var els;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementsByXPath('//dontexist'));

          case 2:
            els = context$3$0.sent;

            els.should.eql([]);

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    it('should find a single element by id', function callee$2$0() {
      var el;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementById('wv'));

          case 2:
            el = context$3$0.sent;

            should.exist(el.value);

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not find a single element by id that is not there', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementById('dontexist').should.eventually.be.rejectedWith(/7/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should find multiple elements by id', function callee$2$0() {
      var els;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementsById('li'));

          case 2:
            els = context$3$0.sent;

            els.should.have.length(2);

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not find multiple elements by id that are not there', function callee$2$0() {
      var els;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementsById('dontexist'));

          case 2:
            els = context$3$0.sent;

            els.should.eql([]);

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    it('should find a single element by class', function callee$2$0() {
      var el;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementByClassName('MockWebView'));

          case 2:
            el = context$3$0.sent;

            should.exist(el.value);

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not find a single element by class that is not there', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementById('dontexist').should.eventually.be.rejectedWith(/7/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should find multiple elements by class', function callee$2$0() {
      var els;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementsByClassName('MockListItem'));

          case 2:
            els = context$3$0.sent;

            els.should.have.length(3);

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not find multiple elements by class that are not there', function callee$2$0() {
      var els;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementsByClassName('dontexist'));

          case 2:
            els = context$3$0.sent;

            els.should.eql([]);

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    it('should not find a single element with bad strategy', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementByCss('.sorry').should.eventually.be.rejectedWith(/9/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not find a single element with bad selector', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementByXPath('badsel').should.eventually.be.rejectedWith(/32/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not find multiple elements with bad strategy', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementsByCss('.sorry').should.eventually.be.rejectedWith(/9/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not find multiple elements with bad selector', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementsByXPath('badsel').should.eventually.be.rejectedWith(/32/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    it('should find an element from another element', function callee$2$0() {
      var el, title, earlierTitle;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementById('iframe1'));

          case 2:
            el = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(el.elementByTagName('title'));

          case 5:
            title = context$3$0.sent;
            context$3$0.next = 8;
            return _regeneratorRuntime.awrap(driver.elementByTagName('title'));

          case 8:
            earlierTitle = context$3$0.sent;
            context$3$0.next = 11;
            return _regeneratorRuntime.awrap(earlierTitle.equals(title));

          case 11:
            context$3$0.sent.should.equal(false);

          case 12:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should find multiple elements from another element', function callee$2$0() {
      var el, titles;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementByTagName('html'));

          case 2:
            el = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(el.elementsByTagName('title'));

          case 5:
            titles = context$3$0.sent;

            titles.length.should.equal(2);

          case 7:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not find an element that doesnt exist from another element', function callee$2$0() {
      var el;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementByTagName('html'));

          case 2:
            el = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(el.elementByTagName('marquee').should.eventually.be.rejectedWith(/7/));

          case 5:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not find multiple elements that dont exist from another element', function callee$2$0() {
      var el;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementByTagName('html'));

          case 2:
            el = context$3$0.sent;
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(el.elementsByTagName('marquee'));

          case 5:
            context$3$0.t0 = [];
            context$3$0.sent.should.eql(context$3$0.t0);

          case 7:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not find an element with bad strategy from another element', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementByTagName('html').elementByCss('.sorry').should.eventually.be.rejectedWith(/9/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not find elements with bad strategy from another element', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementByTagName('html').elementsByCss('.sorry').should.eventually.be.rejectedWith(/9/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should error if root element is not valid', function callee$2$0() {
      var el;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementByTagName('html'));

          case 2:
            el = context$3$0.sent;

            el.value = 'foobar';
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(el.elementByTagName('body').should.eventually.be.rejectedWith(/10/));

          case 6:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
}

exports['default'] = findElementTests;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,
