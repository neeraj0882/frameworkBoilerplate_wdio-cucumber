'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _helpers = require('./helpers');

function contextTests() {
  describe('contexts, webviews, frames', function callee$1$0() {
    var driver;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          driver = undefined;

          before(function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap((0, _helpers.initSession)(_helpers.DEFAULT_CAPS));

                case 2:
                  driver = context$3$0.sent;

                case 3:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });
          after(function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap((0, _helpers.deleteSession)());

                case 2:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });
          it('should get current context', function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.currentContext().should.eventually.become('NATIVE_APP'));

                case 2:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });
          it('should get contexts', function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.contexts().should.eventually.become(['NATIVE_APP', 'WEBVIEW_1']));

                case 2:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });
          it('should not set context that is not there', function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.context('WEBVIEW_FOO').should.eventually.be.rejectedWith(/35/));

                case 2:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });
          it('should set context', function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.context('WEBVIEW_1').currentContext().should.eventually.become('WEBVIEW_1'));

                case 2:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });
          it('should find webview elements in a webview', function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.elementByXPath('//*').getTagName().should.eventually.become('html'));

                case 2:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });
          it('should not switch to a frame that is not there', function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.frame('foo').should.eventually.be.rejectedWith(/8/));

                case 2:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });
          it('should switch to an iframe', function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.frame('iframe1').title().should.eventually.become('Test iFrame'));

                case 2:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });
          it('should switch back to default frame', function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.frame(null).title().should.eventually.become('Test Webview'));

                case 2:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });
          it('should go back to native context', function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.context('NATIVE_APP').elementByXPath('//*').getTagName().should.eventually.become('app'));

                case 2:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });
          it('should not set a frame in a native context', function callee$2$0() {
            return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
              while (1) switch (context$3$0.prev = context$3$0.next) {
                case 0:
                  context$3$0.next = 2;
                  return _regeneratorRuntime.awrap(driver.frame('iframe1').should.eventually.be.rejectedWith(/36/));

                case 2:
                case 'end':
                  return context$3$0.stop();
              }
            }, null, this);
          });

        case 13:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
}

exports['default'] = contextTests;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvY29udGV4dC10ZXN0cy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozt1QkFBeUQsV0FBVzs7QUFFcEUsU0FBUyxZQUFZLEdBQUk7QUFDdkIsVUFBUSxDQUFDLDRCQUE0QixFQUFFO1FBQ2pDLE1BQU07Ozs7QUFBTixnQkFBTTs7QUFDVixnQkFBTSxDQUFFOzs7OzttREFDUyxnREFBeUI7OztBQUF4Qyx3QkFBTTs7Ozs7OztXQUNQLENBQUMsQ0FBQztBQUNILGVBQUssQ0FBQzs7Ozs7bURBQ0UsNkJBQWU7Ozs7Ozs7V0FDdEIsQ0FBQyxDQUFDO0FBQ0gsWUFBRSxDQUFDLDRCQUE0QixFQUFFOzs7OzttREFDekIsTUFBTSxDQUFDLGNBQWMsRUFBRSxDQUNwQixNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUM7Ozs7Ozs7V0FDaEQsQ0FBQyxDQUFDO0FBQ0gsWUFBRSxDQUFDLHFCQUFxQixFQUFFOzs7OzttREFDbEIsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUNkLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsWUFBWSxFQUFFLFdBQVcsQ0FBQyxDQUFDOzs7Ozs7O1dBQy9ELENBQUMsQ0FBQztBQUNILFlBQUUsQ0FBQywwQ0FBMEMsRUFBRTs7Ozs7bURBQ3ZDLE1BQU0sQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQzFCLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUM7Ozs7Ozs7V0FDakQsQ0FBQyxDQUFDO0FBQ0gsWUFBRSxDQUFDLG9CQUFvQixFQUFFOzs7OzttREFDakIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxjQUFjLEVBQUUsQ0FDekMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDOzs7Ozs7O1dBQy9DLENBQUMsQ0FBQztBQUNILFlBQUUsQ0FBQywyQ0FBMkMsRUFBRTs7Ozs7bURBQ3hDLE1BQU0sQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUMsVUFBVSxFQUFFLENBQ3RDLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQzs7Ozs7OztXQUMxQyxDQUFDLENBQUM7QUFDSCxZQUFFLENBQUMsZ0RBQWdELEVBQUU7Ozs7O21EQUM3QyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUM7Ozs7Ozs7V0FDakUsQ0FBQyxDQUFDO0FBQ0gsWUFBRSxDQUFDLDRCQUE0QixFQUFFOzs7OzttREFDekIsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FDNUIsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDOzs7Ozs7O1dBQ2pELENBQUMsQ0FBQztBQUNILFlBQUUsQ0FBQyxxQ0FBcUMsRUFBRTs7Ozs7bURBQ2xDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQ3ZCLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQzs7Ozs7OztXQUNsRCxDQUFDLENBQUM7QUFDSCxZQUFFLENBQUMsa0NBQWtDLEVBQUU7Ozs7O21EQUMvQixNQUFNLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FDNUQsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDOzs7Ozs7O1dBQ3pDLENBQUMsQ0FBQztBQUNILFlBQUUsQ0FBQyw0Q0FBNEMsRUFBRTs7Ozs7bURBQ3pDLE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQzs7Ozs7OztXQUN0RSxDQUFDLENBQUM7Ozs7Ozs7R0FDSixDQUFDLENBQUM7Q0FDSjs7cUJBRWMsWUFBWSIsImZpbGUiOiJ0ZXN0L2NvbnRleHQtdGVzdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbml0U2Vzc2lvbiwgZGVsZXRlU2Vzc2lvbiwgREVGQVVMVF9DQVBTIH0gZnJvbSAnLi9oZWxwZXJzJztcblxuZnVuY3Rpb24gY29udGV4dFRlc3RzICgpIHtcbiAgZGVzY3JpYmUoJ2NvbnRleHRzLCB3ZWJ2aWV3cywgZnJhbWVzJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGxldCBkcml2ZXI7XG4gICAgYmVmb3JlIChhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBkcml2ZXIgPSBhd2FpdCBpbml0U2Vzc2lvbihERUZBVUxUX0NBUFMpO1xuICAgIH0pO1xuICAgIGFmdGVyKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGF3YWl0IGRlbGV0ZVNlc3Npb24oKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIGdldCBjdXJyZW50IGNvbnRleHQnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkcml2ZXIuY3VycmVudENvbnRleHQoKVxuICAgICAgICAgICAgICAuc2hvdWxkLmV2ZW50dWFsbHkuYmVjb21lKCdOQVRJVkVfQVBQJyk7XG4gICAgfSk7XG4gICAgaXQoJ3Nob3VsZCBnZXQgY29udGV4dHMnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkcml2ZXIuY29udGV4dHMoKVxuICAgICAgICAgICAgICAuc2hvdWxkLmV2ZW50dWFsbHkuYmVjb21lKFsnTkFUSVZFX0FQUCcsICdXRUJWSUVXXzEnXSk7XG4gICAgfSk7XG4gICAgaXQoJ3Nob3VsZCBub3Qgc2V0IGNvbnRleHQgdGhhdCBpcyBub3QgdGhlcmUnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkcml2ZXIuY29udGV4dCgnV0VCVklFV19GT08nKVxuICAgICAgICAgICAgICAuc2hvdWxkLmV2ZW50dWFsbHkuYmUucmVqZWN0ZWRXaXRoKC8zNS8pO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgc2V0IGNvbnRleHQnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkcml2ZXIuY29udGV4dCgnV0VCVklFV18xJykuY3VycmVudENvbnRleHQoKVxuICAgICAgICAgICAgICAuc2hvdWxkLmV2ZW50dWFsbHkuYmVjb21lKCdXRUJWSUVXXzEnKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIGZpbmQgd2VidmlldyBlbGVtZW50cyBpbiBhIHdlYnZpZXcnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkcml2ZXIuZWxlbWVudEJ5WFBhdGgoJy8vKicpLmdldFRhZ05hbWUoKVxuICAgICAgICAgICAgICAuc2hvdWxkLmV2ZW50dWFsbHkuYmVjb21lKCdodG1sJyk7XG4gICAgfSk7XG4gICAgaXQoJ3Nob3VsZCBub3Qgc3dpdGNoIHRvIGEgZnJhbWUgdGhhdCBpcyBub3QgdGhlcmUnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkcml2ZXIuZnJhbWUoJ2ZvbycpLnNob3VsZC5ldmVudHVhbGx5LmJlLnJlamVjdGVkV2l0aCgvOC8pO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgc3dpdGNoIHRvIGFuIGlmcmFtZScsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGF3YWl0IGRyaXZlci5mcmFtZSgnaWZyYW1lMScpLnRpdGxlKClcbiAgICAgICAgICAgICAgLnNob3VsZC5ldmVudHVhbGx5LmJlY29tZSgnVGVzdCBpRnJhbWUnKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIHN3aXRjaCBiYWNrIHRvIGRlZmF1bHQgZnJhbWUnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkcml2ZXIuZnJhbWUobnVsbCkudGl0bGUoKVxuICAgICAgICAgICAgICAuc2hvdWxkLmV2ZW50dWFsbHkuYmVjb21lKCdUZXN0IFdlYnZpZXcnKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIGdvIGJhY2sgdG8gbmF0aXZlIGNvbnRleHQnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkcml2ZXIuY29udGV4dCgnTkFUSVZFX0FQUCcpLmVsZW1lbnRCeVhQYXRoKCcvLyonKS5nZXRUYWdOYW1lKClcbiAgICAgICAgICAgICAgLnNob3VsZC5ldmVudHVhbGx5LmJlY29tZSgnYXBwJyk7XG4gICAgfSk7XG4gICAgaXQoJ3Nob3VsZCBub3Qgc2V0IGEgZnJhbWUgaW4gYSBuYXRpdmUgY29udGV4dCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGF3YWl0IGRyaXZlci5mcmFtZSgnaWZyYW1lMScpLnNob3VsZC5ldmVudHVhbGx5LmJlLnJlamVjdGVkV2l0aCgvMzYvKTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvbnRleHRUZXN0cztcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
