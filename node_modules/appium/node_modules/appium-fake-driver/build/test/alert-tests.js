'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _helpers = require('./helpers');

function alertTests() {
  describe('alerts', function () {
    var driver = undefined;
    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _helpers.initSession)(_helpers.DEFAULT_CAPS));

          case 2:
            driver = context$3$0.sent;

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    after(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap((0, _helpers.deleteSession)());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    it('should not work with alerts when one is not present', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.alertText().should.eventually.be.rejectedWith(/27/));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.alertKeys('foo').should.eventually.be.rejectedWith(/27/));

          case 4:
            context$3$0.next = 6;
            return _regeneratorRuntime.awrap(driver.acceptAlert().should.eventually.be.rejectedWith(/27/));

          case 6:
            context$3$0.next = 8;
            return _regeneratorRuntime.awrap(driver.dismissAlert().should.eventually.be.rejectedWith(/27/));

          case 8:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should get text of an alert', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementById("AlertButton").click());

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.alertText());

          case 4:
            context$3$0.sent.should.equal("Fake Alert");

          case 5:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should set the text of an alert', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.alertKeys('foo'));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.alertText());

          case 4:
            context$3$0.sent.should.equal('foo');

          case 5:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not do other things while an alert is there', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.elementById("nav").click().should.eventually.be.rejectedWith(/26/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it.skip('should accept an alert', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            driver.acceptAlert().elementById("nav").click().nodeify();

          case 1:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it.skip('should not set the text of the wrong kind of alert', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            driver.elementById("AlertButton2").click().alertText().should.eventually.become('Fake Alert 2').alertKeys('foo').should.be.rejectedWith(/12/).nodeify();

          case 1:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it.skip('should dismiss an alert', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            driver.acceptAlert().elementById("nav").click().nodeify();

          case 1:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
}

exports['default'] = alertTests;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,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b3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbml0U2Vzc2lvbiwgZGVsZXRlU2Vzc2lvbiwgREVGQVVMVF9DQVBTIH0gZnJvbSAnLi9oZWxwZXJzJztcblxuZnVuY3Rpb24gYWxlcnRUZXN0cyAoKSB7XG4gIGRlc2NyaWJlKCdhbGVydHMnLCBmdW5jdGlvbiAoKSB7XG4gICAgbGV0IGRyaXZlcjtcbiAgICBiZWZvcmUgKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGRyaXZlciA9IGF3YWl0IGluaXRTZXNzaW9uKERFRkFVTFRfQ0FQUyk7XG4gICAgfSk7XG4gICAgYWZ0ZXIoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgYXdhaXQgZGVsZXRlU2Vzc2lvbigpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBub3Qgd29yayB3aXRoIGFsZXJ0cyB3aGVuIG9uZSBpcyBub3QgcHJlc2VudCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGF3YWl0IGRyaXZlci5hbGVydFRleHQoKS5zaG91bGQuZXZlbnR1YWxseS5iZS5yZWplY3RlZFdpdGgoLzI3Lyk7XG4gICAgICBhd2FpdCBkcml2ZXIuYWxlcnRLZXlzKCdmb28nKS5zaG91bGQuZXZlbnR1YWxseS5iZS5yZWplY3RlZFdpdGgoLzI3Lyk7XG4gICAgICBhd2FpdCBkcml2ZXIuYWNjZXB0QWxlcnQoKS5zaG91bGQuZXZlbnR1YWxseS5iZS5yZWplY3RlZFdpdGgoLzI3Lyk7XG4gICAgICBhd2FpdCBkcml2ZXIuZGlzbWlzc0FsZXJ0KCkuc2hvdWxkLmV2ZW50dWFsbHkuYmUucmVqZWN0ZWRXaXRoKC8yNy8pO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgZ2V0IHRleHQgb2YgYW4gYWxlcnQnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkcml2ZXIuZWxlbWVudEJ5SWQoXCJBbGVydEJ1dHRvblwiKS5jbGljaygpO1xuICAgICAgKGF3YWl0IGRyaXZlci5hbGVydFRleHQoKSkuc2hvdWxkLmVxdWFsKFwiRmFrZSBBbGVydFwiKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIHNldCB0aGUgdGV4dCBvZiBhbiBhbGVydCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGF3YWl0IGRyaXZlci5hbGVydEtleXMoJ2ZvbycpO1xuICAgICAgKGF3YWl0IGRyaXZlci5hbGVydFRleHQoKSkuc2hvdWxkLmVxdWFsKCdmb28nKTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIG5vdCBkbyBvdGhlciB0aGluZ3Mgd2hpbGUgYW4gYWxlcnQgaXMgdGhlcmUnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkcml2ZXIuZWxlbWVudEJ5SWQoXCJuYXZcIikuY2xpY2soKVxuICAgICAgICAgICAgICAuc2hvdWxkLmV2ZW50dWFsbHkuYmUucmVqZWN0ZWRXaXRoKC8yNi8pO1xuICAgIH0pO1xuICAgIGl0LnNraXAoJ3Nob3VsZCBhY2NlcHQgYW4gYWxlcnQnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBkcml2ZXJcbiAgICAgICAgLmFjY2VwdEFsZXJ0KClcbiAgICAgICAgLmVsZW1lbnRCeUlkKFwibmF2XCIpXG4gICAgICAgIC5jbGljaygpXG4gICAgICAgIC5ub2RlaWZ5KCk7XG4gICAgfSk7XG4gICAgaXQuc2tpcCgnc2hvdWxkIG5vdCBzZXQgdGhlIHRleHQgb2YgdGhlIHdyb25nIGtpbmQgb2YgYWxlcnQnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBkcml2ZXJcbiAgICAgICAgLmVsZW1lbnRCeUlkKFwiQWxlcnRCdXR0b24yXCIpXG4gICAgICAgIC5jbGljaygpXG4gICAgICAgIC5hbGVydFRleHQoKVxuICAgICAgICAgIC5zaG91bGQuZXZlbnR1YWxseS5iZWNvbWUoJ0Zha2UgQWxlcnQgMicpXG4gICAgICAgIC5hbGVydEtleXMoJ2ZvbycpXG4gICAgICAgICAgLnNob3VsZC5iZS5yZWplY3RlZFdpdGgoLzEyLylcbiAgICAgICAgLm5vZGVpZnkoKTtcbiAgICB9KTtcbiAgICBpdC5za2lwKCdzaG91bGQgZGlzbWlzcyBhbiBhbGVydCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGRyaXZlclxuICAgICAgICAuYWNjZXB0QWxlcnQoKVxuICAgICAgICAuZWxlbWVudEJ5SWQoXCJuYXZcIilcbiAgICAgICAgLmNsaWNrKClcbiAgICAgICAgLm5vZGVpZnkoKTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFsZXJ0VGVzdHM7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=
