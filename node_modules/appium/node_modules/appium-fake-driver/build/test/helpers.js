'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _wd = require('wd');

var _wd2 = _interopRequireDefault(_wd);

var TEST_HOST = 'localhost';
var TEST_PORT = 4774;
var TEST_APP = _path2['default'].resolve(__dirname, "..", "..", "test", "fixtures", "app.xml");

var DEFAULT_CAPS = { platformName: 'Fake', deviceName: 'Fake', app: TEST_APP };

var driver = undefined;

function initSession(caps) {
  return _regeneratorRuntime.async(function initSession$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        driver = _wd2['default'].promiseChainRemote({ host: TEST_HOST, port: TEST_PORT });
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(driver.init(caps));

      case 3:
        return context$1$0.abrupt('return', driver);

      case 4:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function deleteSession() {
  return _regeneratorRuntime.async(function deleteSession$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.prev = 0;
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(driver.quit());

      case 3:
        context$1$0.next = 7;
        break;

      case 5:
        context$1$0.prev = 5;
        context$1$0.t0 = context$1$0['catch'](0);

      case 7:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[0, 5]]);
}

exports.initSession = initSession;
exports.deleteSession = deleteSession;
exports.TEST_APP = TEST_APP;
exports.TEST_HOST = TEST_HOST;
exports.TEST_PORT = TEST_PORT;
exports.DEFAULT_CAPS = DEFAULT_CAPS;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvaGVscGVycy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O29CQUFpQixNQUFNOzs7O2tCQUNSLElBQUk7Ozs7QUFHbkIsSUFBTSxTQUFTLEdBQUcsV0FBVyxDQUFDO0FBQzlCLElBQU0sU0FBUyxHQUFHLElBQUksQ0FBQztBQUN2QixJQUFNLFFBQVEsR0FBRyxrQkFBSyxPQUFPLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxTQUFTLENBQUMsQ0FBQzs7QUFFcEYsSUFBTSxZQUFZLEdBQUcsRUFBQyxZQUFZLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBQyxDQUFDOztBQUUvRSxJQUFJLE1BQU0sWUFBQSxDQUFDOztBQUVYLFNBQWUsV0FBVyxDQUFFLElBQUk7Ozs7QUFDOUIsY0FBTSxHQUFHLGdCQUFHLGtCQUFrQixDQUFDLEVBQUMsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFDLENBQUMsQ0FBQzs7eUNBQzdELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDOzs7NENBQ2hCLE1BQU07Ozs7Ozs7Q0FDZDs7QUFFRCxTQUFlLGFBQWE7Ozs7Ozt5Q0FFbEIsTUFBTSxDQUFDLElBQUksRUFBRTs7Ozs7Ozs7Ozs7Ozs7O0NBRXRCOztRQUVRLFdBQVcsR0FBWCxXQUFXO1FBQUUsYUFBYSxHQUFiLGFBQWE7UUFBRSxRQUFRLEdBQVIsUUFBUTtRQUFFLFNBQVMsR0FBVCxTQUFTO1FBQUUsU0FBUyxHQUFULFNBQVM7UUFBRSxZQUFZLEdBQVosWUFBWSIsImZpbGUiOiJ0ZXN0L2hlbHBlcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB3ZCBmcm9tICd3ZCc7XG5cblxuY29uc3QgVEVTVF9IT1NUID0gJ2xvY2FsaG9zdCc7XG5jb25zdCBURVNUX1BPUlQgPSA0Nzc0O1xuY29uc3QgVEVTVF9BUFAgPSBwYXRoLnJlc29sdmUoX19kaXJuYW1lLCBcIi4uXCIsIFwiLi5cIiwgXCJ0ZXN0XCIsIFwiZml4dHVyZXNcIiwgXCJhcHAueG1sXCIpO1xuXG5jb25zdCBERUZBVUxUX0NBUFMgPSB7cGxhdGZvcm1OYW1lOiAnRmFrZScsIGRldmljZU5hbWU6ICdGYWtlJywgYXBwOiBURVNUX0FQUH07XG5cbmxldCBkcml2ZXI7XG5cbmFzeW5jIGZ1bmN0aW9uIGluaXRTZXNzaW9uIChjYXBzKSB7XG4gIGRyaXZlciA9IHdkLnByb21pc2VDaGFpblJlbW90ZSh7aG9zdDogVEVTVF9IT1NULCBwb3J0OiBURVNUX1BPUlR9KTtcbiAgYXdhaXQgZHJpdmVyLmluaXQoY2Fwcyk7XG4gIHJldHVybiBkcml2ZXI7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGRlbGV0ZVNlc3Npb24gKCkge1xuICB0cnkge1xuICAgIGF3YWl0IGRyaXZlci5xdWl0KCk7XG4gIH0gY2F0Y2ggKGlnbikge31cbn1cblxuZXhwb3J0IHsgaW5pdFNlc3Npb24sIGRlbGV0ZVNlc3Npb24sIFRFU1RfQVBQLCBURVNUX0hPU1QsIFRFU1RfUE9SVCwgREVGQVVMVF9DQVBTIH07XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=
