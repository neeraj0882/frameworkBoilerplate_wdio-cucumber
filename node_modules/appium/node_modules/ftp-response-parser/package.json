{
  "_args": [
    [
      {
        "raw": "ftp-response-parser@https://registry.npmjs.org/ftp-response-parser/-/ftp-response-parser-1.0.1.tgz",
        "scope": null,
        "escapedName": "ftp-response-parser",
        "name": "ftp-response-parser",
        "rawSpec": "https://registry.npmjs.org/ftp-response-parser/-/ftp-response-parser-1.0.1.tgz",
        "spec": "https://registry.npmjs.org/ftp-response-parser/-/ftp-response-parser-1.0.1.tgz",
        "type": "remote"
      },
      "/Users/saxenan3/myprojects/uiAutomation/mytest_project/node_modules/appium"
    ]
  ],
  "_from": "ftp-response-parser@https://registry.npmjs.org/ftp-response-parser/-/ftp-response-parser-1.0.1.tgz",
  "_id": "ftp-response-parser@1.0.1",
  "_inCache": true,
  "_location": "/appium/ftp-response-parser",
  "_phantomChildren": {
    "core-util-is": "1.0.2",
    "inherits": "2.0.3"
  },
  "_requested": {
    "raw": "ftp-response-parser@https://registry.npmjs.org/ftp-response-parser/-/ftp-response-parser-1.0.1.tgz",
    "scope": null,
    "escapedName": "ftp-response-parser",
    "name": "ftp-response-parser",
    "rawSpec": "https://registry.npmjs.org/ftp-response-parser/-/ftp-response-parser-1.0.1.tgz",
    "spec": "https://registry.npmjs.org/ftp-response-parser/-/ftp-response-parser-1.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium",
    "/appium/jsftp"
  ],
  "_resolved": "https://registry.npmjs.org/ftp-response-parser/-/ftp-response-parser-1.0.1.tgz",
  "_shasum": "3b9d33f8edd5fb8e4700b8f778c462e5b1581f89",
  "_shrinkwrap": null,
  "_spec": "ftp-response-parser@https://registry.npmjs.org/ftp-response-parser/-/ftp-response-parser-1.0.1.tgz",
  "_where": "/Users/saxenan3/myprojects/uiAutomation/mytest_project/node_modules/appium",
  "author": {
    "name": "Sergi Mansilla",
    "email": "sergi.mansilla@gmail.com",
    "url": "http://sergimansilla.com"
  },
  "bugs": {
    "url": "https://github.com/sergi/ftp-response-parser/issues"
  },
  "dependencies": {
    "readable-stream": "^1.0.31"
  },
  "description": "Parser for FTP server responses",
  "devDependencies": {
    "resumer": "~0.0.0",
    "tape": "~2.1.0"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "homepage": "https://github.com/sergi/ftp-response-parser",
  "id": "ftp-response-parser",
  "keywords": [
    "ftp",
    "response",
    "protocol",
    "files",
    "server",
    "client",
    "async"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/sergi/ftp-response-parser/blob/master/LICENSE"
    }
  ],
  "main": "./index.js",
  "name": "ftp-response-parser",
  "optionalDependencies": {},
  "readme": "# ftp-response-parser\n\nThis module provides a fast, lightweight streaming parser for FTP response\nformat strings.\n\nGiven a string like this:\n\n```\n211-Features supported:\\n\n EPRT\\n\n EPSV\\n\n MDTM\\n\n MLST type*;perm*;size*;modify*;unique*;unix.mode;unix.uid;unix.gid;\\n\n REST STREAM\\n\n SIZE\\n\n TVFS\\n\n UTF8\\n\n211 End FEAT.\\n\n215 UNIX Type: L8\\n\n331 Username ok, send password.\\n\n230 Login successful.\\n\n200 Type set to: Binary.\\n\n250 \"/test\" is the current directory.\\n\n```\n\nit will stream the following objects:\n\n```javascript\n{\n  code: 211,\n  text: '211-Features supported:\\n EPRT\\n EPSV\\n MDTM\\n MLST type*;perm*;size*;modify*;unique*;unix.mode;unix.uid;unix.gid;\\n REST STREAM\\n SIZE\\n TVFS\\n UTF8\\n211 End FEAT.',\n  isMark: false,\n  isError: false\n}\n{\n  code: 215,\n  text: '215 UNIX Type: L8',\n  isMark: false,\n  isError: false\n}\n{\n  code: 331,\n  text: '331 Username ok, send password.',\n  isMark: false,\n  isError: false\n}\n{\n  code: 230,\n  text: '230 Login successful.',\n  isMark: false,\n  isError: false\n}\n{\n  code: 200,\n  text: '200 Type set to: Binary.',\n  isMark: false,\n  isError: false\n}\n{\n  code: 250,\n  text: '250 \"/test\" is the current directory.',\n  isMark: false,\n  isError: false\n}\n```\n\n## Usage\n\n```javascript\n\nvar ResponseParser = require('ftp-response-parser');\n\nvar myParser = new ResponseParser();\n\nmyParser.on('readable', function() {\n  var line;\n  while (line = myParser.read()) {\n    console.log(line.code); // will emit 215\n  }\n});\n\nmyParser.write('215 UNIX Type: L8');\n\n```\n\n## Install\n\nTo get the module, with [npm](https://npmjs.org) do:\n\n```\nnpm install ftp-response-parser\n```\n\n## Test\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm test\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sergi/ftp-response-parser.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "version": "1.0.1"
}
