{
  "_args": [
    [
      {
        "raw": "cls-bluebird@https://registry.npmjs.org/cls-bluebird/-/cls-bluebird-1.1.3.tgz",
        "scope": null,
        "escapedName": "cls-bluebird",
        "name": "cls-bluebird",
        "rawSpec": "https://registry.npmjs.org/cls-bluebird/-/cls-bluebird-1.1.3.tgz",
        "spec": "https://registry.npmjs.org/cls-bluebird/-/cls-bluebird-1.1.3.tgz",
        "type": "remote"
      },
      "/Users/saxenan3/myprojects/uiAutomation/mytest_project/node_modules/appium"
    ]
  ],
  "_from": "cls-bluebird@https://registry.npmjs.org/cls-bluebird/-/cls-bluebird-1.1.3.tgz",
  "_id": "cls-bluebird@1.1.3",
  "_inCache": true,
  "_location": "/appium/cls-bluebird",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cls-bluebird@https://registry.npmjs.org/cls-bluebird/-/cls-bluebird-1.1.3.tgz",
    "scope": null,
    "escapedName": "cls-bluebird",
    "name": "cls-bluebird",
    "rawSpec": "https://registry.npmjs.org/cls-bluebird/-/cls-bluebird-1.1.3.tgz",
    "spec": "https://registry.npmjs.org/cls-bluebird/-/cls-bluebird-1.1.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium",
    "/appium/request-promise"
  ],
  "_resolved": "https://registry.npmjs.org/cls-bluebird/-/cls-bluebird-1.1.3.tgz",
  "_shasum": "b3263c11a089b0396185a1b7ab904d90f02ad428",
  "_shrinkwrap": null,
  "_spec": "cls-bluebird@https://registry.npmjs.org/cls-bluebird/-/cls-bluebird-1.1.3.tgz",
  "_where": "/Users/saxenan3/myprojects/uiAutomation/mytest_project/node_modules/appium",
  "author": {
    "name": "Tim Beyer",
    "email": "tim.beyer@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/TimBeyer/cls-bluebird/issues"
  },
  "dependencies": {
    "is-bluebird": "^1.0.1",
    "shimmer": "^1.1.0"
  },
  "description": "Make bluebird work with the continuation-local-storage module.",
  "devDependencies": {
    "bluebird": "^2.10.2",
    "continuation-local-storage": "^3.1.7",
    "jshint": "^2.9.2",
    "redis": "~0.9.0",
    "tap": "~0.4.4"
  },
  "homepage": "https://github.com/TimBeyer/cls-bluebird#readme",
  "keywords": [
    "continuation-local-storage",
    "cls",
    "bluebird",
    "continuation",
    "local",
    "storage",
    "promise",
    "promises",
    "async",
    "thread",
    "glue",
    "baling-wire",
    "patch"
  ],
  "license": "BSD-2-Clause",
  "main": "shim.js",
  "name": "cls-bluebird",
  "optionalDependencies": {},
  "readme": "# continuation-local-storage support for bluebird promises\n\n[![NPM version](https://img.shields.io/npm/v/cls-bluebird.svg)](https://www.npmjs.com/package/cls-bluebird)\n[![Build Status](https://img.shields.io/travis/TimBeyer/cls-bluebird/master.svg)](http://travis-ci.org/TimBeyer/cls-bluebird)\n[![Dependency Status](https://img.shields.io/david/TimBeyer/cls-bluebird.svg)](https://david-dm.org/TimBeyer/cls-bluebird)\n[![Dev dependency Status](https://img.shields.io/david/dev/TimBeyer/cls-bluebird.svg)](https://david-dm.org/TimBeyer/cls-bluebird)\n[![Coverage Status](https://img.shields.io/coveralls/TimBeyer/cls-bluebird/master.svg)](https://coveralls.io/r/TimBeyer/cls-bluebird)\n\nPatch [bluebird](https://www.npmjs.com/package/bluebird) for [continuation-local-storage](https://www.npmjs.com/package/continuation-local-storage) support.\n\n## Current Status\n\nCurrently works with bluebird v2.x only. But bluebird v3.x support coming soon!\n\n## Usage\n\n### `clsBluebird( ns [, Promise] )`\n\n```js\nvar cls = require('continuation-local-storage');\nvar ns = cls.createNamespace('myNamespace');\n\nvar Promise = require('bluebird');\nvar clsBluebird = require('cls-bluebird');\n\nclsBluebird( ns );\n// Promise is now patched to maintain CLS context\n```\n\nThe above patches the \"global\" instance of bluebird. So anywhere else in the same app that calls `require('bluebird')` will get the patched version (assuming npm resolves to the same file).\n\n### Patching a particular instance of Bluebird\n\nTo patch a particular instance of bluebird:\n\n```js\nvar Promise = require('bluebird');\nvar clsBluebird = require('cls-bluebird');\n\nclsBluebird( ns, Promise );\n```\n\nThis is a more robust approach.\n\n### Nature of patching\n\nCombining CLS and promises is a slightly tricky business. There are 3 different conventions one could use (see [this issue](https://github.com/TimBeyer/cls-bluebird/issues/6) for more detail).\n\n`cls-bluebird` follows the convention of binding `.then()` callbacks **to the context in which `.then()` is called**.\n\n```js\nvar promise;\nns.run(function() {\n    ns.set('foo', 123);\n    promise = Promise.resolve();\n});\n\nns.run(function() {\n    ns.set('foo', 456);\n    promise.then(print);\n});\n\nfunction print() {\n    console.log(ns.get('foo'));\n}\n\n// this outputs '456' (the value of `foo` at the time `.then()` was called)\n```\n\n## Tests\n\nUse `npm test` to run the tests.\n\nThe tests require a Redis server to be up and running on localhost on the standard port.\n\nWork is underway to expand the tests and remove the dependence on Redis.\n\n## Changelog\n\nSee [changelog.md](https://github.com/TimBeyer/cls-bluebird/blob/master/changelog.md)\n\n## Issues\n\nIf you discover a bug, please raise an issue on Github. https://github.com/TimBeyer/cls-bluebird/issues\n\n## Contribution\n\nPull requests are very welcome. Please:\n\n* ensure all tests pass before submitting PR\n* add an entry to changelog\n* add tests for new features\n* document new functionality/API additions in README\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/TimBeyer/cls-bluebird.git"
  },
  "scripts": {
    "jshint": "jshint shim.js test",
    "test": "npm run jshint && npm run test-main",
    "test-main": "tap test/*.tap.js"
  },
  "version": "1.1.3"
}
