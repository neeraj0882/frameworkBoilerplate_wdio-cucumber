'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _simulatorXcode9 = require('./simulator-xcode-9');

var _simulatorXcode92 = _interopRequireDefault(_simulatorXcode9);

var _teen_process = require('teen_process');

// https://regex101.com/r/MEL55t/1
var WEBINSPECTOR_SOCKET_REGEXP = /\s+(\S+com\.apple\.webinspectord_sim\.socket)/;

var SimulatorXcode93 = (function (_SimulatorXcode9) {
  _inherits(SimulatorXcode93, _SimulatorXcode9);

  function SimulatorXcode93(udid, xcodeVersion) {
    _classCallCheck(this, SimulatorXcode93);

    _get(Object.getPrototypeOf(SimulatorXcode93.prototype), 'constructor', this).call(this, udid, xcodeVersion);

    this.webInspectorSocket = null;
  }

  /*
   * @override
   */

  _createClass(SimulatorXcode93, [{
    key: 'getWebInspectorSocket',
    value: function getWebInspectorSocket() {
      var _ref,

      // lsof -aUc launchd_sim
      // gives a set of records like:
      //   launchd_s 69760 isaac    3u  unix 0x57aa4fceea3937f3      0t0      /private/tmp/com.apple.CoreSimulator.SimDevice.D7082A5C-34B5-475C-994E-A21534423B9E/syslogsock
      //   launchd_s 69760 isaac    5u  unix 0x57aa4fceea395f03      0t0      /private/tmp/com.apple.launchd.2B2u8CkN8S/Listeners
      //   launchd_s 69760 isaac    6u  unix 0x57aa4fceea39372b      0t0      ->0x57aa4fceea3937f3
      //   launchd_s 69760 isaac    8u  unix 0x57aa4fceea39598b      0t0      /private/tmp/com.apple.launchd.2j5k1TMh6i/com.apple.webinspectord_sim.socket
      //   launchd_s 69760 isaac    9u  unix 0x57aa4fceea394c43      0t0      /private/tmp/com.apple.launchd.4zm9JO9KEs/com.apple.testmanagerd.unix-domain.socket
      //   launchd_s 69760 isaac   10u  unix 0x57aa4fceea395f03      0t0      /private/tmp/com.apple.launchd.2B2u8CkN8S/Listeners
      //   launchd_s 69760 isaac   11u  unix 0x57aa4fceea39598b      0t0      /private/tmp/com.apple.launchd.2j5k1TMh6i/com.apple.webinspectord_sim.socket
      //   launchd_s 69760 isaac   12u  unix 0x57aa4fceea394c43      0t0      /private/tmp/com.apple.launchd.4zm9JO9KEs/com.apple.testmanagerd.unix-domain.socket
      // these _appear_ to always be grouped together (so, the records for the particular sim are all in a group, before the next sim, etc.)
      // so starting from the correct UDID, we ought to be able to pull the next record with `com.apple.webinspectord_sim.socket` to get the correct socket
      stdout, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, record, match;

      return _regeneratorRuntime.async(function getWebInspectorSocket$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            if (!this.webInspectorSocket) {
              context$2$0.next = 2;
              break;
            }

            return context$2$0.abrupt('return', this.webInspectorSocket);

          case 2:
            context$2$0.next = 4;
            return _regeneratorRuntime.awrap((0, _teen_process.exec)('lsof', ['-aUc', 'launchd_sim']));

          case 4:
            _ref = context$2$0.sent;
            stdout = _ref.stdout;
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _iteratorError = undefined;
            context$2$0.prev = 9;
            _iterator = _getIterator(stdout.split('com.apple.CoreSimulator.SimDevice.'));

          case 11:
            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
              context$2$0.next = 23;
              break;
            }

            record = _step.value;

            if (record.includes(this.udid)) {
              context$2$0.next = 15;
              break;
            }

            return context$2$0.abrupt('continue', 20);

          case 15:
            match = WEBINSPECTOR_SOCKET_REGEXP.exec(record);

            if (match) {
              context$2$0.next = 18;
              break;
            }

            return context$2$0.abrupt('return', null);

          case 18:
            this.webInspectorSocket = match[1];
            return context$2$0.abrupt('return', this.webInspectorSocket);

          case 20:
            _iteratorNormalCompletion = true;
            context$2$0.next = 11;
            break;

          case 23:
            context$2$0.next = 29;
            break;

          case 25:
            context$2$0.prev = 25;
            context$2$0.t0 = context$2$0['catch'](9);
            _didIteratorError = true;
            _iteratorError = context$2$0.t0;

          case 29:
            context$2$0.prev = 29;
            context$2$0.prev = 30;

            if (!_iteratorNormalCompletion && _iterator['return']) {
              _iterator['return']();
            }

          case 32:
            context$2$0.prev = 32;

            if (!_didIteratorError) {
              context$2$0.next = 35;
              break;
            }

            throw _iteratorError;

          case 35:
            return context$2$0.finish(32);

          case 36:
            return context$2$0.finish(29);

          case 37:
            return context$2$0.abrupt('return', null);

          case 38:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[9, 25, 29, 37], [30,, 32, 36]]);
    }
  }]);

  return SimulatorXcode93;
})(_simulatorXcode92['default']);

exports['default'] = SimulatorXcode93;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zaW11bGF0b3IteGNvZGUtOS4zLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQUE0QixxQkFBcUI7Ozs7NEJBQzVCLGNBQWM7OztBQUluQyxJQUFNLDBCQUEwQixHQUFHLCtDQUErQyxDQUFDOztJQUU3RSxnQkFBZ0I7WUFBaEIsZ0JBQWdCOztBQUNSLFdBRFIsZ0JBQWdCLENBQ1AsSUFBSSxFQUFFLFlBQVksRUFBRTswQkFEN0IsZ0JBQWdCOztBQUVsQiwrQkFGRSxnQkFBZ0IsNkNBRVosSUFBSSxFQUFFLFlBQVksRUFBRTs7QUFFMUIsUUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQztHQUNoQzs7Ozs7O2VBTEcsZ0JBQWdCOztXQVVROzs7Ozs7Ozs7Ozs7Ozs7QUFpQnJCLFlBQU0sa0ZBQ0YsTUFBTSxFQUlQLEtBQUs7Ozs7O2lCQXJCVCxJQUFJLENBQUMsa0JBQWtCOzs7OztnREFDbEIsSUFBSSxDQUFDLGtCQUFrQjs7Ozs2Q0FlWCx3QkFBSyxNQUFNLEVBQUUsQ0FBQyxNQUFNLEVBQUUsYUFBYSxDQUFDLENBQUM7Ozs7QUFBckQsa0JBQU0sUUFBTixNQUFNOzs7OztxQ0FDUSxNQUFNLENBQUMsS0FBSyxDQUFDLG9DQUFvQyxDQUFDOzs7Ozs7OztBQUE1RCxrQkFBTTs7Z0JBQ1IsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDOzs7Ozs7OztBQUd6QixpQkFBSyxHQUFHLDBCQUEwQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7O2dCQUNoRCxLQUFLOzs7OztnREFDRCxJQUFJOzs7QUFFYixnQkFBSSxDQUFDLGtCQUFrQixHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnREFDNUIsSUFBSSxDQUFDLGtCQUFrQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dEQUd6QixJQUFJOzs7Ozs7O0tBQ1o7OztTQXpDRyxnQkFBZ0I7OztxQkE0Q1AsZ0JBQWdCIiwiZmlsZSI6ImxpYi9zaW11bGF0b3IteGNvZGUtOS4zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNpbXVsYXRvclhjb2RlOSBmcm9tICcuL3NpbXVsYXRvci14Y29kZS05JztcbmltcG9ydCB7IGV4ZWMgfSBmcm9tICd0ZWVuX3Byb2Nlc3MnO1xuXG5cbi8vIGh0dHBzOi8vcmVnZXgxMDEuY29tL3IvTUVMNTV0LzFcbmNvbnN0IFdFQklOU1BFQ1RPUl9TT0NLRVRfUkVHRVhQID0gL1xccysoXFxTK2NvbVxcLmFwcGxlXFwud2ViaW5zcGVjdG9yZF9zaW1cXC5zb2NrZXQpLztcblxuY2xhc3MgU2ltdWxhdG9yWGNvZGU5MyBleHRlbmRzIFNpbXVsYXRvclhjb2RlOSB7XG4gIGNvbnN0cnVjdG9yICh1ZGlkLCB4Y29kZVZlcnNpb24pIHtcbiAgICBzdXBlcih1ZGlkLCB4Y29kZVZlcnNpb24pO1xuXG4gICAgdGhpcy53ZWJJbnNwZWN0b3JTb2NrZXQgPSBudWxsO1xuICB9XG5cbiAgLypcbiAgICogQG92ZXJyaWRlXG4gICAqL1xuICBhc3luYyBnZXRXZWJJbnNwZWN0b3JTb2NrZXQgKCkge1xuICAgIGlmICh0aGlzLndlYkluc3BlY3RvclNvY2tldCkge1xuICAgICAgcmV0dXJuIHRoaXMud2ViSW5zcGVjdG9yU29ja2V0O1xuICAgIH1cblxuICAgIC8vIGxzb2YgLWFVYyBsYXVuY2hkX3NpbVxuICAgIC8vIGdpdmVzIGEgc2V0IG9mIHJlY29yZHMgbGlrZTpcbiAgICAvLyAgIGxhdW5jaGRfcyA2OTc2MCBpc2FhYyAgICAzdSAgdW5peCAweDU3YWE0ZmNlZWEzOTM3ZjMgICAgICAwdDAgICAgICAvcHJpdmF0ZS90bXAvY29tLmFwcGxlLkNvcmVTaW11bGF0b3IuU2ltRGV2aWNlLkQ3MDgyQTVDLTM0QjUtNDc1Qy05OTRFLUEyMTUzNDQyM0I5RS9zeXNsb2dzb2NrXG4gICAgLy8gICBsYXVuY2hkX3MgNjk3NjAgaXNhYWMgICAgNXUgIHVuaXggMHg1N2FhNGZjZWVhMzk1ZjAzICAgICAgMHQwICAgICAgL3ByaXZhdGUvdG1wL2NvbS5hcHBsZS5sYXVuY2hkLjJCMnU4Q2tOOFMvTGlzdGVuZXJzXG4gICAgLy8gICBsYXVuY2hkX3MgNjk3NjAgaXNhYWMgICAgNnUgIHVuaXggMHg1N2FhNGZjZWVhMzkzNzJiICAgICAgMHQwICAgICAgLT4weDU3YWE0ZmNlZWEzOTM3ZjNcbiAgICAvLyAgIGxhdW5jaGRfcyA2OTc2MCBpc2FhYyAgICA4dSAgdW5peCAweDU3YWE0ZmNlZWEzOTU5OGIgICAgICAwdDAgICAgICAvcHJpdmF0ZS90bXAvY29tLmFwcGxlLmxhdW5jaGQuMmo1azFUTWg2aS9jb20uYXBwbGUud2ViaW5zcGVjdG9yZF9zaW0uc29ja2V0XG4gICAgLy8gICBsYXVuY2hkX3MgNjk3NjAgaXNhYWMgICAgOXUgIHVuaXggMHg1N2FhNGZjZWVhMzk0YzQzICAgICAgMHQwICAgICAgL3ByaXZhdGUvdG1wL2NvbS5hcHBsZS5sYXVuY2hkLjR6bTlKTzlLRXMvY29tLmFwcGxlLnRlc3RtYW5hZ2VyZC51bml4LWRvbWFpbi5zb2NrZXRcbiAgICAvLyAgIGxhdW5jaGRfcyA2OTc2MCBpc2FhYyAgIDEwdSAgdW5peCAweDU3YWE0ZmNlZWEzOTVmMDMgICAgICAwdDAgICAgICAvcHJpdmF0ZS90bXAvY29tLmFwcGxlLmxhdW5jaGQuMkIydThDa044Uy9MaXN0ZW5lcnNcbiAgICAvLyAgIGxhdW5jaGRfcyA2OTc2MCBpc2FhYyAgIDExdSAgdW5peCAweDU3YWE0ZmNlZWEzOTU5OGIgICAgICAwdDAgICAgICAvcHJpdmF0ZS90bXAvY29tLmFwcGxlLmxhdW5jaGQuMmo1azFUTWg2aS9jb20uYXBwbGUud2ViaW5zcGVjdG9yZF9zaW0uc29ja2V0XG4gICAgLy8gICBsYXVuY2hkX3MgNjk3NjAgaXNhYWMgICAxMnUgIHVuaXggMHg1N2FhNGZjZWVhMzk0YzQzICAgICAgMHQwICAgICAgL3ByaXZhdGUvdG1wL2NvbS5hcHBsZS5sYXVuY2hkLjR6bTlKTzlLRXMvY29tLmFwcGxlLnRlc3RtYW5hZ2VyZC51bml4LWRvbWFpbi5zb2NrZXRcbiAgICAvLyB0aGVzZSBfYXBwZWFyXyB0byBhbHdheXMgYmUgZ3JvdXBlZCB0b2dldGhlciAoc28sIHRoZSByZWNvcmRzIGZvciB0aGUgcGFydGljdWxhciBzaW0gYXJlIGFsbCBpbiBhIGdyb3VwLCBiZWZvcmUgdGhlIG5leHQgc2ltLCBldGMuKVxuICAgIC8vIHNvIHN0YXJ0aW5nIGZyb20gdGhlIGNvcnJlY3QgVURJRCwgd2Ugb3VnaHQgdG8gYmUgYWJsZSB0byBwdWxsIHRoZSBuZXh0IHJlY29yZCB3aXRoIGBjb20uYXBwbGUud2ViaW5zcGVjdG9yZF9zaW0uc29ja2V0YCB0byBnZXQgdGhlIGNvcnJlY3Qgc29ja2V0XG4gICAgbGV0IHtzdGRvdXR9ID0gYXdhaXQgZXhlYygnbHNvZicsIFsnLWFVYycsICdsYXVuY2hkX3NpbSddKTtcbiAgICBmb3IgKGxldCByZWNvcmQgb2Ygc3Rkb3V0LnNwbGl0KCdjb20uYXBwbGUuQ29yZVNpbXVsYXRvci5TaW1EZXZpY2UuJykpIHtcbiAgICAgIGlmICghcmVjb3JkLmluY2x1ZGVzKHRoaXMudWRpZCkpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBjb25zdCBtYXRjaCA9IFdFQklOU1BFQ1RPUl9TT0NLRVRfUkVHRVhQLmV4ZWMocmVjb3JkKTtcbiAgICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgICB0aGlzLndlYkluc3BlY3RvclNvY2tldCA9IG1hdGNoWzFdO1xuICAgICAgcmV0dXJuIHRoaXMud2ViSW5zcGVjdG9yU29ja2V0O1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNpbXVsYXRvclhjb2RlOTM7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=
