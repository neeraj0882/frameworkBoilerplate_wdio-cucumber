'use strict';

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _appiumIosDriver = require('appium-ios-driver');

var _deviceLogIosCrashLog = require('../device-log/ios-crash-log');

var _deviceLogIosLog = require('../device-log/ios-log');

var _logger = require('../logger');

var _logger2 = _interopRequireDefault(_logger);

var extensions = {};

_Object$assign(extensions, _appiumIosDriver.iosCommands.logging);

extensions.startLogCapture = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        this.logs = this.logs || {};

        if (!(!_lodash2['default'].isUndefined(this.logs.syslog) && this.logs.syslog.isCapturing)) {
          context$1$0.next = 4;
          break;
        }

        _logger2['default'].warn('Trying to start iOS log capture but it has already started!');
        return context$1$0.abrupt('return', true);

      case 4:
        if (_lodash2['default'].isUndefined(this.logs.syslog)) {
          this.logs.crashlog = new _deviceLogIosCrashLog.IOSCrashLog({
            sim: this.opts.device,
            udid: this.isRealDevice() ? this.opts.udid : undefined
          });
          this.logs.syslog = new _deviceLogIosLog.IOSLog({
            sim: this.opts.device,
            udid: this.isRealDevice() ? this.opts.udid : undefined,
            showLogs: this.opts.showIOSLog,
            realDeviceLogger: this.opts.realDeviceLogger,
            xcodeVersion: this.xcodeVersion
          });
        }
        context$1$0.prev = 5;
        context$1$0.next = 8;
        return _regeneratorRuntime.awrap(this.logs.syslog.startCapture());

      case 8:
        context$1$0.next = 14;
        break;

      case 10:
        context$1$0.prev = 10;
        context$1$0.t0 = context$1$0['catch'](5);

        _logger2['default'].warn('Continuing without capturing logs: ' + context$1$0.t0.message);
        return context$1$0.abrupt('return', false);

      case 14:
        context$1$0.next = 16;
        return _regeneratorRuntime.awrap(this.logs.crashlog.startCapture());

      case 16:
        return context$1$0.abrupt('return', true);

      case 17:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[5, 10]]);
};

exports['default'] = extensions;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9sb2cuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O3NCQUFjLFFBQVE7Ozs7K0JBQ00sbUJBQW1COztvQ0FDbkIsNkJBQTZCOzsrQkFDbEMsdUJBQXVCOztzQkFDOUIsV0FBVzs7OztBQUUzQixJQUFJLFVBQVUsR0FBRyxFQUFFLENBQUM7O0FBRXBCLGVBQWMsVUFBVSxFQUFFLDZCQUFZLE9BQU8sQ0FBQyxDQUFDOztBQUUvQyxVQUFVLENBQUMsZUFBZSxHQUFHOzs7O0FBQzNCLFlBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksSUFBSSxFQUFFLENBQUM7O2NBQ3hCLENBQUMsb0JBQUUsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFBOzs7OztBQUNsRSw0QkFBSSxJQUFJLENBQUMsNkRBQTZELENBQUMsQ0FBQzs0Q0FDakUsSUFBSTs7O0FBRWIsWUFBSSxvQkFBRSxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRTtBQUNuQyxjQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxzQ0FBZ0I7QUFDbkMsZUFBRyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTTtBQUNyQixnQkFBSSxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxTQUFTO1dBQ3ZELENBQUMsQ0FBQztBQUNILGNBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLDRCQUFXO0FBQzVCLGVBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU07QUFDckIsZ0JBQUksRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsU0FBUztBQUN0RCxvQkFBUSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVTtBQUM5Qiw0QkFBZ0IsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQjtBQUM1Qyx3QkFBWSxFQUFFLElBQUksQ0FBQyxZQUFZO1dBQ2hDLENBQUMsQ0FBQztTQUNKOzs7eUNBRU8sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFOzs7Ozs7Ozs7O0FBRXJDLDRCQUFJLElBQUkseUNBQXVDLGVBQUksT0FBTyxDQUFHLENBQUM7NENBQ3ZELEtBQUs7Ozs7eUNBRVIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFOzs7NENBQ2hDLElBQUk7Ozs7Ozs7Q0FDWixDQUFDOztxQkFFYSxVQUFVIiwiZmlsZSI6ImxpYi9jb21tYW5kcy9sb2cuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgaW9zQ29tbWFuZHMgfSBmcm9tICdhcHBpdW0taW9zLWRyaXZlcic7XG5pbXBvcnQgeyBJT1NDcmFzaExvZyB9IGZyb20gJy4uL2RldmljZS1sb2cvaW9zLWNyYXNoLWxvZyc7XG5pbXBvcnQgeyBJT1NMb2cgfSBmcm9tICcuLi9kZXZpY2UtbG9nL2lvcy1sb2cnO1xuaW1wb3J0IGxvZyBmcm9tICcuLi9sb2dnZXInO1xuXG5sZXQgZXh0ZW5zaW9ucyA9IHt9O1xuXG5PYmplY3QuYXNzaWduKGV4dGVuc2lvbnMsIGlvc0NvbW1hbmRzLmxvZ2dpbmcpO1xuXG5leHRlbnNpb25zLnN0YXJ0TG9nQ2FwdHVyZSA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5sb2dzID0gdGhpcy5sb2dzIHx8IHt9O1xuICBpZiAoIV8uaXNVbmRlZmluZWQodGhpcy5sb2dzLnN5c2xvZykgJiYgdGhpcy5sb2dzLnN5c2xvZy5pc0NhcHR1cmluZykge1xuICAgIGxvZy53YXJuKCdUcnlpbmcgdG8gc3RhcnQgaU9TIGxvZyBjYXB0dXJlIGJ1dCBpdCBoYXMgYWxyZWFkeSBzdGFydGVkIScpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGlmIChfLmlzVW5kZWZpbmVkKHRoaXMubG9ncy5zeXNsb2cpKSB7XG4gICAgdGhpcy5sb2dzLmNyYXNobG9nID0gbmV3IElPU0NyYXNoTG9nKHtcbiAgICAgIHNpbTogdGhpcy5vcHRzLmRldmljZSxcbiAgICAgIHVkaWQ6IHRoaXMuaXNSZWFsRGV2aWNlKCkgPyB0aGlzLm9wdHMudWRpZCA6IHVuZGVmaW5lZCxcbiAgICB9KTtcbiAgICB0aGlzLmxvZ3Muc3lzbG9nID0gbmV3IElPU0xvZyh7XG4gICAgICBzaW06IHRoaXMub3B0cy5kZXZpY2UsXG4gICAgICB1ZGlkOiB0aGlzLmlzUmVhbERldmljZSgpID8gdGhpcy5vcHRzLnVkaWQgOiB1bmRlZmluZWQsXG4gICAgICBzaG93TG9nczogdGhpcy5vcHRzLnNob3dJT1NMb2csXG4gICAgICByZWFsRGV2aWNlTG9nZ2VyOiB0aGlzLm9wdHMucmVhbERldmljZUxvZ2dlcixcbiAgICAgIHhjb2RlVmVyc2lvbjogdGhpcy54Y29kZVZlcnNpb24sXG4gICAgfSk7XG4gIH1cbiAgdHJ5IHtcbiAgICBhd2FpdCB0aGlzLmxvZ3Muc3lzbG9nLnN0YXJ0Q2FwdHVyZSgpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBsb2cud2FybihgQ29udGludWluZyB3aXRob3V0IGNhcHR1cmluZyBsb2dzOiAke2Vyci5tZXNzYWdlfWApO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBhd2FpdCB0aGlzLmxvZ3MuY3Jhc2hsb2cuc3RhcnRDYXB0dXJlKCk7XG4gIHJldHVybiB0cnVlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZXh0ZW5zaW9ucztcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
