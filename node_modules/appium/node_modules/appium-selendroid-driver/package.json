{
  "_args": [
    [
      {
        "raw": "appium-selendroid-driver@https://registry.npmjs.org/appium-selendroid-driver/-/appium-selendroid-driver-1.7.0.tgz",
        "scope": null,
        "escapedName": "appium-selendroid-driver",
        "name": "appium-selendroid-driver",
        "rawSpec": "https://registry.npmjs.org/appium-selendroid-driver/-/appium-selendroid-driver-1.7.0.tgz",
        "spec": "https://registry.npmjs.org/appium-selendroid-driver/-/appium-selendroid-driver-1.7.0.tgz",
        "type": "remote"
      },
      "/Users/saxenan3/myprojects/uiAutomation/mytest_project/node_modules/appium"
    ]
  ],
  "_from": "appium-selendroid-driver@https://registry.npmjs.org/appium-selendroid-driver/-/appium-selendroid-driver-1.7.0.tgz",
  "_id": "appium-selendroid-driver@1.7.0",
  "_inCache": true,
  "_location": "/appium/appium-selendroid-driver",
  "_phantomChildren": {
    "amdefine": "1.0.1",
    "decamelize": "1.2.0",
    "execa": "0.7.0",
    "get-caller-file": "1.0.2",
    "lcid": "1.0.0",
    "locate-path": "2.0.0",
    "mem": "1.1.0",
    "request-promise-core": "1.1.1",
    "require-directory": "2.1.1",
    "require-main-filename": "1.0.1",
    "set-blocking": "2.0.0",
    "stealthy-require": "1.1.1",
    "tough-cookie": "2.3.4",
    "wrap-ansi": "2.1.0",
    "y18n": "3.2.1"
  },
  "_requested": {
    "raw": "appium-selendroid-driver@https://registry.npmjs.org/appium-selendroid-driver/-/appium-selendroid-driver-1.7.0.tgz",
    "scope": null,
    "escapedName": "appium-selendroid-driver",
    "name": "appium-selendroid-driver",
    "rawSpec": "https://registry.npmjs.org/appium-selendroid-driver/-/appium-selendroid-driver-1.7.0.tgz",
    "spec": "https://registry.npmjs.org/appium-selendroid-driver/-/appium-selendroid-driver-1.7.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium"
  ],
  "_resolved": "https://registry.npmjs.org/appium-selendroid-driver/-/appium-selendroid-driver-1.7.0.tgz",
  "_shasum": "78e45ece2c2785f4ec8da1f6bdf736aea3b29596",
  "_shrinkwrap": null,
  "_spec": "appium-selendroid-driver@https://registry.npmjs.org/appium-selendroid-driver/-/appium-selendroid-driver-1.7.0.tgz",
  "_where": "/Users/saxenan3/myprojects/uiAutomation/mytest_project/node_modules/appium",
  "author": {
    "name": "appium"
  },
  "bin": {},
  "bugs": {
    "url": "https://github.com/appium/appium-selendroid-driver/issues"
  },
  "dependencies": {
    "appium-adb": "^6.2.1",
    "appium-android-driver": "^2.0.2",
    "appium-base-driver": "^2.22.1",
    "appium-support": "^2.5.0",
    "asyncbox": "^2.3.1",
    "babel-runtime": "=5.8.24",
    "lodash": "^4.17.4",
    "request-promise": "^4.1.1",
    "source-map-support": "^0.3.2",
    "teen_process": "^1.7.1",
    "utf7": "^1.0.0",
    "yargs": "^11.0.0"
  },
  "description": "Selendroid integration for Appium",
  "devDependencies": {
    "appium-gulp-plugins": "^2.2.2",
    "appium-test-support": "0.7.2",
    "babel-eslint": "^7.1.1",
    "chai": "^4.1.2",
    "chai-as-promised": "^7.1.1",
    "eslint": "^3.10.2",
    "eslint-config-appium": "2.1.0",
    "eslint-plugin-babel": "^3.3.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-mocha": "^4.7.0",
    "eslint-plugin-promise": "^3.3.1",
    "gulp": "^3.9.0",
    "pre-commit": "^1.1.3",
    "sinon": "^4.3.0",
    "wd": "^1.5.0"
  },
  "directories": {
    "lib": "lib"
  },
  "engines": [
    "node"
  ],
  "homepage": "https://github.com/appium/appium-selendroid-driver#readme",
  "keywords": [
    "appium",
    "selendroid",
    "automated testing",
    "android"
  ],
  "license": "Apache-2.0",
  "main": "./build/index.js",
  "name": "appium-selendroid-driver",
  "optionalDependencies": {},
  "pre-commit": [
    "precommit-msg",
    "lint",
    "test"
  ],
  "readme": "## appium-selendroid-driver\n\n[![NPM version](http://img.shields.io/npm/v/appium-selendroid-driver.svg)](https://npmjs.org/package/appium-selendroid-driver)\n[![Downloads](http://img.shields.io/npm/dm/appium-selendroid-driver.svg)](https://npmjs.org/package/appium-selendroid-driver)\n[![Dependency Status](https://david-dm.org/appium/appium-selendroid-driver/master.svg)](https://david-dm.org/appium/appium-selendroid-driver/master)\n[![devDependency Status](https://david-dm.org/appium/appium-selendroid-driver/master/dev-status.svg)](https://david-dm.org/appium/appium-selendroid-driver/master#info=devDependencies)\n\n[![Build Status](https://api.travis-ci.org/appium/appium-selendroid-driver.png?branch=master)](https://travis-ci.org/appium/appium-selendroid-driver)\n[![Coverage Status](https://coveralls.io/repos/appium/appium-selendroid-driver/badge.svg?branch=master)](https://coveralls.io/r/appium/appium-selendroid-driver?branch=master)\n\n\nThis driver is the Appium interface to the [Selendroid](http://selendroid.io/) test automation framework.\n\n\n### Using with Appium server\n\nFrom the Appium server it is requested by specifying the desired capability `automationName` of `Selendroid` when starting a session.\n\nMost of the Selenium methods are handled by the Selendroid framework itself. This package simply handles the setting up of the session by instrumenting the application and making sure that both the application and the Selendroid server are signed with the same keys. It then provides a method for proxying through the [appium-jsonwp-proxy](https://github.com/appium/appium-base-driver/blob/master/lib/jsonwp-proxy) to the Selendroid server running on the device.\n\n`proxyReqRes (request, response)`\n\nSome methods, however, are handled locally, if they either don't work in the Selendroid implementation, or they are Appium additions that are not currently supported by Selendroid.\n\n#### Methods not proxied to Selendroid\n\nThe following methods are implemented by the `appium-selendroid-driver`, either in full or by appropriately fixing state and then proxying to the Selendroid server.\n\n| Methods                                                                   |\n|---------------------------------------------------------------------------|\n| `activateIMEEngine (engine)`                                              |\n| `availableIMEEngines ()`                                                  |\n| `background (seconds)`                                                    |\n| `closeApp ()`                                                             |\n| `deactivateIMEEngine ()`                                                  |\n| `endCoverage (intent, path)`                                              |\n| `getActiveIMEEngine ()`                                                   |\n| `getContexts ()`                                                          |\n| `getCurrentActivity ()`                                                   |\n| `getCurrentContext ()`                                                    |\n| `getLog (type)`                                                           |\n| `getLogTypes ()`                                                          |\n| `getNetworkConnection ()`                                                 |\n| `getSettings ()`                                                          |\n| `getStrings (language, stringFile)`                                       |\n| `hideKeyboard (strategy, key, keyCode, keyName)`                          |\n| `installApp (appPath)`                                                    |\n| `isAppInstalled (bundleId)`                                               |\n| `isIMEActivated ()`                                                       |\n| `isLocked ()`                                                             |\n| `keyevent (keycode, metastate)`                                           |\n| `keys (value)`                                                            |\n| `launchApp ()`                                                            |\n| `lock (seconds)`                                                          |\n| `longPressKeyCode (keycode, metastate)`                                   |\n| `mobileRotation (x, y, radius, rotation, touchCount, duration, element)`  |\n| `mobileShake ()`                                                          |\n| `openNotifications ()`                                                    |\n| `performMultiAction (actions, elementId)`                                 |\n| `pressKeyCode (keycode, metastate)`                                       |\n| `pullFile (path)`                                                         |\n| `pullFolder (path)`                                                       |\n| `pushFile (path, data)`                                                   |\n| `receiveAsyncResponse (response)`                                         |\n| `removeApp (appId, bundleId)`                                             |\n| `replaceValue (value)`                                                    |\n| `reset ()`                                                                |\n| `setContext (name)`                                                       |\n| `setGeoLocation (location)`                                               |\n| `setNetworkConnection (type)`                                             |\n| `setValue (value)`                                                        |\n| `setValueImmediate (value)`                                               |\n| `startActivity (appPackage, appActivity)`                                 |\n| `toggleData ()`                                                           |\n| `toggleFlightMode ()`                                                     |\n| `toggleLocationServices ()`                                               |\n| `toggleWiFi ()`                                                           |\n| `unlock ()`                                                               |\n| `updateSettings (settings)`                                               |\n\n### Custom binaries url\n\nTo use a mirror of the Selendroid driver binaries use npm config property `selendroid_driver_cdnurl`.\nDefault is `http://repo1.maven.org/maven2/io/selendroid/selendroid-standalone`.\n\n```bash\nnpm install appium-selendroid-driver --selendroid_driver_cdnurl=http://repo2.maven.org/maven2/io/selendroid/selendroid-standalone\n```\n\nOr add the property into your [`.npmrc`](https://docs.npmjs.com/files/npmrc) file.\n\n```bash\nselendroid_driver_cdnurl=http://repo2.maven.org/maven2/io/selendroid/selendroid-standalone\n```\n\nAnother option is to use PATH variable `SELENDROID_DRIVER_CDNURL`.\n\n```bash\nSELENDROID_DRIVER_CDNURL=http://repo2.maven.org/maven2/io/selendroid/selendroid-standalone npm install appium-selendroid-driver\n```\n\n### Working on the package\n\n#### Watch\n\n```\ngulp watch\n```\n\n#### Test\n\n```\ngulp once\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/appium/appium-selendroid-driver.git"
  },
  "scripts": {
    "install": "node ./bin/install.js",
    "lint": "gulp eslint",
    "lint:fix": "gulp eslint --fix",
    "precommit-msg": "echo 'Pre-commit checks...' && exit 0",
    "prepublish": "gulp prepublish",
    "selendroid": "node ./bin/install.js",
    "test": "gulp once",
    "transpile": "gulp transpile",
    "watch": "gulp"
  },
  "version": "1.7.0"
}
