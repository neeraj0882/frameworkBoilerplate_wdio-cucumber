#!/usr/bin/env node

require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _interopRequireWildcard = require('babel-runtime/helpers/interop-require-wildcard')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _yargs = require('yargs');

var _yargs2 = _interopRequireDefault(_yargs);

var _asyncbox = require('asyncbox');

var _libServer = require('./lib/server');

var _libDriver = require('./lib/driver');

var _libDesiredCaps = require('./lib/desired-caps');

var _libCommandsIndex = require('./lib/commands/index');

var _libSettings = require('./lib/settings');

var settings = _interopRequireWildcard(_libSettings);

var _libDevice = require('./lib/device');

var device = _interopRequireWildcard(_libDevice);

var _libUtils = require('./lib/utils');

var _libUtils2 = _interopRequireDefault(_libUtils);

var _libIwdp = require('./lib/iwdp');

var _libUiautoUiauto = require('./lib/uiauto/uiauto');

var uiauto = _interopRequireWildcard(_libUiautoUiauto);

var _libInstrumentsIndex = require('./lib/instruments/index');

// ios log access

var _libDeviceLogIosLog = require('./lib/device-log/ios-log');

var _libDeviceLogIosLog2 = _interopRequireDefault(_libDeviceLogIosLog);

var _libDeviceLogIosCrashLog = require('./lib/device-log/ios-crash-log');

var _libDeviceLogIosCrashLog2 = _interopRequireDefault(_libDeviceLogIosCrashLog);

var _libDeviceLogIosPerformanceLog = require('./lib/device-log/ios-performance-log');

var _libDeviceLogIosPerformanceLog2 = _interopRequireDefault(_libDeviceLogIosPerformanceLog);

// app utils

var _libAppUtils = require('./lib/app-utils');

var appUtils = _interopRequireWildcard(_libAppUtils);

var DEFAULT_HOST = "localhost";
var DEFAULT_PORT = 4723;

function main() {
  var port, host;
  return _regeneratorRuntime.async(function main$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        port = _yargs2['default'].argv.port || DEFAULT_PORT;
        host = _yargs2['default'].argv.host || DEFAULT_HOST;
        return context$1$0.abrupt('return', (0, _libServer.startServer)(port, host));

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

if (require.main === module) {
  (0, _asyncbox.asyncify)(main);
}

exports.IosDriver = _libDriver.IosDriver;
exports.desiredCapConstraints = _libDesiredCaps.desiredCapConstraints;
exports.desiredCapValidation = _libDesiredCaps.desiredCapValidation;
exports.commands = _libCommandsIndex.commands;
exports.iosCommands = _libCommandsIndex.iosCommands;
exports.settings = settings;
exports.device = device;
exports.defaultServerCaps = _libDriver.defaultServerCaps;
exports.utils = _libUtils2['default'];
exports.IWDP = _libIwdp.IWDP;
exports.uiauto = uiauto;
exports.Instruments = _libInstrumentsIndex.Instruments;
exports.instrumentsUtils = _libInstrumentsIndex.instrumentsUtils;
exports.startHttpsServer = _libServer.startHttpsServer;
exports['default'] = _libDriver.IosDriver;
exports.IOSLog = _libDeviceLogIosLog2['default'];
exports.IOSCrashLog = _libDeviceLogIosCrashLog2['default'];
exports.IOSPerformanceLog = _libDeviceLogIosPerformanceLog2['default'];
exports.appUtils = appUtils;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztxQkFHa0IsT0FBTzs7Ozt3QkFDQSxVQUFVOzt5QkFDVyxjQUFjOzt5QkFDZixjQUFjOzs4QkFDQyxvQkFBb0I7O2dDQUMxQyxzQkFBc0I7OzJCQUNsQyxnQkFBZ0I7O0lBQTlCLFFBQVE7O3lCQUNJLGNBQWM7O0lBQTFCLE1BQU07O3dCQUNBLGFBQWE7Ozs7dUJBQ1YsWUFBWTs7K0JBQ1QscUJBQXFCOztJQUFqQyxNQUFNOzttQ0FDNEIseUJBQXlCOzs7O2tDQXdCcEQsMEJBQTBCOzs7O3VDQUNyQixnQ0FBZ0M7Ozs7NkNBQzFCLHNDQUFzQzs7Ozs7OzJCQUsxQyxpQkFBaUI7O0lBQS9CLFFBQVE7O0FBNUJwQixJQUFNLFlBQVksR0FBRyxXQUFXLENBQUM7QUFDakMsSUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDOztBQUUxQixTQUFlLElBQUk7TUFDYixJQUFJLEVBQ0osSUFBSTs7OztBQURKLFlBQUksR0FBRyxtQkFBTSxJQUFJLENBQUMsSUFBSSxJQUFJLFlBQVk7QUFDdEMsWUFBSSxHQUFHLG1CQUFNLElBQUksQ0FBQyxJQUFJLElBQUksWUFBWTs0Q0FDbkMsNEJBQVksSUFBSSxFQUFFLElBQUksQ0FBQzs7Ozs7OztDQUMvQjs7QUFFRCxJQUFJLE9BQU8sQ0FBQyxJQUFJLEtBQUssTUFBTSxFQUFFO0FBQzNCLDBCQUFTLElBQUksQ0FBQyxDQUFDO0NBQ2hCOztRQUVRLFNBQVM7UUFBRSxxQkFBcUI7UUFBRSxvQkFBb0I7UUFBRSxRQUFRO1FBQ2hFLFdBQVc7UUFBRSxRQUFRLEdBQVIsUUFBUTtRQUFFLE1BQU0sR0FBTixNQUFNO1FBQUUsaUJBQWlCO1FBQUUsS0FBSztRQUFFLElBQUk7UUFBRSxNQUFNLEdBQU4sTUFBTTtRQUNyRSxXQUFXO1FBQUUsZ0JBQWdCO1FBQUUsZ0JBQWdCOztRQVUvQyxNQUFNO1FBQUUsV0FBVztRQUFFLGlCQUFpQjtRQUt0QyxRQUFRLEdBQVIsUUFBUSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLy8gdHJhbnNwaWxlOm1haW5cblxuaW1wb3J0IHlhcmdzIGZyb20gJ3lhcmdzJztcbmltcG9ydCB7IGFzeW5jaWZ5IH0gZnJvbSAnYXN5bmNib3gnO1xuaW1wb3J0IHsgc3RhcnRTZXJ2ZXIsIHN0YXJ0SHR0cHNTZXJ2ZXIgfSBmcm9tICcuL2xpYi9zZXJ2ZXInO1xuaW1wb3J0IHsgSW9zRHJpdmVyLCBkZWZhdWx0U2VydmVyQ2FwcyB9IGZyb20gJy4vbGliL2RyaXZlcic7XG5pbXBvcnQgeyBkZXNpcmVkQ2FwQ29uc3RyYWludHMsIGRlc2lyZWRDYXBWYWxpZGF0aW9uIH0gZnJvbSAnLi9saWIvZGVzaXJlZC1jYXBzJztcbmltcG9ydCB7IGNvbW1hbmRzLCBpb3NDb21tYW5kcyB9IGZyb20gJy4vbGliL2NvbW1hbmRzL2luZGV4JztcbmltcG9ydCAqIGFzIHNldHRpbmdzIGZyb20gJy4vbGliL3NldHRpbmdzJztcbmltcG9ydCAqIGFzIGRldmljZSBmcm9tICcuL2xpYi9kZXZpY2UnO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4vbGliL3V0aWxzJztcbmltcG9ydCB7IElXRFAgfSBmcm9tICcuL2xpYi9pd2RwJztcbmltcG9ydCAqIGFzIHVpYXV0byBmcm9tICcuL2xpYi91aWF1dG8vdWlhdXRvJztcbmltcG9ydCB7IEluc3RydW1lbnRzLCBpbnN0cnVtZW50c1V0aWxzIH0gZnJvbSAnLi9saWIvaW5zdHJ1bWVudHMvaW5kZXgnO1xuXG5cbmNvbnN0IERFRkFVTFRfSE9TVCA9IFwibG9jYWxob3N0XCI7XG5jb25zdCBERUZBVUxUX1BPUlQgPSA0NzIzO1xuXG5hc3luYyBmdW5jdGlvbiBtYWluICgpIHtcbiAgbGV0IHBvcnQgPSB5YXJncy5hcmd2LnBvcnQgfHwgREVGQVVMVF9QT1JUO1xuICBsZXQgaG9zdCA9IHlhcmdzLmFyZ3YuaG9zdCB8fCBERUZBVUxUX0hPU1Q7XG4gIHJldHVybiBzdGFydFNlcnZlcihwb3J0LCBob3N0KTtcbn1cblxuaWYgKHJlcXVpcmUubWFpbiA9PT0gbW9kdWxlKSB7XG4gIGFzeW5jaWZ5KG1haW4pO1xufVxuXG5leHBvcnQgeyBJb3NEcml2ZXIsIGRlc2lyZWRDYXBDb25zdHJhaW50cywgZGVzaXJlZENhcFZhbGlkYXRpb24sIGNvbW1hbmRzLFxuICAgICAgICAgaW9zQ29tbWFuZHMsIHNldHRpbmdzLCBkZXZpY2UsIGRlZmF1bHRTZXJ2ZXJDYXBzLCB1dGlscywgSVdEUCwgdWlhdXRvLFxuICAgICAgICAgSW5zdHJ1bWVudHMsIGluc3RydW1lbnRzVXRpbHMsIHN0YXJ0SHR0cHNTZXJ2ZXIgfTtcblxuZXhwb3J0IGRlZmF1bHQgSW9zRHJpdmVyO1xuXG5cbi8vIGlvcyBsb2cgYWNjZXNzXG5pbXBvcnQgSU9TTG9nIGZyb20gJy4vbGliL2RldmljZS1sb2cvaW9zLWxvZyc7XG5pbXBvcnQgSU9TQ3Jhc2hMb2cgZnJvbSAnLi9saWIvZGV2aWNlLWxvZy9pb3MtY3Jhc2gtbG9nJztcbmltcG9ydCBJT1NQZXJmb3JtYW5jZUxvZyBmcm9tICcuL2xpYi9kZXZpY2UtbG9nL2lvcy1wZXJmb3JtYW5jZS1sb2cnO1xuXG5leHBvcnQgeyBJT1NMb2csIElPU0NyYXNoTG9nLCBJT1NQZXJmb3JtYW5jZUxvZyB9O1xuXG4vLyBhcHAgdXRpbHNcbmltcG9ydCAqIGFzIGFwcFV0aWxzIGZyb20gJy4vbGliL2FwcC11dGlscyc7XG5cbmV4cG9ydCB7IGFwcFV0aWxzIH07XG4iXSwic291cmNlUm9vdCI6Ii4uIn0=
