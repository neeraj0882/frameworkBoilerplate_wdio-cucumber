'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _appiumSupport = require('appium-support');

var _loggerJs = require('./logger.js');

var _loggerJs2 = _interopRequireDefault(_loggerJs);

var plistObjects = {};

function extractPlist(app) {
  var plistFile;
  return _regeneratorRuntime.async(function extractPlist$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        plistFile = _path2['default'].resolve(app, 'Info.plist');
        context$1$0.prev = 1;
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(_appiumSupport.plist.parsePlistFile(plistFile));

      case 4:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 7:
        context$1$0.prev = 7;
        context$1$0.t0 = context$1$0['catch'](1);

        _loggerJs2['default'].errorAndThrow('Could not extract Info.plist from application: ' + context$1$0.t0.message);

      case 10:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[1, 7]]);
}

function extractPlistEntry(app, entryName) {
  return _regeneratorRuntime.async(function extractPlistEntry$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!_lodash2['default'].isUndefined(plistObjects[app])) {
          context$1$0.next = 4;
          break;
        }

        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(extractPlist(app));

      case 3:
        plistObjects[app] = context$1$0.sent;

      case 4:
        return context$1$0.abrupt('return', plistObjects[app][entryName]);

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function extractAppDisplayName(app) {
  return _regeneratorRuntime.async(function extractAppDisplayName$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _loggerJs2['default'].debug("Getting application name from app");
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(extractPlistEntry(app, 'CFBundleDisplayName'));

      case 3:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 4:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function extractBundleId(app) {
  var bundleId;
  return _regeneratorRuntime.async(function extractBundleId$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(extractPlistEntry(app, 'CFBundleIdentifier'));

      case 2:
        bundleId = context$1$0.sent;

        _loggerJs2['default'].debug('Getting bundle ID from app \'' + app + '\': \'' + bundleId + '\'');
        return context$1$0.abrupt('return', bundleId);

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

exports.extractAppDisplayName = extractAppDisplayName;
exports.extractBundleId = extractBundleId;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hcHAtdXRpbHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztvQkFBaUIsTUFBTTs7OztzQkFDVCxRQUFROzs7OzZCQUNBLGdCQUFnQjs7d0JBQ3RCLGFBQWE7Ozs7QUFHN0IsSUFBSSxZQUFZLEdBQUcsRUFBRSxDQUFDOztBQUV0QixTQUFlLFlBQVksQ0FBRSxHQUFHO01BQzFCLFNBQVM7Ozs7QUFBVCxpQkFBUyxHQUFHLGtCQUFLLE9BQU8sQ0FBQyxHQUFHLEVBQUUsWUFBWSxDQUFDOzs7eUNBRWhDLHFCQUFNLGNBQWMsQ0FBQyxTQUFTLENBQUM7Ozs7Ozs7OztBQUU1Qyw4QkFBSSxhQUFhLHFEQUFtRCxlQUFJLE9BQU8sQ0FBRyxDQUFDOzs7Ozs7O0NBRXRGOztBQUVELFNBQWUsaUJBQWlCLENBQUUsR0FBRyxFQUFFLFNBQVM7Ozs7YUFDMUMsb0JBQUUsV0FBVyxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQzs7Ozs7O3lDQUNSLFlBQVksQ0FBQyxHQUFHLENBQUM7OztBQUEzQyxvQkFBWSxDQUFDLEdBQUcsQ0FBQzs7OzRDQUdaLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQyxTQUFTLENBQUM7Ozs7Ozs7Q0FDcEM7O0FBRUQsU0FBZSxxQkFBcUIsQ0FBRSxHQUFHOzs7O0FBQ3ZDLDhCQUFJLEtBQUssQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDOzt5Q0FDbEMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLHFCQUFxQixDQUFDOzs7Ozs7Ozs7O0NBQzNEOztBQUVELFNBQWUsZUFBZSxDQUFFLEdBQUc7TUFDN0IsUUFBUTs7Ozs7eUNBQVMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixDQUFDOzs7QUFBN0QsZ0JBQVE7O0FBQ1osOEJBQUksS0FBSyxtQ0FBZ0MsR0FBRyxjQUFPLFFBQVEsUUFBSSxDQUFDOzRDQUN6RCxRQUFROzs7Ozs7O0NBQ2hCOztRQUdRLHFCQUFxQixHQUFyQixxQkFBcUI7UUFBRSxlQUFlLEdBQWYsZUFBZSIsImZpbGUiOiJsaWIvYXBwLXV0aWxzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgcGxpc3QgfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5pbXBvcnQgbG9nIGZyb20gJy4vbG9nZ2VyLmpzJztcblxuXG5sZXQgcGxpc3RPYmplY3RzID0ge307XG5cbmFzeW5jIGZ1bmN0aW9uIGV4dHJhY3RQbGlzdCAoYXBwKSB7XG4gIGxldCBwbGlzdEZpbGUgPSBwYXRoLnJlc29sdmUoYXBwLCAnSW5mby5wbGlzdCcpO1xuICB0cnkge1xuICAgIHJldHVybiBhd2FpdCBwbGlzdC5wYXJzZVBsaXN0RmlsZShwbGlzdEZpbGUpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBsb2cuZXJyb3JBbmRUaHJvdyhgQ291bGQgbm90IGV4dHJhY3QgSW5mby5wbGlzdCBmcm9tIGFwcGxpY2F0aW9uOiAke2Vyci5tZXNzYWdlfWApO1xuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGV4dHJhY3RQbGlzdEVudHJ5IChhcHAsIGVudHJ5TmFtZSkge1xuICBpZiAoXy5pc1VuZGVmaW5lZChwbGlzdE9iamVjdHNbYXBwXSkpIHtcbiAgICBwbGlzdE9iamVjdHNbYXBwXSA9IGF3YWl0IGV4dHJhY3RQbGlzdChhcHApO1xuICB9XG5cbiAgcmV0dXJuIHBsaXN0T2JqZWN0c1thcHBdW2VudHJ5TmFtZV07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGV4dHJhY3RBcHBEaXNwbGF5TmFtZSAoYXBwKSB7XG4gIGxvZy5kZWJ1ZyhcIkdldHRpbmcgYXBwbGljYXRpb24gbmFtZSBmcm9tIGFwcFwiKTtcbiAgcmV0dXJuIGF3YWl0IGV4dHJhY3RQbGlzdEVudHJ5KGFwcCwgJ0NGQnVuZGxlRGlzcGxheU5hbWUnKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZXh0cmFjdEJ1bmRsZUlkIChhcHApIHtcbiAgbGV0IGJ1bmRsZUlkID0gYXdhaXQgZXh0cmFjdFBsaXN0RW50cnkoYXBwLCAnQ0ZCdW5kbGVJZGVudGlmaWVyJyk7XG4gIGxvZy5kZWJ1ZyhgR2V0dGluZyBidW5kbGUgSUQgZnJvbSBhcHAgJyR7YXBwfSc6ICcke2J1bmRsZUlkfSdgKTtcbiAgcmV0dXJuIGJ1bmRsZUlkO1xufVxuXG5cbmV4cG9ydCB7IGV4dHJhY3RBcHBEaXNwbGF5TmFtZSwgZXh0cmFjdEJ1bmRsZUlkIH07XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=
