'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _teen_process = require('teen_process');

var _events = require('events');

var _events2 = _interopRequireDefault(_events);

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

var _asyncbox = require('asyncbox');

var _appiumSupport = require('appium-support');

var IWDP_CMD = 'ios_webkit_debug_proxy';
var MAX_RETRIES = 10;

var iwdpLogger = _appiumSupport.logger.getLogger('IWDP');

var IWDP = (function (_EventEmitter) {
  _inherits(IWDP, _EventEmitter);

  function IWDP() {
    var webkitDebugProxyPort = arguments.length <= 0 || arguments[0] === undefined ? 27753 : arguments[0];
    var udid = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];

    _classCallCheck(this, IWDP);

    _get(Object.getPrototypeOf(IWDP.prototype), 'constructor', this).call(this);
    this.udid = udid;
    this.attempts = 0;
    this.port = webkitDebugProxyPort;
    this.process = this.createIWDPProcess();
    this.endpoint = 'http://localhost:' + this.port;
  }

  _createClass(IWDP, [{
    key: 'createIWDPProcess',
    value: function createIWDPProcess() {
      var _this = this;

      var process = new _teen_process.SubProcess(IWDP_CMD, ['-c', this.udid + ':' + this.port, '-d']); // (see https://github.com/google/ios-webkit-debug-proxy for reference)
      process.on('exit', function () {
        return _this.onExit();
      });
      process.on('lines-stderr', iwdpLogger.error);
      return process;
    }
  }, {
    key: 'onExit',
    value: function onExit() {
      return _regeneratorRuntime.async(function onExit$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            if (this.exitRequested) {
              context$2$0.next = 4;
              break;
            }

            this.process = this.createIWDPProcess();
            context$2$0.next = 4;
            return _regeneratorRuntime.awrap(this.start());

          case 4:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'start',
    value: function start() {
      return _regeneratorRuntime.async(function start$(context$2$0) {
        var _this2 = this;

        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            if (!(++this.attempts > MAX_RETRIES)) {
              context$2$0.next = 2;
              break;
            }

            return context$2$0.abrupt('return', this.emit('error', new Error('Failed to start IWDP server. Max retry attempts ' + MAX_RETRIES + ' reached')));

          case 2:
            this.exitRequested = false;

            // Throw error if ios_webkit_debug_proxy is not installed
            context$2$0.next = 5;
            return _regeneratorRuntime.awrap(this.isSupported());

          case 5:
            if (context$2$0.sent) {
              context$2$0.next = 7;
              break;
            }

            _logger2['default'].errorAndThrow('\'ios_webkit_debug_proxy\' not installed on this machine. Try \'brew install ios-webkit-debug-proxy');

          case 7:

            _logger2['default'].debug('Starting ios_webkit_debug_proxy at port ' + this.port + ' on device ' + this.udid);
            context$2$0.next = 10;
            return _regeneratorRuntime.awrap(this.process.start(0));

          case 10:
            context$2$0.prev = 10;
            context$2$0.next = 13;
            return _regeneratorRuntime.awrap((0, _asyncbox.retryInterval)(20, 500, function callee$2$0() {
              return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
                while (1) switch (context$3$0.prev = context$3$0.next) {
                  case 0:
                    context$3$0.next = 2;
                    return _regeneratorRuntime.awrap((0, _requestPromise2['default'])(this.endpoint));

                  case 2:
                    return context$3$0.abrupt('return', context$3$0.sent);

                  case 3:
                  case 'end':
                    return context$3$0.stop();
                }
              }, null, _this2);
            }));

          case 13:
            this.emit('start');
            context$2$0.next = 26;
            break;

          case 16:
            context$2$0.prev = 16;
            context$2$0.t0 = context$2$0['catch'](10);
            context$2$0.prev = 18;
            context$2$0.next = 21;
            return _regeneratorRuntime.awrap(this.process.stop());

          case 21:
            context$2$0.next = 25;
            break;

          case 23:
            context$2$0.prev = 23;
            context$2$0.t1 = context$2$0['catch'](18);

          case 25:
            _logger2['default'].errorAndThrow('Timed out waiting for ios_webkit_debug_proxy to open');

          case 26:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[10, 16], [18, 23]]);
    }
  }, {
    key: 'stop',
    value: function stop() {
      return _regeneratorRuntime.async(function stop$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            this.attempts = 0;
            this.exitRequested = true;
            context$2$0.next = 4;
            return _regeneratorRuntime.awrap(this.process.stop());

          case 4:
            return context$2$0.abrupt('return', context$2$0.sent);

          case 5:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }

    /**
     * Is 'ios_webkit_debug_proxy' available?
     */
  }, {
    key: 'isSupported',
    value: function isSupported() {
      return _regeneratorRuntime.async(function isSupported$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            if (!(typeof this.supported !== 'undefined')) {
              context$2$0.next = 2;
              break;
            }

            return context$2$0.abrupt('return', this.supported);

          case 2:
            context$2$0.prev = 2;
            context$2$0.next = 5;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.which(IWDP_CMD));

          case 5:
            this.supported = true;
            context$2$0.next = 11;
            break;

          case 8:
            context$2$0.prev = 8;
            context$2$0.t0 = context$2$0['catch'](2);

            this.supported = false;

          case 11:
            return context$2$0.abrupt('return', this.supported);

          case 12:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[2, 8]]);
    }
  }]);

  return IWDP;
})(_events2['default']);

exports.IWDP = IWDP;
exports['default'] = IWDP;

// If the process exits and the exit wasn't requested by the API, restart it

// Retry pinging the iwdp server until it's ready
//# sourceMappingURL=data:application/json;charset=utf8;base64,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SSxDQUFDLFNBQVMsS0FBSyxXQUFXLENBQUE7Ozs7O2dEQUNoQyxJQUFJLENBQUMsU0FBUzs7Ozs7NkNBSWYsa0JBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQzs7O0FBQ3hCLGdCQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQzs7Ozs7Ozs7QUFFdEIsZ0JBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDOzs7Z0RBRWxCLElBQUksQ0FBQyxTQUFTOzs7Ozs7O0tBQ3RCOzs7U0F6RUcsSUFBSTs7O1FBNEVELElBQUksR0FBSixJQUFJO3FCQUNFLElBQUkiLCJmaWxlIjoibGliL2l3ZHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJQcm9jZXNzIH0gZnJvbSAndGVlbl9wcm9jZXNzJztcbmltcG9ydCBFdmVudEVtaXR0ZXIgZnJvbSAnZXZlbnRzJztcbmltcG9ydCBsb2dnZXIgZnJvbSAnLi9sb2dnZXInO1xuaW1wb3J0IHJlcXVlc3QgZnJvbSAncmVxdWVzdC1wcm9taXNlJztcbmltcG9ydCB7IHJldHJ5SW50ZXJ2YWwgfSBmcm9tICdhc3luY2JveCc7XG5pbXBvcnQgeyBmcywgbG9nZ2VyIGFzIGJhc2VMb2dnZXIgfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5cbmNvbnN0IElXRFBfQ01EID0gJ2lvc193ZWJraXRfZGVidWdfcHJveHknO1xuY29uc3QgTUFYX1JFVFJJRVMgPSAxMDtcblxubGV0IGl3ZHBMb2dnZXIgPSBiYXNlTG9nZ2VyLmdldExvZ2dlcignSVdEUCcpO1xuXG5jbGFzcyBJV0RQIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcblxuICBjb25zdHJ1Y3RvciAod2Via2l0RGVidWdQcm94eVBvcnQgPSAyNzc1MywgdWRpZCA9IG51bGwpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMudWRpZCA9IHVkaWQ7XG4gICAgdGhpcy5hdHRlbXB0cyA9IDA7XG4gICAgdGhpcy5wb3J0ID0gd2Via2l0RGVidWdQcm94eVBvcnQ7XG4gICAgdGhpcy5wcm9jZXNzID0gdGhpcy5jcmVhdGVJV0RQUHJvY2VzcygpO1xuICAgIHRoaXMuZW5kcG9pbnQgPSBgaHR0cDovL2xvY2FsaG9zdDoke3RoaXMucG9ydH1gO1xuICB9XG5cbiAgY3JlYXRlSVdEUFByb2Nlc3MgKCkge1xuICAgIGxldCBwcm9jZXNzID0gbmV3IFN1YlByb2Nlc3MoSVdEUF9DTUQsIFsnLWMnLCBgJHt0aGlzLnVkaWR9OiR7dGhpcy5wb3J0fWAsICctZCddKTsgLy8gKHNlZSBodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlL2lvcy13ZWJraXQtZGVidWctcHJveHkgZm9yIHJlZmVyZW5jZSlcbiAgICBwcm9jZXNzLm9uKCdleGl0JywgKCkgPT4gdGhpcy5vbkV4aXQoKSk7XG4gICAgcHJvY2Vzcy5vbignbGluZXMtc3RkZXJyJywgaXdkcExvZ2dlci5lcnJvcik7XG4gICAgcmV0dXJuIHByb2Nlc3M7XG4gIH1cblxuICBhc3luYyBvbkV4aXQgKCkge1xuICAgIC8vIElmIHRoZSBwcm9jZXNzIGV4aXRzIGFuZCB0aGUgZXhpdCB3YXNuJ3QgcmVxdWVzdGVkIGJ5IHRoZSBBUEksIHJlc3RhcnQgaXRcbiAgICBpZiAoIXRoaXMuZXhpdFJlcXVlc3RlZCkge1xuICAgICAgdGhpcy5wcm9jZXNzID0gdGhpcy5jcmVhdGVJV0RQUHJvY2VzcygpO1xuICAgICAgYXdhaXQgdGhpcy5zdGFydCgpO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHN0YXJ0ICgpIHtcbiAgICBpZiAoKyt0aGlzLmF0dGVtcHRzID4gTUFYX1JFVFJJRVMpIHtcbiAgICAgIHJldHVybiB0aGlzLmVtaXQoJ2Vycm9yJywgbmV3IEVycm9yKGBGYWlsZWQgdG8gc3RhcnQgSVdEUCBzZXJ2ZXIuIE1heCByZXRyeSBhdHRlbXB0cyAke01BWF9SRVRSSUVTfSByZWFjaGVkYCkpO1xuICAgIH1cbiAgICB0aGlzLmV4aXRSZXF1ZXN0ZWQgPSBmYWxzZTtcblxuICAgIC8vIFRocm93IGVycm9yIGlmIGlvc193ZWJraXRfZGVidWdfcHJveHkgaXMgbm90IGluc3RhbGxlZFxuICAgIGlmICghYXdhaXQgdGhpcy5pc1N1cHBvcnRlZCgpKSB7XG4gICAgICBsb2dnZXIuZXJyb3JBbmRUaHJvdyhgJ2lvc193ZWJraXRfZGVidWdfcHJveHknIG5vdCBpbnN0YWxsZWQgb24gdGhpcyBtYWNoaW5lLiBUcnkgJ2JyZXcgaW5zdGFsbCBpb3Mtd2Via2l0LWRlYnVnLXByb3h5YCk7XG4gICAgfVxuXG4gICAgbG9nZ2VyLmRlYnVnKGBTdGFydGluZyBpb3Nfd2Via2l0X2RlYnVnX3Byb3h5IGF0IHBvcnQgJHt0aGlzLnBvcnR9IG9uIGRldmljZSAke3RoaXMudWRpZH1gKTtcbiAgICBhd2FpdCB0aGlzLnByb2Nlc3Muc3RhcnQoMCk7XG5cbiAgICAvLyBSZXRyeSBwaW5naW5nIHRoZSBpd2RwIHNlcnZlciB1bnRpbCBpdCdzIHJlYWR5XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHJldHJ5SW50ZXJ2YWwoMjAsIDUwMCwgYXN5bmMgKCkgPT4gYXdhaXQgcmVxdWVzdCh0aGlzLmVuZHBvaW50KSk7XG4gICAgICB0aGlzLmVtaXQoJ3N0YXJ0Jyk7XG4gICAgfSBjYXRjaCAoaWduKSB7XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCB0aGlzLnByb2Nlc3Muc3RvcCgpO1xuICAgICAgfSBjYXRjaCAoaWduMikgeyB9XG4gICAgICBsb2dnZXIuZXJyb3JBbmRUaHJvdyhgVGltZWQgb3V0IHdhaXRpbmcgZm9yIGlvc193ZWJraXRfZGVidWdfcHJveHkgdG8gb3BlbmApO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHN0b3AgKCkge1xuICAgIHRoaXMuYXR0ZW1wdHMgPSAwO1xuICAgIHRoaXMuZXhpdFJlcXVlc3RlZCA9IHRydWU7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMucHJvY2Vzcy5zdG9wKCk7XG4gIH1cblxuXHQvKipcblx0ICogSXMgJ2lvc193ZWJraXRfZGVidWdfcHJveHknIGF2YWlsYWJsZT9cblx0ICovXG4gIGFzeW5jIGlzU3VwcG9ydGVkICgpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMuc3VwcG9ydGVkICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgcmV0dXJuIHRoaXMuc3VwcG9ydGVkO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBhd2FpdCBmcy53aGljaChJV0RQX0NNRCk7XG4gICAgICB0aGlzLnN1cHBvcnRlZCA9IHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5zdXBwb3J0ZWQgPSBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuc3VwcG9ydGVkO1xuICB9XG59XG5cbmV4cG9ydCB7IElXRFAgfTtcbmV4cG9ydCBkZWZhdWx0IElXRFA7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=
