'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _logger = require('../logger');

var _logger2 = _interopRequireDefault(_logger);

var commands = {},
    helpers = {},
    extensions = {};

commands.getOrientation = function callee$0$0() {
  var res;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.prev = 0;
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand('au.getScreenOrientation()'));

      case 3:
        res = context$1$0.sent;

        // keep track of orientation for our own purposes
        _logger2['default'].debug('Setting internal orientation to \'' + res + '\'');
        this.opts.curOrientation = res;
        return context$1$0.abrupt('return', res);

      case 9:
        context$1$0.prev = 9;
        context$1$0.t0 = context$1$0['catch'](0);

        _logger2['default'].error('Device orientation is not supported.');
        throw context$1$0.t0;

      case 13:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[0, 9]]);
};

commands.setOrientation = function callee$0$0(orientation) {
  var cmd, res;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        orientation = orientation.toUpperCase();
        cmd = 'au.setScreenOrientation(\'' + orientation + '\')';
        context$1$0.prev = 2;
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(cmd));

      case 5:
        res = context$1$0.sent;

        this.opts.curOrientation = orientation;
        return context$1$0.abrupt('return', res);

      case 10:
        context$1$0.prev = 10;
        context$1$0.t0 = context$1$0['catch'](2);

        _logger2['default'].error('Device orientation ' + orientation + ' is not supported on this device.');
        throw context$1$0.t0;

      case 14:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[2, 10]]);
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports['default'] = extensions;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9vcmllbnRhdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7c0JBQW1CLFdBQVc7Ozs7QUFHOUIsSUFBSSxRQUFRLEdBQUcsRUFBRTtJQUFFLE9BQU8sR0FBRyxFQUFFO0lBQUUsVUFBVSxHQUFHLEVBQUUsQ0FBQzs7QUFFakQsUUFBUSxDQUFDLGNBQWMsR0FBRztNQUVsQixHQUFHOzs7Ozs7eUNBQVMsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsMkJBQTJCLENBQUM7OztBQUF0RSxXQUFHOzs7QUFFUCw0QkFBTyxLQUFLLHdDQUFxQyxHQUFHLFFBQUksQ0FBQztBQUN6RCxZQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxHQUFHLENBQUM7NENBQ3hCLEdBQUc7Ozs7OztBQUVWLDRCQUFPLEtBQUssd0NBQXdDLENBQUM7Ozs7Ozs7O0NBR3hELENBQUM7O0FBRUYsUUFBUSxDQUFDLGNBQWMsR0FBRyxvQkFBZ0IsV0FBVztNQUUvQyxHQUFHLEVBRUQsR0FBRzs7OztBQUhULG1CQUFXLEdBQUcsV0FBVyxDQUFDLFdBQVcsRUFBRSxDQUFDO0FBQ3BDLFdBQUcsa0NBQStCLFdBQVc7Ozt5Q0FFL0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDOzs7QUFBOUMsV0FBRzs7QUFDUCxZQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxXQUFXLENBQUM7NENBQ2hDLEdBQUc7Ozs7OztBQUVWLDRCQUFPLEtBQUsseUJBQXVCLFdBQVcsdUNBQW9DLENBQUM7Ozs7Ozs7O0NBR3RGLENBQUM7O0FBR0YsZUFBYyxVQUFVLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3BDLFFBQVEsR0FBUixRQUFRO1FBQUUsT0FBTyxHQUFQLE9BQU87cUJBQ1gsVUFBVSIsImZpbGUiOiJsaWIvY29tbWFuZHMvb3JpZW50YXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbG9nZ2VyIGZyb20gJy4uL2xvZ2dlcic7XG5cblxubGV0IGNvbW1hbmRzID0ge30sIGhlbHBlcnMgPSB7fSwgZXh0ZW5zaW9ucyA9IHt9O1xuXG5jb21tYW5kcy5nZXRPcmllbnRhdGlvbiA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgdHJ5IHtcbiAgICBsZXQgcmVzID0gYXdhaXQgdGhpcy51aUF1dG9DbGllbnQuc2VuZENvbW1hbmQoJ2F1LmdldFNjcmVlbk9yaWVudGF0aW9uKCknKTtcbiAgICAvLyBrZWVwIHRyYWNrIG9mIG9yaWVudGF0aW9uIGZvciBvdXIgb3duIHB1cnBvc2VzXG4gICAgbG9nZ2VyLmRlYnVnKGBTZXR0aW5nIGludGVybmFsIG9yaWVudGF0aW9uIHRvICcke3Jlc30nYCk7XG4gICAgdGhpcy5vcHRzLmN1ck9yaWVudGF0aW9uID0gcmVzO1xuICAgIHJldHVybiByZXM7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGxvZ2dlci5lcnJvcihgRGV2aWNlIG9yaWVudGF0aW9uIGlzIG5vdCBzdXBwb3J0ZWQuYCk7XG4gICAgdGhyb3cgZXJyO1xuICB9XG59O1xuXG5jb21tYW5kcy5zZXRPcmllbnRhdGlvbiA9IGFzeW5jIGZ1bmN0aW9uIChvcmllbnRhdGlvbikge1xuICBvcmllbnRhdGlvbiA9IG9yaWVudGF0aW9uLnRvVXBwZXJDYXNlKCk7XG4gIGxldCBjbWQgPSBgYXUuc2V0U2NyZWVuT3JpZW50YXRpb24oJyR7b3JpZW50YXRpb259JylgO1xuICB0cnkge1xuICAgIGxldCByZXMgPSBhd2FpdCB0aGlzLnVpQXV0b0NsaWVudC5zZW5kQ29tbWFuZChjbWQpO1xuICAgIHRoaXMub3B0cy5jdXJPcmllbnRhdGlvbiA9IG9yaWVudGF0aW9uO1xuICAgIHJldHVybiByZXM7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGxvZ2dlci5lcnJvcihgRGV2aWNlIG9yaWVudGF0aW9uICR7b3JpZW50YXRpb259IGlzIG5vdCBzdXBwb3J0ZWQgb24gdGhpcyBkZXZpY2UuYCk7XG4gICAgdGhyb3cgZXJyO1xuICB9XG59O1xuXG5cbk9iamVjdC5hc3NpZ24oZXh0ZW5zaW9ucywgY29tbWFuZHMsIGhlbHBlcnMpO1xuZXhwb3J0IHsgY29tbWFuZHMsIGhlbHBlcnMgfTtcbmV4cG9ydCBkZWZhdWx0IGV4dGVuc2lvbnM7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
