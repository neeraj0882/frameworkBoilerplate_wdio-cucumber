'use strict';

var _slicedToArray = require('babel-runtime/helpers/sliced-to-array')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _appiumBaseDriver = require('appium-base-driver');

var _cookies = require('../cookies');

var _cookies2 = _interopRequireDefault(_cookies);

var _logger = require('../logger');

var _logger2 = _interopRequireDefault(_logger);

var commands = {},
    helpers = {},
    extensions = {};

var ELEMENT_OFFSET = 5000;

commands.setFrame = function callee$0$0(frame) {
  var command, atom, atomsElement, value;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (this.isWebContext()) {
          context$1$0.next = 6;
          break;
        }

        frame = frame ? frame : 'target.frontMostApp()';
        command = 'wd_frame = ' + frame;
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(command));

      case 5:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 6:
        atom = undefined;

        if (!_lodash2['default'].isNull(frame)) {
          context$1$0.next = 11;
          break;
        }

        this.curWebFrames = [];
        _logger2['default'].debug('Leaving web frame and going back to default content');
        return context$1$0.abrupt('return');

      case 11:
        if (_lodash2['default'].isUndefined(frame.ELEMENT)) {
          context$1$0.next = 20;
          break;
        }

        atomsElement = this.useAtomsElement(frame.ELEMENT);
        context$1$0.next = 15;
        return _regeneratorRuntime.awrap(this.executeAtom('get_frame_window', [atomsElement]));

      case 15:
        value = context$1$0.sent;

        _logger2['default'].debug('Entering new web frame: \'' + value.WINDOW + '\'');
        this.curWebFrames.unshift(value.WINDOW);
        context$1$0.next = 28;
        break;

      case 20:
        atom = _lodash2['default'].isNumber(frame) ? 'frame_by_index' : 'frame_by_id_or_name';
        context$1$0.next = 23;
        return _regeneratorRuntime.awrap(this.executeAtom(atom, [frame]));

      case 23:
        value = context$1$0.sent;

        if (!(_lodash2['default'].isNull(value) || _lodash2['default'].isUndefined(value.WINDOW))) {
          context$1$0.next = 26;
          break;
        }

        throw new _appiumBaseDriver.errors.NoSuchFrameError();

      case 26:
        _logger2['default'].debug('Entering new web frame: \'' + value.WINDOW + '\'');
        this.curWebFrames.unshift(value.WINDOW);

      case 28:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getCssProperty = function callee$0$0(propertyName, el) {
  var atomsElement;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        atomsElement = this.useAtomsElement(el);
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.executeAtom('get_value_of_css_property', [atomsElement, propertyName]));

      case 3:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 4:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.submit = function callee$0$0(el) {
  var atomsElement;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!this.isWebContext()) {
          context$1$0.next = 6;
          break;
        }

        atomsElement = this.useAtomsElement(el);
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.executeAtom('submit', [atomsElement]));

      case 4:
        context$1$0.next = 7;
        break;

      case 6:
        throw new _appiumBaseDriver.errors.NotImplementedError();

      case 7:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.refresh = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!this.isWebContext()) {
          context$1$0.next = 5;
          break;
        }

        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.executeAtom('refresh', []));

      case 3:
        context$1$0.next = 6;
        break;

      case 5:
        throw new _appiumBaseDriver.errors.NotImplementedError();

      case 6:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getUrl = function callee$0$0() {
  var url;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (this.isWebContext()) {
          context$1$0.next = 2;
          break;
        }

        throw new _appiumBaseDriver.errors.NotImplementedError();

      case 2:
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.remote.execute('window.location.href'));

      case 4:
        url = context$1$0.sent;
        return context$1$0.abrupt('return', url);

      case 6:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.title = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (this.isWebContext()) {
          context$1$0.next = 2;
          break;
        }

        throw new _appiumBaseDriver.errors.NotImplementedError();

      case 2:
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.executeAtom('title', [], true));

      case 4:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.getCookies = function callee$0$0() {
  var script, jsCookies, cookies, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _step$value, _name, value;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (this.isWebContext()) {
          context$1$0.next = 2;
          break;
        }

        throw new _appiumBaseDriver.errors.NotImplementedError();

      case 2:

        _logger2['default'].debug('Retrieving all cookies');

        script = 'return document.cookie';
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(this.executeAtom('execute_script', [script, []]));

      case 6:
        jsCookies = context$1$0.sent;
        cookies = [];
        context$1$0.prev = 8;
        _iteratorNormalCompletion = true;
        _didIteratorError = false;
        _iteratorError = undefined;
        context$1$0.prev = 12;

        for (_iterator = _getIterator(_lodash2['default'].toPairs(_cookies2['default'].createJWPCookie(undefined, jsCookies))); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          _step$value = _slicedToArray(_step.value, 2);
          _name = _step$value[0];
          value = _step$value[1];

          cookies.push({ name: _name, value: value });
        }
        context$1$0.next = 20;
        break;

      case 16:
        context$1$0.prev = 16;
        context$1$0.t0 = context$1$0['catch'](12);
        _didIteratorError = true;
        _iteratorError = context$1$0.t0;

      case 20:
        context$1$0.prev = 20;
        context$1$0.prev = 21;

        if (!_iteratorNormalCompletion && _iterator['return']) {
          _iterator['return']();
        }

      case 23:
        context$1$0.prev = 23;

        if (!_didIteratorError) {
          context$1$0.next = 26;
          break;
        }

        throw _iteratorError;

      case 26:
        return context$1$0.finish(23);

      case 27:
        return context$1$0.finish(20);

      case 28:
        return context$1$0.abrupt('return', cookies);

      case 31:
        context$1$0.prev = 31;
        context$1$0.t1 = context$1$0['catch'](8);

        _logger2['default'].error(context$1$0.t1);
        throw new _appiumBaseDriver.errors.UnknownError('Error parsing cookies from result: \'' + jsCookies + '\'');

      case 35:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[8, 31], [12, 16, 20, 28], [21,, 23, 27]]);
};

commands.setCookie = function callee$0$0(cookie) {
  var jsCookie, script;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (this.isWebContext()) {
          context$1$0.next = 2;
          break;
        }

        throw new _appiumBaseDriver.errors.NotImplementedError();

      case 2:

        cookie = _lodash2['default'].clone(cookie);

        // if `path` field is not specified, Safari will not update cookies as expected; eg issue #1708
        if (!cookie.path) {
          cookie.path = "/";
        }

        jsCookie = _cookies2['default'].createJSCookie(cookie.name, cookie.value, {
          expires: _lodash2['default'].isNumber(cookie.expiry) ? new Date(cookie.expiry * 1000).toUTCString() : cookie.expiry,
          path: cookie.path,
          domain: cookie.domain,
          httpOnly: cookie.httpOnly,
          secure: cookie.secure
        });
        script = 'document.cookie = ' + JSON.stringify(jsCookie);
        context$1$0.next = 8;
        return _regeneratorRuntime.awrap(this.executeAtom('execute_script', [script, []]));

      case 8:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.deleteCookie = function callee$0$0(cookieName) {
  var cookies;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (this.isWebContext()) {
          context$1$0.next = 2;
          break;
        }

        throw new _appiumBaseDriver.errors.NotImplementedError();

      case 2:
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.getCookies());

      case 4:
        cookies = context$1$0.sent;

        if (!(_lodash2['default'].indexOf(_lodash2['default'].map(cookies, 'name'), cookieName) === -1)) {
          context$1$0.next = 8;
          break;
        }

        _logger2['default'].debug('Cookie \'' + cookieName + '\' not found. Ignoring.');
        return context$1$0.abrupt('return', true);

      case 8:
        context$1$0.next = 10;
        return _regeneratorRuntime.awrap(this._deleteCookie(cookieName));

      case 10:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 11:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.deleteCookies = function callee$0$0() {
  var cookies, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, cookie;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (this.isWebContext()) {
          context$1$0.next = 2;
          break;
        }

        throw new _appiumBaseDriver.errors.NotImplementedError();

      case 2:
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.getCookies());

      case 4:
        cookies = context$1$0.sent;

        if (!cookies.length) {
          context$1$0.next = 32;
          break;
        }

        _iteratorNormalCompletion2 = true;
        _didIteratorError2 = false;
        _iteratorError2 = undefined;
        context$1$0.prev = 9;
        _iterator2 = _getIterator(cookies);

      case 11:
        if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {
          context$1$0.next = 18;
          break;
        }

        cookie = _step2.value;
        context$1$0.next = 15;
        return _regeneratorRuntime.awrap(this._deleteCookie(cookie.name));

      case 15:
        _iteratorNormalCompletion2 = true;
        context$1$0.next = 11;
        break;

      case 18:
        context$1$0.next = 24;
        break;

      case 20:
        context$1$0.prev = 20;
        context$1$0.t0 = context$1$0['catch'](9);
        _didIteratorError2 = true;
        _iteratorError2 = context$1$0.t0;

      case 24:
        context$1$0.prev = 24;
        context$1$0.prev = 25;

        if (!_iteratorNormalCompletion2 && _iterator2['return']) {
          _iterator2['return']();
        }

      case 27:
        context$1$0.prev = 27;

        if (!_didIteratorError2) {
          context$1$0.next = 30;
          break;
        }

        throw _iteratorError2;

      case 30:
        return context$1$0.finish(27);

      case 31:
        return context$1$0.finish(24);

      case 32:
        return context$1$0.abrupt('return', true);

      case 33:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[9, 20, 24, 32], [25,, 27, 31]]);
};

helpers._deleteCookie = function callee$0$0(cookieName) {
  var webCookie, script;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].debug('Deleting cookie \'' + cookieName + '\'');
        webCookie = _cookies2['default'].expireCookie(cookieName, { path: "/" });
        script = 'document.cookie = ' + JSON.stringify(webCookie);
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.executeAtom('execute_script', [script, []]));

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

extensions.findWebElementOrElements = function callee$0$0(strategy, selector, many, ctx) {
  var atomsElement, element, doFind;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    var _this = this;

    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        atomsElement = this.getAtomsElement(ctx);
        element = undefined;

        doFind = function doFind() {
          return _regeneratorRuntime.async(function doFind$(context$2$0) {
            while (1) switch (context$2$0.prev = context$2$0.next) {
              case 0:
                context$2$0.next = 2;
                return _regeneratorRuntime.awrap(this.executeAtom('find_element' + (many ? 's' : ''), [strategy, selector, atomsElement]));

              case 2:
                element = context$2$0.sent;
                return context$2$0.abrupt('return', !_lodash2['default'].isNull(element));

              case 4:
              case 'end':
                return context$2$0.stop();
            }
          }, null, _this);
        };

        context$1$0.prev = 3;
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(this.implicitWaitForCondition(doFind));

      case 6:
        context$1$0.next = 15;
        break;

      case 8:
        context$1$0.prev = 8;
        context$1$0.t0 = context$1$0['catch'](3);

        if (!(context$1$0.t0.message && _lodash2['default'].isFunction(context$1$0.t0.message.match) && context$1$0.t0.message.match(/Condition unmet/))) {
          context$1$0.next = 14;
          break;
        }

        // condition was not met setting res to empty array
        element = [];
        context$1$0.next = 15;
        break;

      case 14:
        throw context$1$0.t0;

      case 15:
        if (!many) {
          context$1$0.next = 19;
          break;
        }

        return context$1$0.abrupt('return', element);

      case 19:
        if (!(!element || _lodash2['default'].size(element) === 0)) {
          context$1$0.next = 21;
          break;
        }

        throw new _appiumBaseDriver.errors.NoSuchElementError();

      case 21:
        return context$1$0.abrupt('return', element);

      case 22:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[3, 8]]);
};

extensions.webFlickElement = function callee$0$0(el, xoffset, yoffset) {
  var atomsElement, _ref, x, y, _ref2, width, height, from, to, args, command;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.useAtomsElement(el));

      case 2:
        atomsElement = context$1$0.sent;
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.executeAtom('get_top_left_coordinates', [atomsElement]));

      case 5:
        _ref = context$1$0.sent;
        x = _ref.x;
        y = _ref.y;
        context$1$0.next = 10;
        return _regeneratorRuntime.awrap(this.executeAtom('get_size', [atomsElement]));

      case 10:
        _ref2 = context$1$0.sent;
        width = _ref2.width;
        height = _ref2.height;

        // translate to proper coordinates
        x = x + width / 2;
        y = y + height / 2;

        context$1$0.next = 17;
        return _regeneratorRuntime.awrap(this.translateWebCoords({ x: x, y: y }));

      case 17:
        from = context$1$0.sent;
        context$1$0.next = 20;
        return _regeneratorRuntime.awrap(this.translateWebCoords({ x: x + xoffset, y: y + yoffset }));

      case 20:
        to = context$1$0.sent;
        args = { from: from, to: to };
        command = 'au.flick(' + JSON.stringify(args) + ')';
        context$1$0.next = 25;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(command));

      case 25:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

extensions.mobileWebNav = function callee$0$0(navType) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        this.remote.allowNavigationWithoutReload();
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.executeAtom('execute_script', ['history.' + navType + '();', null]));

      case 3:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

extensions.nativeWebTap = function callee$0$0(el) {
  var atomsElement, _ref3, x, y, _ref4, width, height;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        atomsElement = this.useAtomsElement(el);
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.executeAtom('get_top_left_coordinates', [atomsElement]));

      case 3:
        _ref3 = context$1$0.sent;
        x = _ref3.x;
        y = _ref3.y;
        context$1$0.next = 8;
        return _regeneratorRuntime.awrap(this.executeAtom('get_size', [atomsElement]));

      case 8:
        _ref4 = context$1$0.sent;
        width = _ref4.width;
        height = _ref4.height;

        x = x + width / 2;
        context$1$0.t0 = y + height / 2;
        context$1$0.next = 15;
        return _regeneratorRuntime.awrap(this.getExtraNativeWebTapOffset());

      case 15:
        context$1$0.t1 = context$1$0.sent;
        y = context$1$0.t0 + context$1$0.t1;

        this.curWebCoords = { x: x, y: y };
        context$1$0.next = 20;
        return _regeneratorRuntime.awrap(this.clickWebCoords());

      case 20:
        context$1$0.next = 22;
        return _regeneratorRuntime.awrap(_bluebird2['default'].delay(500));

      case 22:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

extensions.getExtraNativeWebTapOffset = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        return context$1$0.abrupt('return', 0);

      case 1:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

extensions.clickWebCoords = function callee$0$0() {
  var coords;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.translateWebCoords(this.curWebCoords));

      case 2:
        coords = context$1$0.sent;
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.clickCoords(coords));

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

extensions.translateWebCoords = function callee$0$0(coords) {
  var wvCmd, webviewIndex, yOffset, webviews, wvId, locCmd, rect, wvPos, realDims, cmd, _ref5, w, h, wvDims, xRatio, yRatio, serviceBarHeight, newCoords;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        _logger2['default'].debug('Translating coordinates (' + JSON.stringify(coords) + ') to web coordinates');
        wvCmd = 'au.getElementsByType(\'webview\')';
        webviewIndex = this.webContextIndex();
        yOffset = this.opts.curOrientation === 'LANDSCAPE' ? this.landscapeWebCoordsOffset : 0;
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(wvCmd));

      case 6:
        webviews = context$1$0.sent;

        if (!(webviews.length < 1)) {
          context$1$0.next = 9;
          break;
        }

        throw new _appiumBaseDriver.errors.UnknownError.code('Could not find any webviews to click inside!');

      case 9:
        if (_lodash2['default'].isUndefined(webviews[webviewIndex])) {
          _logger2['default'].warn('Could not find webview at index ' + webviewIndex + ', taking ' + 'last available one for clicking purposes');
          webviewIndex = webviews.length - 1;
        }

        wvId = webviews[webviewIndex].ELEMENT;
        locCmd = 'au.getElement(\'' + wvId + '\').rect()';
        context$1$0.next = 14;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(locCmd));

      case 14:
        rect = context$1$0.sent;
        wvPos = { x: rect.origin.x, y: rect.origin.y };
        realDims = { w: rect.size.width, h: rect.size.height };
        cmd = '(function () { return {w: document.width, h: document.height}; })()';
        context$1$0.next = 20;
        return _regeneratorRuntime.awrap(this.remote.execute(cmd));

      case 20:
        _ref5 = context$1$0.sent;
        w = _ref5.w;
        h = _ref5.h;
        wvDims = { w: w, h: h };

        if (!(wvDims && realDims && wvPos)) {
          context$1$0.next = 32;
          break;
        }

        xRatio = realDims.w / wvDims.w;
        yRatio = realDims.h / wvDims.h;
        serviceBarHeight = 20;

        if (parseFloat(this.opts.platformVersion) >= 8) {
          // ios8 includes the service bar height in the app
          serviceBarHeight = 0;
        }
        newCoords = {
          x: wvPos.x + Math.round(xRatio * coords.x),
          y: wvPos.y + yOffset + Math.round(yRatio * coords.y) - serviceBarHeight
        };

        _logger2['default'].debug('Converted web coords ' + JSON.stringify(coords) + ' ' + ('into real coords ' + JSON.stringify(newCoords)));
        return context$1$0.abrupt('return', newCoords);

      case 32:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

helpers.clickCoords = function callee$0$0(coords) {
  var opts, command;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!this.useRobot) {
          context$1$0.next = 4;
          break;
        }

        throw new _appiumBaseDriver.errors.NotYetImplementedError();

      case 4:
        opts = coords;

        opts.tapCount = 1;
        opts.duration = 0.3;
        opts.touchCount = 1;
        command = 'au.complexTap(' + JSON.stringify(opts) + ')';
        context$1$0.next = 11;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand(command));

      case 11:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

helpers.executeAtom = function callee$0$0(atom, args) {
  var alwaysDefaultFrame = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];
  var frames, promise;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        frames = alwaysDefaultFrame === true ? [] : this.curWebFrames;
        promise = this.remote.executeAtom(atom, args, frames);
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.waitForAtom(promise));

      case 4:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

helpers.executeAtomAsync = function callee$0$0(atom, args, responseUrl) {
  var promise;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    var _this2 = this;

    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        promise = new _bluebird2['default'](function (resolve, reject) {
          _this2.asyncPromise = { resolve: resolve, reject: reject };
        });
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.remote.executeAtomAsync(atom, args, this.curWebFrames, responseUrl));

      case 3:
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(this.waitForAtom(promise));

      case 5:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 6:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

helpers.waitForAtom = function callee$0$0(promise) {
  var done, error, i, res;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        done = false;
        error = null;

        promise.then(function (res) {
          // eslint-disable-line promise/prefer-await-to-then
          done = true;
          return res;
        })['catch'](function (err) {
          // eslint-disable-line promise/prefer-await-to-callbacks
          _logger2['default'].debug('Error received while executing atom: ' + err.message);
          // error gets swallowed, so save and check later
          done = true;
          error = err;
        });
        // try ten times to check alert, if we are not done yet
        i = 0;

      case 4:
        if (!(i < 10)) {
          context$1$0.next = 18;
          break;
        }

        if (!done) {
          context$1$0.next = 7;
          break;
        }

        return context$1$0.abrupt('break', 18);

      case 7:
        context$1$0.next = 9;
        return _regeneratorRuntime.awrap(_bluebird2['default'].delay(500));

      case 9:
        if (!done) {
          context$1$0.next = 11;
          break;
        }

        return context$1$0.abrupt('break', 18);

      case 11:
        context$1$0.next = 13;
        return _regeneratorRuntime.awrap(this.checkForAlert());

      case 13:
        if (!context$1$0.sent) {
          context$1$0.next = 15;
          break;
        }

        return context$1$0.abrupt('return', '');

      case 15:
        i++;
        context$1$0.next = 4;
        break;

      case 18:
        context$1$0.next = 20;
        return _regeneratorRuntime.awrap(promise);

      case 20:
        res = context$1$0.sent;

        if (!error) {
          context$1$0.next = 23;
          break;
        }

        throw error;

      case 23:
        return context$1$0.abrupt('return', this.parseExecuteResponse(res));

      case 24:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

helpers.checkForAlert = function callee$0$0() {
  var present;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (_lodash2['default'].isNull(this.uiAutoClient)) {
          context$1$0.next = 7;
          break;
        }

        _logger2['default'].debug('atom did not return yet, checking to see if ' + 'we are blocked by an alert');
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand('au.alertIsPresent()'));

      case 4:
        present = context$1$0.sent;

        if (!present) {
          _logger2['default'].debug('No alert found.');
        } else {
          _logger2['default'].debug('Found an alert, returning control to client');
        }
        return context$1$0.abrupt('return', present);

      case 7:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

helpers.getAtomsElement = function (wdId) {
  var atomsId = undefined;
  try {
    atomsId = this.webElementIds[parseInt(wdId, 10) - ELEMENT_OFFSET];
  } catch (e) {
    return null;
  }
  if (_lodash2['default'].isUndefined(atomsId)) {
    return null;
  }
  return { ELEMENT: atomsId };
};

helpers.useAtomsElement = function (el) {
  if (parseInt(el, 10) < ELEMENT_OFFSET) {
    _logger2['default'].debug('Element with id \'' + el + '\' passed in for use with ' + ('atoms, but it\'s out of our internal scope. Adding ' + ELEMENT_OFFSET + '.'));
    el = (parseInt(el, 10) + ELEMENT_OFFSET).toString();
  }
  var atomsElement = this.getAtomsElement(el);
  if (atomsElement === null) {
    throw new _appiumBaseDriver.errors.UnknownError('Error converting element ID for using in WD atoms: \'' + el + '\'');
  }
  return atomsElement;
};

helpers.convertElementsForAtoms = function () {
  var args = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];

  var newArgs = [];
  var _iteratorNormalCompletion3 = true;
  var _didIteratorError3 = false;
  var _iteratorError3 = undefined;

  try {
    for (var _iterator3 = _getIterator(args), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
      var arg = _step3.value;

      if (!_lodash2['default'].isNull(arg) && !_lodash2['default'].isUndefined(arg.ELEMENT)) {
        var atomsElement = this.getAtomsElement(arg.ELEMENT);
        if (atomsElement === null) {
          throw new _appiumBaseDriver.errors.UnknownError('Error converting element ID for using in WD atoms: \'' + arg.ELEMENT + '\'');
        }
        newArgs.push(atomsElement);
      } else {
        newArgs.push(arg);
      }
    }
  } catch (err) {
    _didIteratorError3 = true;
    _iteratorError3 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion3 && _iterator3['return']) {
        _iterator3['return']();
      }
    } finally {
      if (_didIteratorError3) {
        throw _iteratorError3;
      }
    }
  }

  return newArgs;
};

helpers.parseExecuteResponse = function (res) {
  if (_lodash2['default'].isNull(res) || _lodash2['default'].isUndefined(res)) return null; // eslint-disable-line curly

  var wdElement = null;
  if (!_lodash2['default'].isArray(res)) {
    if (!_lodash2['default'].isUndefined(res.ELEMENT)) {
      wdElement = this.parseElementResponse(res);
      if (wdElement === null) {
        throw new _appiumBaseDriver.errors.UnknownError('Error converting element ID atom for using in WD: \'' + res.ELEMENT + '\'');
      }
      res = wdElement;
    }
  } else {
    // value is an array, so go through and convert each
    var args = [];
    var _iteratorNormalCompletion4 = true;
    var _didIteratorError4 = false;
    var _iteratorError4 = undefined;

    try {
      for (var _iterator4 = _getIterator(res), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
        var arg = _step4.value;

        wdElement = arg;
        if (!_lodash2['default'].isNull(arg) && !_lodash2['default'].isUndefined(arg.ELEMENT)) {
          wdElement = this.parseElementResponse(arg);
          if (wdElement === null) {
            throw new _appiumBaseDriver.errors.UnknownError('Error converting element ID atom for using in WD: \'' + arg.ELEMENT + '\'');
          }
          args.push(wdElement);
        } else {
          args.push(arg);
        }
      }
    } catch (err) {
      _didIteratorError4 = true;
      _iteratorError4 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion4 && _iterator4['return']) {
          _iterator4['return']();
        }
      } finally {
        if (_didIteratorError4) {
          throw _iteratorError4;
        }
      }
    }

    res = args;
  }
  return res;
};

helpers.parseElementResponse = function (element) {
  var objId = element.ELEMENT;
  var clientId = (ELEMENT_OFFSET + this.webElementIds.length).toString();
  this.webElementIds.push(objId);
  return { ELEMENT: clientId };
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports['default'] = extensions;

// check cookie existence

// make sure real tap actually has time to register

// this will be filled in by drivers using it

// add static offset for safari in landscape mode

// absolutize web coords

// var tapUrl = this.args.robotUrl + "/tap";
// request.post({url:tapUrl, form: {x:coords.x, y:coords.y}}, cb);
/*TODO*/
// save the resolve and reject methods of the promise to be waited for

// need to check for alert while the atom is being executed.
// so notify ourselves when it happens

// check if the promise has been resolved
// eslint-disable-line curly
// eslint-disable-line curly
// check if there is an alert

// we found an alert, and should just return control
//# sourceMappingURL=data:application/json;charset=utf8;base64,
