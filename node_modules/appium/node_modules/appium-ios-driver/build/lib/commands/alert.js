'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _appiumSupport = require('appium-support');

var _appiumBaseDriver = require('appium-base-driver');

var commands = {},
    helpers = {},
    extensions = {};

function handleError(err) {
  if (err.message && err.message.match(/not open/)) {
    throw new _appiumBaseDriver.errors.NoAlertOpenError();
  } else {
    throw err;
  }
}

commands.getAlertText = function callee$0$0() {
  var ret;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.prev = 0;
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand("au.getAlertText()"));

      case 3:
        ret = context$1$0.sent;
        return context$1$0.abrupt('return', ret);

      case 7:
        context$1$0.prev = 7;
        context$1$0.t0 = context$1$0['catch'](0);

        handleError(context$1$0.t0);

      case 10:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[0, 7]]);
};

commands.setAlertText = function callee$0$0(text) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.prev = 0;

        text = _appiumSupport.util.escapeSpecialChars(text, "'");
        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand('au.setAlertText(\'' + text + '\')'));

      case 4:
        context$1$0.next = 9;
        break;

      case 6:
        context$1$0.prev = 6;
        context$1$0.t0 = context$1$0['catch'](0);

        handleError(context$1$0.t0);

      case 9:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[0, 6]]);
};

commands.postAcceptAlert = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.prev = 0;
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand("au.acceptAlert()"));

      case 3:
        context$1$0.next = 8;
        break;

      case 5:
        context$1$0.prev = 5;
        context$1$0.t0 = context$1$0['catch'](0);

        handleError(context$1$0.t0);

      case 8:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[0, 5]]);
};

commands.postDismissAlert = function callee$0$0() {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.prev = 0;
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(this.uiAutoClient.sendCommand("au.dismissAlert()"));

      case 3:
        context$1$0.next = 8;
        break;

      case 5:
        context$1$0.prev = 5;
        context$1$0.t0 = context$1$0['catch'](0);

        handleError(context$1$0.t0);

      case 8:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[0, 5]]);
};

_Object$assign(extensions, commands, helpers);
exports.commands = commands;
exports.helpers = helpers;
exports['default'] = extensions;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy9hbGVydC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OzZCQUFxQixnQkFBZ0I7O2dDQUlkLG9CQUFvQjs7QUFEM0MsSUFBSSxRQUFRLEdBQUcsRUFBRTtJQUFFLE9BQU8sR0FBRyxFQUFFO0lBQUUsVUFBVSxHQUFHLEVBQUUsQ0FBQzs7QUFHakQsU0FBUyxXQUFXLENBQUUsR0FBRyxFQUFFO0FBQ3pCLE1BQUksR0FBRyxDQUFDLE9BQU8sSUFBSSxHQUFHLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRTtBQUNoRCxVQUFNLElBQUkseUJBQU8sZ0JBQWdCLEVBQUUsQ0FBQztHQUNyQyxNQUFNO0FBQ0wsVUFBTSxHQUFHLENBQUM7R0FDWDtDQUNGOztBQUVELFFBQVEsQ0FBQyxZQUFZLEdBQUc7TUFFaEIsR0FBRzs7Ozs7O3lDQUFTLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLG1CQUFtQixDQUFDOzs7QUFBOUQsV0FBRzs0Q0FDQSxHQUFHOzs7Ozs7QUFFVixtQkFBVyxnQkFBSyxDQUFDOzs7Ozs7O0NBRXBCLENBQUM7O0FBRUYsUUFBUSxDQUFDLFlBQVksR0FBRyxvQkFBZ0IsSUFBSTs7Ozs7O0FBRXhDLFlBQUksR0FBRyxvQkFBSyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7O3lDQUNwQyxJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsd0JBQXFCLElBQUksU0FBSzs7Ozs7Ozs7OztBQUVqRSxtQkFBVyxnQkFBSyxDQUFDOzs7Ozs7O0NBRXBCLENBQUM7O0FBRUYsUUFBUSxDQUFDLGVBQWUsR0FBRzs7Ozs7O3lDQUVqQixJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxrQkFBa0IsQ0FBQzs7Ozs7Ozs7OztBQUV2RCxtQkFBVyxnQkFBSyxDQUFDOzs7Ozs7O0NBRXBCLENBQUM7O0FBRUYsUUFBUSxDQUFDLGdCQUFnQixHQUFHOzs7Ozs7eUNBRWxCLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLG1CQUFtQixDQUFDOzs7Ozs7Ozs7O0FBRXhELG1CQUFXLGdCQUFLLENBQUM7Ozs7Ozs7Q0FFcEIsQ0FBQzs7QUFFRixlQUFjLFVBQVUsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDcEMsUUFBUSxHQUFSLFFBQVE7UUFBRSxPQUFPLEdBQVAsT0FBTztxQkFDWCxVQUFVIiwiZmlsZSI6ImxpYi9jb21tYW5kcy9hbGVydC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHV0aWwgfSBmcm9tICdhcHBpdW0tc3VwcG9ydCc7XG5cblxubGV0IGNvbW1hbmRzID0ge30sIGhlbHBlcnMgPSB7fSwgZXh0ZW5zaW9ucyA9IHt9O1xuaW1wb3J0IHsgZXJyb3JzIH0gZnJvbSAnYXBwaXVtLWJhc2UtZHJpdmVyJztcblxuZnVuY3Rpb24gaGFuZGxlRXJyb3IgKGVycikge1xuICBpZiAoZXJyLm1lc3NhZ2UgJiYgZXJyLm1lc3NhZ2UubWF0Y2goL25vdCBvcGVuLykpIHtcbiAgICB0aHJvdyBuZXcgZXJyb3JzLk5vQWxlcnRPcGVuRXJyb3IoKTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBlcnI7XG4gIH1cbn1cblxuY29tbWFuZHMuZ2V0QWxlcnRUZXh0ID0gYXN5bmMgZnVuY3Rpb24gKCkge1xuICB0cnkge1xuICAgIGxldCByZXQgPSBhd2FpdCB0aGlzLnVpQXV0b0NsaWVudC5zZW5kQ29tbWFuZChcImF1LmdldEFsZXJ0VGV4dCgpXCIpO1xuICAgIHJldHVybiByZXQ7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGhhbmRsZUVycm9yKGVycik7XG4gIH1cbn07XG5cbmNvbW1hbmRzLnNldEFsZXJ0VGV4dCA9IGFzeW5jIGZ1bmN0aW9uICh0ZXh0KSB7XG4gIHRyeSB7XG4gICAgdGV4dCA9IHV0aWwuZXNjYXBlU3BlY2lhbENoYXJzKHRleHQsIFwiJ1wiKTtcbiAgICBhd2FpdCB0aGlzLnVpQXV0b0NsaWVudC5zZW5kQ29tbWFuZChgYXUuc2V0QWxlcnRUZXh0KCcke3RleHR9JylgKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgaGFuZGxlRXJyb3IoZXJyKTtcbiAgfVxufTtcblxuY29tbWFuZHMucG9zdEFjY2VwdEFsZXJ0ID0gYXN5bmMgZnVuY3Rpb24gKCkge1xuICB0cnkge1xuICAgIGF3YWl0IHRoaXMudWlBdXRvQ2xpZW50LnNlbmRDb21tYW5kKFwiYXUuYWNjZXB0QWxlcnQoKVwiKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgaGFuZGxlRXJyb3IoZXJyKTtcbiAgfVxufTtcblxuY29tbWFuZHMucG9zdERpc21pc3NBbGVydCA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgdHJ5IHtcbiAgICBhd2FpdCB0aGlzLnVpQXV0b0NsaWVudC5zZW5kQ29tbWFuZChcImF1LmRpc21pc3NBbGVydCgpXCIpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBoYW5kbGVFcnJvcihlcnIpO1xuICB9XG59O1xuXG5PYmplY3QuYXNzaWduKGV4dGVuc2lvbnMsIGNvbW1hbmRzLCBoZWxwZXJzKTtcbmV4cG9ydCB7IGNvbW1hbmRzLCBoZWxwZXJzIH07XG5leHBvcnQgZGVmYXVsdCBleHRlbnNpb25zO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLiJ9
