'use strict';

var _slicedToArray = require('babel-runtime/helpers/sliced-to-array')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _url = require('url');

var _url2 = _interopRequireDefault(_url);

var DEFAULT_WS_PATHNAME_PREFIX = '/ws';

/**
 * Adds websocket handler to express server instance.
 * It is expected this function is called in Express
 * server instance context.
 *
 * @param {Object} server - An instance of express HTTP server.
 * @param {string} handlerPathname - Web socket endpoint path starting with
 * a single slash character. It is recommended to always add
 * DEFAULT_WS_PATHNAME_PREFIX to all web socket pathnames.
 * @param {Object} handlerServer - WebSocket server instance. See
 * https://github.com/websockets/ws/pull/885 for more details
 * on how to configure the handler properly.
 */
function addWebSocketHandler(handlerPathname, handlerServer) {
  var isUpgradeListenerAssigned;
  return _regeneratorRuntime.async(function addWebSocketHandler$(context$1$0) {
    var _this = this;

    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        isUpgradeListenerAssigned = true;

        if (_lodash2['default'].isUndefined(this.webSocketsMapping)) {
          this.webSocketsMapping = {};
          isUpgradeListenerAssigned = false;
        }
        this.webSocketsMapping[handlerPathname] = handlerServer;

        if (!isUpgradeListenerAssigned) {
          context$1$0.next = 5;
          break;
        }

        return context$1$0.abrupt('return');

      case 5:

        // https://github.com/websockets/ws/pull/885
        this.on('upgrade', function (request, socket, head) {
          var currentPathname = _url2['default'].parse(request.url).pathname;
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;

          try {
            var _loop = function () {
              var _step$value = _slicedToArray(_step.value, 2);

              var pathname = _step$value[0];
              var wsServer = _step$value[1];

              if (currentPathname === pathname) {
                wsServer.handleUpgrade(request, socket, head, function (ws) {
                  wsServer.emit('connection', ws, request);
                });
                return {
                  v: undefined
                };
              }
            };

            for (var _iterator = _getIterator(_lodash2['default'].toPairs(_this.webSocketsMapping)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var _ret = _loop();

              if (typeof _ret === 'object') return _ret.v;
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator['return']) {
                _iterator['return']();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }

          socket.destroy();
        });

      case 6:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

/**
 * Returns web socket handlers registered for the given server
 * instance.
 * It is expected this function is called in Express
 * server instance context.
 *
 * @param {?string} keysFilter [null]- Only include pathnames with given
 * `keysFilter` value if set. All pairs will be included by default.
 * @returns {Object} pathnames to websocket server isntances mapping
 * matching the search criteria or an empty object otherwise.
 */
function getWebSocketHandlers() {
  var keysFilter = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];

  var result, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _step2$value, pathname, wsServer;

  return _regeneratorRuntime.async(function getWebSocketHandlers$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!_lodash2['default'].isEmpty(this.webSocketsMapping)) {
          context$1$0.next = 2;
          break;
        }

        return context$1$0.abrupt('return', {});

      case 2:
        result = {};
        _iteratorNormalCompletion2 = true;
        _didIteratorError2 = false;
        _iteratorError2 = undefined;
        context$1$0.prev = 6;

        for (_iterator2 = _getIterator(_lodash2['default'].toPairs(this.webSocketsMapping)); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          _step2$value = _slicedToArray(_step2.value, 2);
          pathname = _step2$value[0];
          wsServer = _step2$value[1];

          if (!_lodash2['default'].isString(keysFilter) || pathname.includes(keysFilter)) {
            result[pathname] = wsServer;
          }
        }
        context$1$0.next = 14;
        break;

      case 10:
        context$1$0.prev = 10;
        context$1$0.t0 = context$1$0['catch'](6);
        _didIteratorError2 = true;
        _iteratorError2 = context$1$0.t0;

      case 14:
        context$1$0.prev = 14;
        context$1$0.prev = 15;

        if (!_iteratorNormalCompletion2 && _iterator2['return']) {
          _iterator2['return']();
        }

      case 17:
        context$1$0.prev = 17;

        if (!_didIteratorError2) {
          context$1$0.next = 20;
          break;
        }

        throw _iteratorError2;

      case 20:
        return context$1$0.finish(17);

      case 21:
        return context$1$0.finish(14);

      case 22:
        return context$1$0.abrupt('return', result);

      case 23:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[6, 10, 14, 22], [15,, 17, 21]]);
}

/**
 * Removes existing websocket handler from express server instance.
 * The call is ignored if the given `handlerPathname` handler
 * is not present in the handlers list.
 * It is expected this function is called in Express
 * server instance context.
 *
 * @param {string} handlerPathname - Websocket endpoint path.
 * @returns {boolean} true if the handlerPathname was found and deleted
 */
function removeWebSocketHandler(handlerPathname) {
  return _regeneratorRuntime.async(function removeWebSocketHandler$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!(!this.webSocketsMapping || !this.webSocketsMapping[handlerPathname])) {
          context$1$0.next = 2;
          break;
        }

        return context$1$0.abrupt('return', false);

      case 2:
        context$1$0.prev = 2;

        this.webSocketsMapping[handlerPathname].close();
        return context$1$0.abrupt('return', true);

      case 7:
        context$1$0.prev = 7;
        context$1$0.t0 = context$1$0['catch'](2);

      case 9:
        context$1$0.prev = 9;

        delete this.webSocketsMapping[handlerPathname];
        return context$1$0.finish(9);

      case 12:
        return context$1$0.abrupt('return', false);

      case 13:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[2, 7, 9, 12]]);
}

/**
 * Removes all existing websocket handler from express server instance.
 * It is expected this function is called in Express
 * server instance context.
 *
 * @returns {boolean} true if at least one handler has been deleted
 */
function removeAllWebSocketHandlers() {
  var result, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, pathname;

  return _regeneratorRuntime.async(function removeAllWebSocketHandlers$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!_lodash2['default'].isEmpty(this.webSocketsMapping)) {
          context$1$0.next = 2;
          break;
        }

        return context$1$0.abrupt('return', false);

      case 2:
        result = false;
        _iteratorNormalCompletion3 = true;
        _didIteratorError3 = false;
        _iteratorError3 = undefined;
        context$1$0.prev = 6;
        _iterator3 = _getIterator(_lodash2['default'].keys(this.webSocketsMapping));

      case 8:
        if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {
          context$1$0.next = 19;
          break;
        }

        pathname = _step3.value;
        context$1$0.t0 = result;

        if (context$1$0.t0) {
          context$1$0.next = 15;
          break;
        }

        context$1$0.next = 14;
        return _regeneratorRuntime.awrap(this.removeWebSocketHandler(pathname));

      case 14:
        context$1$0.t0 = context$1$0.sent;

      case 15:
        result = context$1$0.t0;

      case 16:
        _iteratorNormalCompletion3 = true;
        context$1$0.next = 8;
        break;

      case 19:
        context$1$0.next = 25;
        break;

      case 21:
        context$1$0.prev = 21;
        context$1$0.t1 = context$1$0['catch'](6);
        _didIteratorError3 = true;
        _iteratorError3 = context$1$0.t1;

      case 25:
        context$1$0.prev = 25;
        context$1$0.prev = 26;

        if (!_iteratorNormalCompletion3 && _iterator3['return']) {
          _iterator3['return']();
        }

      case 28:
        context$1$0.prev = 28;

        if (!_didIteratorError3) {
          context$1$0.next = 31;
          break;
        }

        throw _iteratorError3;

      case 31:
        return context$1$0.finish(28);

      case 32:
        return context$1$0.finish(25);

      case 33:
        return context$1$0.abrupt('return', result);

      case 34:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[6, 21, 25, 33], [26,, 28, 32]]);
}

exports.addWebSocketHandler = addWebSocketHandler;
exports.removeWebSocketHandler = removeWebSocketHandler;
exports.removeAllWebSocketHandlers = removeAllWebSocketHandlers;
exports.getWebSocketHandlers = getWebSocketHandlers;
exports.DEFAULT_WS_PATHNAME_PREFIX = DEFAULT_WS_PATHNAME_PREFIX;

// ignore
//# sourceMappingURL=data:application/json;charset=utf8;base64,
