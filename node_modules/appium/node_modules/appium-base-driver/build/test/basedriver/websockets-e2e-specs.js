'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _2 = require('../..');

var _protocolFakeDriver = require('../protocol/fake-driver');

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _ws = require('ws');

var _ws2 = _interopRequireDefault(_ws);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

_chai2['default'].use(_chaiAsPromised2['default']);

describe('Websockets (e2e)', function () {
  var baseServer = undefined;
  var driver = undefined;
  var SESSION_ID = 'foo';
  var WS_DATA = 'Hello';
  var PORT = 8181;

  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          driver = new _protocolFakeDriver.FakeDriver();
          driver.sessionId = SESSION_ID;
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap((0, _2.server)((0, _2.routeConfiguringFunction)(driver), PORT));

        case 4:
          baseServer = context$2$0.sent;

        case 5:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(baseServer.close());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  describe('web sockets support', function () {
    it('should be able to add websocket handler and remove it', function callee$2$0() {
      var wss, previousListenerCount, endpoint, timeout;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            wss = new _ws2['default'].Server({
              noServer: true
            });

            wss.on('connection', function (ws) {
              if (ws && ws.readyState === _ws2['default'].OPEN) {
                ws.send(WS_DATA);
              }
            });
            previousListenerCount = baseServer.listenerCount('upgrade');
            endpoint = _2.DEFAULT_WS_PATHNAME_PREFIX + '/hello';
            timeout = 5000;
            context$3$0.next = 7;
            return _regeneratorRuntime.awrap(baseServer.addWebSocketHandler(endpoint, wss));

          case 7:
            baseServer.listenerCount('upgrade').should.be.above(previousListenerCount);
            context$3$0.t0 = _lodash2['default'];
            context$3$0.next = 11;
            return _regeneratorRuntime.awrap(baseServer.getWebSocketHandlers());

          case 11:
            context$3$0.t1 = context$3$0.sent;
            context$3$0.t0.keys.call(context$3$0.t0, context$3$0.t1).length.should.eql(1);
            context$3$0.next = 15;
            return _regeneratorRuntime.awrap(new _bluebird2['default'](function (resolve, reject) {
              var client = new _ws2['default']('ws://localhost:' + PORT + endpoint);
              client.on('connection', function (ws, req) {
                ws.should.not.be.empty;
                req.connection.remoteAddress.should.not.be.empty;
              });
              client.on('message', function (data) {
                data.should.eql(WS_DATA);
                resolve();
              });
              client.on('error', reject);
              setTimeout(function () {
                return reject(new Error('No websocket messages have been received after the timeout'));
              }, timeout);
            }));

          case 15:
            context$3$0.next = 17;
            return _regeneratorRuntime.awrap(baseServer.removeWebSocketHandler(endpoint));

          case 17:
            context$3$0.sent.should.be['true'];
            context$3$0.t2 = _lodash2['default'];
            context$3$0.next = 21;
            return _regeneratorRuntime.awrap(baseServer.getWebSocketHandlers());

          case 21:
            context$3$0.t3 = context$3$0.sent;
            context$3$0.t2.keys.call(context$3$0.t2, context$3$0.t3).length.should.eql(0);
            context$3$0.next = 25;
            return _regeneratorRuntime.awrap(new _bluebird2['default'](function (resolve, reject) {
              var client = new _ws2['default']('ws://localhost:' + PORT + endpoint);
              client.on('message', function (data) {
                return reject(new Error('No websocket messages are expected after the handler ' + ('has been removed. \'' + data + '\' is received instead. ')));
              });
              client.on('error', resolve);
              setTimeout(resolve, timeout);
            }));

          case 25:
            baseServer.listenerCount('upgrade').should.be.above(previousListenerCount);

          case 26:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvYmFzZWRyaXZlci93ZWJzb2NrZXRzLWUyZS1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7c0JBQWMsUUFBUTs7OztpQkFFcUIsT0FBTzs7a0NBQ3ZCLHlCQUF5Qjs7b0JBQ25DLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7O2tCQUN2QixJQUFJOzs7O3dCQUNaLFVBQVU7Ozs7QUFFeEIsa0JBQUssR0FBRyw2QkFBZ0IsQ0FBQzs7QUFFekIsUUFBUSxDQUFDLGtCQUFrQixFQUFFLFlBQVk7QUFDdkMsTUFBSSxVQUFVLFlBQUEsQ0FBQztBQUNmLE1BQUksTUFBTSxZQUFBLENBQUM7QUFDWCxNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUM7QUFDekIsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDO0FBQ3hCLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQzs7QUFFbEIsUUFBTSxDQUFDOzs7O0FBQ0wsZ0JBQU0sR0FBRyxvQ0FBZ0IsQ0FBQztBQUMxQixnQkFBTSxDQUFDLFNBQVMsR0FBRyxVQUFVLENBQUM7OzJDQUNYLGVBQU8saUNBQXlCLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQzs7O0FBQWpFLG9CQUFVOzs7Ozs7O0dBQ1gsQ0FBQyxDQUFDO0FBQ0gsT0FBSyxDQUFDOzs7OzsyQ0FDRSxVQUFVLENBQUMsS0FBSyxFQUFFOzs7Ozs7O0dBQ3pCLENBQUMsQ0FBQzs7QUFFSCxVQUFRLENBQUMscUJBQXFCLEVBQUUsWUFBWTtBQUMxQyxNQUFFLENBQUMsdURBQXVELEVBQUU7VUFDcEQsR0FBRyxFQVFILHFCQUFxQixFQUNyQixRQUFRLEVBQ1IsT0FBTzs7OztBQVZQLGVBQUcsR0FBRyxJQUFJLGdCQUFVLE1BQU0sQ0FBQztBQUMvQixzQkFBUSxFQUFFLElBQUk7YUFDZixDQUFDOztBQUNGLGVBQUcsQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLFVBQUMsRUFBRSxFQUFLO0FBQzNCLGtCQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsVUFBVSxLQUFLLGdCQUFVLElBQUksRUFBRTtBQUMxQyxrQkFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztlQUNsQjthQUNGLENBQUMsQ0FBQztBQUNHLGlDQUFxQixHQUFHLFVBQVUsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDO0FBQzNELG9CQUFRO0FBQ1IsbUJBQU8sR0FBRyxJQUFJOzs2Q0FDZCxVQUFVLENBQUMsbUJBQW1CLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQzs7O0FBQ25ELHNCQUFVLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLENBQUM7Ozs2Q0FDOUQsVUFBVSxDQUFDLG9CQUFvQixFQUFFOzs7OzJCQUE1QyxJQUFJLHNDQUEwQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDOzs2Q0FDN0QsMEJBQU0sVUFBQyxPQUFPLEVBQUUsTUFBTSxFQUFLO0FBQy9CLGtCQUFNLE1BQU0sR0FBRyx3Q0FBZ0MsSUFBSSxHQUFHLFFBQVEsQ0FBRyxDQUFDO0FBQ2xFLG9CQUFNLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxVQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUs7QUFDbkMsa0JBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7QUFDdkIsbUJBQUcsQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQztlQUNsRCxDQUFDLENBQUM7QUFDSCxvQkFBTSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsVUFBQyxJQUFJLEVBQUs7QUFDN0Isb0JBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3pCLHVCQUFPLEVBQUUsQ0FBQztlQUNYLENBQUMsQ0FBQztBQUNILG9CQUFNLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztBQUMzQix3QkFBVSxDQUFDO3VCQUFNLE1BQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQyw0REFBNEQsQ0FBQyxDQUFDO2VBQUEsRUFDckYsT0FBTyxDQUFDLENBQUM7YUFDckIsQ0FBQzs7Ozs2Q0FFSyxVQUFVLENBQUMsc0JBQXNCLENBQUMsUUFBUSxDQUFDOzs7NkJBQUUsTUFBTSxDQUFDLEVBQUU7Ozs2Q0FDaEQsVUFBVSxDQUFDLG9CQUFvQixFQUFFOzs7OzJCQUE1QyxJQUFJLHNDQUEwQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDOzs2Q0FDN0QsMEJBQU0sVUFBQyxPQUFPLEVBQUUsTUFBTSxFQUFLO0FBQy9CLGtCQUFNLE1BQU0sR0FBRyx3Q0FBZ0MsSUFBSSxHQUFHLFFBQVEsQ0FBRyxDQUFDO0FBQ2xFLG9CQUFNLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxVQUFDLElBQUk7dUJBQ3hCLE1BQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQyxvRkFDc0IsSUFBSSw4QkFBeUIsQ0FBQyxDQUFDO2VBQUEsQ0FDdkUsQ0FBQztBQUNGLG9CQUFNLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztBQUM1Qix3QkFBVSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQzthQUM5QixDQUFDOzs7QUFDRixzQkFBVSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDOzs7Ozs7O0tBQzVFLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2Jhc2Vkcml2ZXIvd2Vic29ja2V0cy1lMmUtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgc2VydmVyLCByb3V0ZUNvbmZpZ3VyaW5nRnVuY3Rpb24sXG4gICAgICAgICBERUZBVUxUX1dTX1BBVEhOQU1FX1BSRUZJWCB9IGZyb20gJy4uLy4uJztcbmltcG9ydCB7IEZha2VEcml2ZXIgfSBmcm9tICcuLi9wcm90b2NvbC9mYWtlLWRyaXZlcic7XG5pbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCBXZWJTb2NrZXQgZnJvbSAnd3MnO1xuaW1wb3J0IEIgZnJvbSAnYmx1ZWJpcmQnO1xuXG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmRlc2NyaWJlKCdXZWJzb2NrZXRzIChlMmUpJywgZnVuY3Rpb24gKCkge1xuICBsZXQgYmFzZVNlcnZlcjtcbiAgbGV0IGRyaXZlcjtcbiAgY29uc3QgU0VTU0lPTl9JRCA9ICdmb28nO1xuICBjb25zdCBXU19EQVRBID0gJ0hlbGxvJztcbiAgY29uc3QgUE9SVCA9IDgxODE7XG5cbiAgYmVmb3JlKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBkcml2ZXIgPSBuZXcgRmFrZURyaXZlcigpO1xuICAgIGRyaXZlci5zZXNzaW9uSWQgPSBTRVNTSU9OX0lEO1xuICAgIGJhc2VTZXJ2ZXIgPSBhd2FpdCBzZXJ2ZXIocm91dGVDb25maWd1cmluZ0Z1bmN0aW9uKGRyaXZlciksIFBPUlQpO1xuICB9KTtcbiAgYWZ0ZXIoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGF3YWl0IGJhc2VTZXJ2ZXIuY2xvc2UoKTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ3dlYiBzb2NrZXRzIHN1cHBvcnQnLCBmdW5jdGlvbiAoKSB7XG4gICAgaXQoJ3Nob3VsZCBiZSBhYmxlIHRvIGFkZCB3ZWJzb2NrZXQgaGFuZGxlciBhbmQgcmVtb3ZlIGl0JywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgY29uc3Qgd3NzID0gbmV3IFdlYlNvY2tldC5TZXJ2ZXIoe1xuICAgICAgICBub1NlcnZlcjogdHJ1ZSxcbiAgICAgIH0pO1xuICAgICAgd3NzLm9uKCdjb25uZWN0aW9uJywgKHdzKSA9PiB7XG4gICAgICAgIGlmICh3cyAmJiB3cy5yZWFkeVN0YXRlID09PSBXZWJTb2NrZXQuT1BFTikge1xuICAgICAgICAgIHdzLnNlbmQoV1NfREFUQSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgY29uc3QgcHJldmlvdXNMaXN0ZW5lckNvdW50ID0gYmFzZVNlcnZlci5saXN0ZW5lckNvdW50KCd1cGdyYWRlJyk7XG4gICAgICBjb25zdCBlbmRwb2ludCA9IGAke0RFRkFVTFRfV1NfUEFUSE5BTUVfUFJFRklYfS9oZWxsb2A7XG4gICAgICBjb25zdCB0aW1lb3V0ID0gNTAwMDtcbiAgICAgIGF3YWl0IGJhc2VTZXJ2ZXIuYWRkV2ViU29ja2V0SGFuZGxlcihlbmRwb2ludCwgd3NzKTtcbiAgICAgIGJhc2VTZXJ2ZXIubGlzdGVuZXJDb3VudCgndXBncmFkZScpLnNob3VsZC5iZS5hYm92ZShwcmV2aW91c0xpc3RlbmVyQ291bnQpO1xuICAgICAgXy5rZXlzKGF3YWl0IGJhc2VTZXJ2ZXIuZ2V0V2ViU29ja2V0SGFuZGxlcnMoKSkubGVuZ3RoLnNob3VsZC5lcWwoMSk7XG4gICAgICBhd2FpdCBuZXcgQigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGNvbnN0IGNsaWVudCA9IG5ldyBXZWJTb2NrZXQoYHdzOi8vbG9jYWxob3N0OiR7UE9SVH0ke2VuZHBvaW50fWApO1xuICAgICAgICBjbGllbnQub24oJ2Nvbm5lY3Rpb24nLCAod3MsIHJlcSkgPT4ge1xuICAgICAgICAgIHdzLnNob3VsZC5ub3QuYmUuZW1wdHk7XG4gICAgICAgICAgcmVxLmNvbm5lY3Rpb24ucmVtb3RlQWRkcmVzcy5zaG91bGQubm90LmJlLmVtcHR5O1xuICAgICAgICB9KTtcbiAgICAgICAgY2xpZW50Lm9uKCdtZXNzYWdlJywgKGRhdGEpID0+IHtcbiAgICAgICAgICBkYXRhLnNob3VsZC5lcWwoV1NfREFUQSk7XG4gICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICB9KTtcbiAgICAgICAgY2xpZW50Lm9uKCdlcnJvcicsIHJlamVjdCk7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4gcmVqZWN0KG5ldyBFcnJvcignTm8gd2Vic29ja2V0IG1lc3NhZ2VzIGhhdmUgYmVlbiByZWNlaXZlZCBhZnRlciB0aGUgdGltZW91dCcpKSxcbiAgICAgICAgICAgICAgICAgICB0aW1lb3V0KTtcbiAgICAgIH0pO1xuXG4gICAgICAoYXdhaXQgYmFzZVNlcnZlci5yZW1vdmVXZWJTb2NrZXRIYW5kbGVyKGVuZHBvaW50KSkuc2hvdWxkLmJlLnRydWU7XG4gICAgICBfLmtleXMoYXdhaXQgYmFzZVNlcnZlci5nZXRXZWJTb2NrZXRIYW5kbGVycygpKS5sZW5ndGguc2hvdWxkLmVxbCgwKTtcbiAgICAgIGF3YWl0IG5ldyBCKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgY29uc3QgY2xpZW50ID0gbmV3IFdlYlNvY2tldChgd3M6Ly9sb2NhbGhvc3Q6JHtQT1JUfSR7ZW5kcG9pbnR9YCk7XG4gICAgICAgIGNsaWVudC5vbignbWVzc2FnZScsIChkYXRhKSA9PlxuICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYE5vIHdlYnNvY2tldCBtZXNzYWdlcyBhcmUgZXhwZWN0ZWQgYWZ0ZXIgdGhlIGhhbmRsZXIgYCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBgaGFzIGJlZW4gcmVtb3ZlZC4gJyR7ZGF0YX0nIGlzIHJlY2VpdmVkIGluc3RlYWQuIGApKVxuICAgICAgICApO1xuICAgICAgICBjbGllbnQub24oJ2Vycm9yJywgcmVzb2x2ZSk7XG4gICAgICAgIHNldFRpbWVvdXQocmVzb2x2ZSwgdGltZW91dCk7XG4gICAgICB9KTtcbiAgICAgIGJhc2VTZXJ2ZXIubGlzdGVuZXJDb3VudCgndXBncmFkZScpLnNob3VsZC5iZS5hYm92ZShwcmV2aW91c0xpc3RlbmVyQ291bnQpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuXG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
