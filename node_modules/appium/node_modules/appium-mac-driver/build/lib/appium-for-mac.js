'use strict';

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _appiumBaseDriver = require('appium-base-driver');

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var _teen_process = require('teen_process');

var _appiumSupport = require('appium-support');

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var DEFAULT_A4M_HOST = '127.0.0.1';
var DEFAULT_A4M_PORT = 4622;

var REQ_A4M_APP_PATH = _path2['default'].resolve('/Applications', 'AppiumForMac.app');

var a4mLog = _appiumSupport.logger.getLogger('Appium4Mac');

var AppiumForMac = (function () {
  function AppiumForMac() {
    _classCallCheck(this, AppiumForMac);

    this.proxyHost = DEFAULT_A4M_HOST;
    this.proxyPort = DEFAULT_A4M_PORT;
    this.proc = null;
    this.jwproxy = new _appiumBaseDriver.JWProxy({ server: this.proxyHost, port: this.proxyPort });
  }

  _createClass(AppiumForMac, [{
    key: 'start',
    value: function start() {
      var startDetector, processIsAlive, a4mBinary, _arr, _loop, _i;

      return _regeneratorRuntime.async(function start$(context$2$0) {
        var _this = this;

        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            context$2$0.next = 2;
            return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(REQ_A4M_APP_PATH));

          case 2:
            if (context$2$0.sent) {
              context$2$0.next = 4;
              break;
            }

            throw new Error("Could not verify AppiumForMacDriver install; please install to your /Applications folder");

          case 4:
            startDetector = function startDetector(stdout, stderr) {
              return stderr.indexOf("Started HTTP server") !== -1;
            };

            processIsAlive = false;
            context$2$0.prev = 6;
            context$2$0.next = 9;
            return _regeneratorRuntime.awrap(this.killAll());

          case 9:
            a4mBinary = _path2['default'].resolve(REQ_A4M_APP_PATH, "Contents", "MacOS", "AppiumForMac");

            this.proc = new _teen_process.SubProcess(a4mBinary, []);
            processIsAlive = true;

            // handle log output
            _arr = ['STDOUT', 'STDERR'];

            _loop = function () {
              var stream = _arr[_i];
              _this.proc.on('lines-' + stream.toLowerCase(), function (lines) {
                var _iteratorNormalCompletion = true;
                var _didIteratorError = false;
                var _iteratorError = undefined;

                try {
                  for (var _iterator = _getIterator(lines), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var l = _step.value;

                    a4mLog.info('[' + stream + '] ' + l.trim());
                  }
                } catch (err) {
                  _didIteratorError = true;
                  _iteratorError = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion && _iterator['return']) {
                      _iterator['return']();
                    }
                  } finally {
                    if (_didIteratorError) {
                      throw _iteratorError;
                    }
                  }
                }
              });
            };

            for (_i = 0; _i < _arr.length; _i++) {
              _loop();
            }

            // handle out-of-bound exit by simply logging
            // TODO add ability for driver to handle this gracefully and maybe
            // restart
            this.proc.on('exit', function (code, signal) {
              processIsAlive = false;
              var msg = 'AppiumForMac exited unexpectedly with code ' + code + ', ' + ('signal ' + signal);
              _logger2['default'].error(msg);
            });
            _logger2['default'].info('Spawning AppiumForMac with: ' + this.appium4macdriver);

            // start subproc and wait for startDetector
            context$2$0.next = 19;
            return _regeneratorRuntime.awrap(this.proc.start(startDetector));

          case 19:
            context$2$0.next = 21;
            return _regeneratorRuntime.awrap(this.waitForOnline());

          case 21:
            context$2$0.next = 30;
            break;

          case 23:
            context$2$0.prev = 23;
            context$2$0.t0 = context$2$0['catch'](6);

            this.emit(AppiumForMac.EVENT_ERROR, context$2$0.t0);
            // just because we had an error doesn't mean the winappdriver process
            // finished; we should clean up if necessary

            if (!processIsAlive) {
              context$2$0.next = 29;
              break;
            }

            context$2$0.next = 29;
            return _regeneratorRuntime.awrap(this.proc.stop());

          case 29:
            _logger2['default'].errorAndThrow(context$2$0.t0);

          case 30:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[6, 23]]);
    }
  }, {
    key: 'sessionId',
    value: function sessionId() {
      if (this.state !== AppiumForMac.STATE_ONLINE) {
        return null;
      }

      return this.jwproxy.sessionId;
    }
  }, {
    key: 'waitForOnline',
    value: function waitForOnline() {
      return _regeneratorRuntime.async(function waitForOnline$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            return context$2$0.abrupt('return', true);

          case 1:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'getStatus',
    value: function getStatus() {
      return _regeneratorRuntime.async(function getStatus$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            context$2$0.next = 2;
            return _regeneratorRuntime.awrap(this.sendCommand('/status', 'GET'));

          case 2:
            return context$2$0.abrupt('return', context$2$0.sent);

          case 3:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'startSession',
    value: function startSession(caps) {
      return _regeneratorRuntime.async(function startSession$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            this.proxyReqRes = this.jwproxy.proxyReqRes.bind(this.jwproxy);
            context$2$0.next = 3;
            return _regeneratorRuntime.awrap(this.sendCommand('/session', 'POST', { desiredCapabilities: caps }));

          case 3:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'stop',
    value: function stop() {
      return _regeneratorRuntime.async(function stop$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            context$2$0.prev = 0;

            if (!this.proc) {
              context$2$0.next = 4;
              break;
            }

            context$2$0.next = 4;
            return _regeneratorRuntime.awrap(this.proc.stop());

          case 4:
            context$2$0.next = 9;
            break;

          case 6:
            context$2$0.prev = 6;
            context$2$0.t0 = context$2$0['catch'](0);

            _logger2['default'].error(context$2$0.t0);

          case 9:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[0, 6]]);
    }
  }, {
    key: 'sendCommand',
    value: function sendCommand(url, method, body) {
      var res;
      return _regeneratorRuntime.async(function sendCommand$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            res = undefined;
            context$2$0.prev = 1;
            context$2$0.next = 4;
            return _regeneratorRuntime.awrap(this.jwproxy.command(url, method, body));

          case 4:
            res = context$2$0.sent;
            context$2$0.next = 11;
            break;

          case 7:
            context$2$0.prev = 7;
            context$2$0.t0 = context$2$0['catch'](1);

            if (!(context$2$0.t0.message.indexOf("Did not get a valid response object") === -1 || context$2$0.t0.message.indexOf("value") !== -1)) {
              context$2$0.next = 11;
              break;
            }

            throw context$2$0.t0;

          case 11:
            return context$2$0.abrupt('return', res);

          case 12:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[1, 7]]);
    }
  }, {
    key: 'proxyReq',
    value: function proxyReq(req, res) {
      return _regeneratorRuntime.async(function proxyReq$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            context$2$0.next = 2;
            return _regeneratorRuntime.awrap(this.jwproxy.proxyReqRes(req, res));

          case 2:
            return context$2$0.abrupt('return', context$2$0.sent);

          case 3:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'killAll',
    value: function killAll() {
      var processName;
      return _regeneratorRuntime.async(function killAll$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            processName = "AppiumForMac";

            // js hint cannot handle backticks, even escaped, within template literals
            _logger2['default'].info('Killing any old AppiumForMac');
            context$2$0.next = 4;
            return _regeneratorRuntime.awrap(_appiumSupport.process.killProcess(processName));

          case 4:
            _logger2['default'].info("Successfully cleaned up old Appium4Mac servers");

          case 5:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'deleteSession',
    value: function deleteSession() {
      return _regeneratorRuntime.async(function deleteSession$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            _logger2['default'].debug('Deleting AppiumForMac server session');
            // rely on jwproxy's intelligence to know what we're talking about and
            // delete the current session
            context$2$0.prev = 1;
            context$2$0.next = 4;
            return _regeneratorRuntime.awrap(this.sendCommand('/', 'DELETE'));

          case 4:
            context$2$0.next = 9;
            break;

          case 6:
            context$2$0.prev = 6;
            context$2$0.t0 = context$2$0['catch'](1);

            _logger2['default'].warn('Did not get confirmation AppiumForMac deleteSession worked; ' + ('Error was: ' + context$2$0.t0));

          case 9:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[1, 6]]);
    }
  }]);

  return AppiumForMac;
})();

exports.AppiumForMac = AppiumForMac;
exports.DEFAULT_A4M_HOST = DEFAULT_A4M_HOST;
exports.DEFAULT_A4M_PORT = DEFAULT_A4M_PORT;
exports['default'] = AppiumForMac;

// set up our subprocess object

// TODO: Actually check via HTTP

// need to cover over A4M's bad handling of responses, which sometimes
// don't have 'value' properties
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9hcHBpdW0tZm9yLW1hYy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O2dDQUF3QixvQkFBb0I7O3NCQUM1QixVQUFVOzs7OzRCQUNDLGNBQWM7OzZCQUNMLGdCQUFnQjs7b0JBQ25DLE1BQU07Ozs7QUFFdkIsSUFBTSxnQkFBZ0IsR0FBRyxXQUFXLENBQUM7QUFDckMsSUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7O0FBRTlCLElBQU0sZ0JBQWdCLEdBQUcsa0JBQUssT0FBTyxDQUFDLGVBQWUsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDOztBQUUzRSxJQUFNLE1BQU0sR0FBRyxzQkFBTyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUM7O0lBRXhDLFlBQVk7QUFDSixXQURSLFlBQVksR0FDRDswQkFEWCxZQUFZOztBQUVkLFFBQUksQ0FBQyxTQUFTLEdBQUcsZ0JBQWdCLENBQUM7QUFDbEMsUUFBSSxDQUFDLFNBQVMsR0FBRyxnQkFBZ0IsQ0FBQztBQUNsQyxRQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztBQUNqQixRQUFJLENBQUMsT0FBTyxHQUFHLDhCQUFZLEVBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUMsQ0FBQyxDQUFDO0dBQzVFOztlQU5HLFlBQVk7O1dBUUo7VUFLSixhQUFhLEVBSWYsY0FBYyxFQUtWLFNBQVM7Ozs7Ozs7OzZDQWJOLGtCQUFHLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQzs7Ozs7Ozs7a0JBQzlCLElBQUksS0FBSyxDQUFDLDBGQUEwRixDQUFDOzs7QUFHdkcseUJBQWEsR0FBRyxTQUFoQixhQUFhLENBQUksTUFBTSxFQUFFLE1BQU0sRUFBSztBQUN4QyxxQkFBTyxNQUFNLENBQUMsT0FBTyxDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7YUFDckQ7O0FBRUcsMEJBQWMsR0FBRyxLQUFLOzs7NkNBRWxCLElB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SyxDQUFDLENBQUMsQ0FBQTs7Ozs7Ozs7Z0RBSWhDLEdBQUc7Ozs7Ozs7S0FDWDs7O1dBRWMsa0JBQUMsR0FBRyxFQUFFLEdBQUc7Ozs7OzZDQUNULElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUM7Ozs7Ozs7Ozs7S0FDaEQ7OztXQUVhO1VBQ04sV0FBVzs7OztBQUFYLHVCQUFXLEdBQUcsY0FBYzs7O0FBRWxDLGdDQUFJLElBQUksZ0NBQWdDLENBQUM7OzZDQUNuQyx1QkFBUSxXQUFXLENBQUMsV0FBVyxDQUFDOzs7QUFDdEMsZ0NBQUksSUFBSSxDQUFDLGdEQUFnRCxDQUFDLENBQUM7Ozs7Ozs7S0FDNUQ7OztXQUVtQjs7OztBQUNsQixnQ0FBSSxLQUFLLENBQUMsc0NBQXNDLENBQUMsQ0FBQzs7Ozs7NkNBSTFDLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQzs7Ozs7Ozs7OztBQUVyQyxnQ0FBSSxJQUFJLENBQUMsaUdBQ1ksQ0FBQyxDQUFDOzs7Ozs7O0tBRTFCOzs7U0FsSUcsWUFBWTs7O1FBcUlULFlBQVksR0FBWixZQUFZO1FBQUUsZ0JBQWdCLEdBQWhCLGdCQUFnQjtRQUFFLGdCQUFnQixHQUFoQixnQkFBZ0I7cUJBQzFDLFlBQVkiLCJmaWxlIjoibGliL2FwcGl1bS1mb3ItbWFjLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSldQcm94eSB9IGZyb20gJ2FwcGl1bS1iYXNlLWRyaXZlcic7XG5pbXBvcnQgbG9nIGZyb20gJy4vbG9nZ2VyJztcbmltcG9ydCB7IFN1YlByb2Nlc3MgfSBmcm9tICd0ZWVuX3Byb2Nlc3MnO1xuaW1wb3J0IHsgZnMsIGxvZ2dlciwgcHJvY2VzcyB9IGZyb20gJ2FwcGl1bS1zdXBwb3J0JztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuXG5jb25zdCBERUZBVUxUX0E0TV9IT1NUID0gJzEyNy4wLjAuMSc7XG5jb25zdCBERUZBVUxUX0E0TV9QT1JUID0gNDYyMjtcblxuY29uc3QgUkVRX0E0TV9BUFBfUEFUSCA9IHBhdGgucmVzb2x2ZSgnL0FwcGxpY2F0aW9ucycsICdBcHBpdW1Gb3JNYWMuYXBwJyk7XG5cbmNvbnN0IGE0bUxvZyA9IGxvZ2dlci5nZXRMb2dnZXIoJ0FwcGl1bTRNYWMnKTtcblxuY2xhc3MgQXBwaXVtRm9yTWFjIHtcbiAgY29uc3RydWN0b3IgKCkge1xuICAgIHRoaXMucHJveHlIb3N0ID0gREVGQVVMVF9BNE1fSE9TVDtcbiAgICB0aGlzLnByb3h5UG9ydCA9IERFRkFVTFRfQTRNX1BPUlQ7XG4gICAgdGhpcy5wcm9jID0gbnVsbDtcbiAgICB0aGlzLmp3cHJveHkgPSBuZXcgSldQcm94eSh7c2VydmVyOiB0aGlzLnByb3h5SG9zdCwgcG9ydDogdGhpcy5wcm94eVBvcnR9KTtcbiAgfVxuXG4gIGFzeW5jIHN0YXJ0ICgpIHtcbiAgICBpZiAoIWF3YWl0IGZzLmV4aXN0cyhSRVFfQTRNX0FQUF9QQVRIKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGQgbm90IHZlcmlmeSBBcHBpdW1Gb3JNYWNEcml2ZXIgaW5zdGFsbDsgcGxlYXNlIGluc3RhbGwgdG8geW91ciAvQXBwbGljYXRpb25zIGZvbGRlclwiKTtcbiAgICB9XG5cbiAgICBjb25zdCBzdGFydERldGVjdG9yID0gKHN0ZG91dCwgc3RkZXJyKSA9PiB7XG4gICAgICByZXR1cm4gc3RkZXJyLmluZGV4T2YoXCJTdGFydGVkIEhUVFAgc2VydmVyXCIpICE9PSAtMTtcbiAgICB9O1xuXG4gICAgbGV0IHByb2Nlc3NJc0FsaXZlID0gZmFsc2U7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMua2lsbEFsbCgpO1xuXG4gICAgICAvLyBzZXQgdXAgb3VyIHN1YnByb2Nlc3Mgb2JqZWN0XG4gICAgICBjb25zdCBhNG1CaW5hcnkgPSBwYXRoLnJlc29sdmUoUkVRX0E0TV9BUFBfUEFUSCwgXCJDb250ZW50c1wiLCBcIk1hY09TXCIsIFwiQXBwaXVtRm9yTWFjXCIpO1xuICAgICAgdGhpcy5wcm9jID0gbmV3IFN1YlByb2Nlc3MoYTRtQmluYXJ5LCBbXSk7XG4gICAgICBwcm9jZXNzSXNBbGl2ZSA9IHRydWU7XG5cbiAgICAgIC8vIGhhbmRsZSBsb2cgb3V0cHV0XG4gICAgICBmb3IgKGxldCBzdHJlYW0gb2YgWydTVERPVVQnLCAnU1RERVJSJ10pIHtcbiAgICAgICAgdGhpcy5wcm9jLm9uKGBsaW5lcy0ke3N0cmVhbS50b0xvd2VyQ2FzZSgpfWAsIChsaW5lcykgPT4ge1xuICAgICAgICAgIGZvciAobGV0IGwgb2YgbGluZXMpIHtcbiAgICAgICAgICAgIGE0bUxvZy5pbmZvKGBbJHtzdHJlYW19XSAke2wudHJpbSgpfWApO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIC8vIGhhbmRsZSBvdXQtb2YtYm91bmQgZXhpdCBieSBzaW1wbHkgbG9nZ2luZ1xuICAgICAgLy8gVE9ETyBhZGQgYWJpbGl0eSBmb3IgZHJpdmVyIHRvIGhhbmRsZSB0aGlzIGdyYWNlZnVsbHkgYW5kIG1heWJlXG4gICAgICAvLyByZXN0YXJ0XG4gICAgICB0aGlzLnByb2Mub24oJ2V4aXQnLCAoY29kZSwgc2lnbmFsKSA9PiB7XG4gICAgICAgIHByb2Nlc3NJc0FsaXZlID0gZmFsc2U7XG4gICAgICAgIGxldCBtc2cgPSBgQXBwaXVtRm9yTWFjIGV4aXRlZCB1bmV4cGVjdGVkbHkgd2l0aCBjb2RlICR7Y29kZX0sIGAgK1xuICAgICAgICAgICAgICAgICAgYHNpZ25hbCAke3NpZ25hbH1gO1xuICAgICAgICBsb2cuZXJyb3IobXNnKTtcbiAgICAgIH0pO1xuICAgICAgbG9nLmluZm8oYFNwYXduaW5nIEFwcGl1bUZvck1hYyB3aXRoOiAke3RoaXMuYXBwaXVtNG1hY2RyaXZlcn1gKTtcblxuICAgICAgLy8gc3RhcnQgc3VicHJvYyBhbmQgd2FpdCBmb3Igc3RhcnREZXRlY3RvclxuICAgICAgYXdhaXQgdGhpcy5wcm9jLnN0YXJ0KHN0YXJ0RGV0ZWN0b3IpO1xuXG4gICAgICBhd2FpdCB0aGlzLndhaXRGb3JPbmxpbmUoKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0aGlzLmVtaXQoQXBwaXVtRm9yTWFjLkVWRU5UX0VSUk9SLCBlKTtcbiAgICAgIC8vIGp1c3QgYmVjYXVzZSB3ZSBoYWQgYW4gZXJyb3IgZG9lc24ndCBtZWFuIHRoZSB3aW5hcHBkcml2ZXIgcHJvY2Vzc1xuICAgICAgLy8gZmluaXNoZWQ7IHdlIHNob3VsZCBjbGVhbiB1cCBpZiBuZWNlc3NhcnlcbiAgICAgIGlmIChwcm9jZXNzSXNBbGl2ZSkge1xuICAgICAgICBhd2FpdCB0aGlzLnByb2Muc3RvcCgpO1xuICAgICAgfVxuICAgICAgbG9nLmVycm9yQW5kVGhyb3coZSk7XG4gICAgfVxuICB9XG5cbiAgc2Vzc2lvbklkICgpIHtcbiAgICBpZiAodGhpcy5zdGF0ZSAhPT0gQXBwaXVtRm9yTWFjLlNUQVRFX09OTElORSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuandwcm94eS5zZXNzaW9uSWQ7XG4gIH1cblxuICBhc3luYyB3YWl0Rm9yT25saW5lICgpIHtcbiAgICAvLyBUT0RPOiBBY3R1YWxseSBjaGVjayB2aWEgSFRUUFxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgYXN5bmMgZ2V0U3RhdHVzICgpIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5zZW5kQ29tbWFuZCgnL3N0YXR1cycsICdHRVQnKTtcbiAgfVxuXG4gIGFzeW5jIHN0YXJ0U2Vzc2lvbiAoY2Fwcykge1xuICAgIHRoaXMucHJveHlSZXFSZXMgPSB0aGlzLmp3cHJveHkucHJveHlSZXFSZXMuYmluZCh0aGlzLmp3cHJveHkpO1xuICAgIGF3YWl0IHRoaXMuc2VuZENvbW1hbmQoJy9zZXNzaW9uJywgJ1BPU1QnLCB7ZGVzaXJlZENhcGFiaWxpdGllczogY2Fwc30pO1xuICB9XG5cbiAgYXN5bmMgc3RvcCAoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICh0aGlzLnByb2MpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5wcm9jLnN0b3AoKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBsb2cuZXJyb3IoZSk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgc2VuZENvbW1hbmQgKHVybCwgbWV0aG9kLCBib2R5KSB7XG4gICAgbGV0IHJlcztcbiAgICAvLyBuZWVkIHRvIGNvdmVyIG92ZXIgQTRNJ3MgYmFkIGhhbmRsaW5nIG9mIHJlc3BvbnNlcywgd2hpY2ggc29tZXRpbWVzXG4gICAgLy8gZG9uJ3QgaGF2ZSAndmFsdWUnIHByb3BlcnRpZXNcbiAgICB0cnkge1xuICAgICAgcmVzID0gYXdhaXQgdGhpcy5qd3Byb3h5LmNvbW1hbmQodXJsLCBtZXRob2QsIGJvZHkpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGlmIChlLm1lc3NhZ2UuaW5kZXhPZihcIkRpZCBub3QgZ2V0IGEgdmFsaWQgcmVzcG9uc2Ugb2JqZWN0XCIpID09PSAtMSB8fFxuICAgICAgICAgIGUubWVzc2FnZS5pbmRleE9mKFwidmFsdWVcIikgIT09IC0xKSB7XG4gICAgICAgIHRocm93IGU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXM7XG4gIH1cblxuICBhc3luYyBwcm94eVJlcSAocmVxLCByZXMpIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5qd3Byb3h5LnByb3h5UmVxUmVzKHJlcSwgcmVzKTtcbiAgfVxuXG4gIGFzeW5jIGtpbGxBbGwgKCkge1xuICAgIGNvbnN0IHByb2Nlc3NOYW1lID0gXCJBcHBpdW1Gb3JNYWNcIjtcbiAgICAvLyBqcyBoaW50IGNhbm5vdCBoYW5kbGUgYmFja3RpY2tzLCBldmVuIGVzY2FwZWQsIHdpdGhpbiB0ZW1wbGF0ZSBsaXRlcmFsc1xuICAgIGxvZy5pbmZvKGBLaWxsaW5nIGFueSBvbGQgQXBwaXVtRm9yTWFjYCk7XG4gICAgYXdhaXQgcHJvY2Vzcy5raWxsUHJvY2Vzcyhwcm9jZXNzTmFtZSk7XG4gICAgbG9nLmluZm8oXCJTdWNjZXNzZnVsbHkgY2xlYW5lZCB1cCBvbGQgQXBwaXVtNE1hYyBzZXJ2ZXJzXCIpO1xuICB9XG5cbiAgYXN5bmMgZGVsZXRlU2Vzc2lvbiAoKSB7XG4gICAgbG9nLmRlYnVnKCdEZWxldGluZyBBcHBpdW1Gb3JNYWMgc2VydmVyIHNlc3Npb24nKTtcbiAgICAvLyByZWx5IG9uIGp3cHJveHkncyBpbnRlbGxpZ2VuY2UgdG8ga25vdyB3aGF0IHdlJ3JlIHRhbGtpbmcgYWJvdXQgYW5kXG4gICAgLy8gZGVsZXRlIHRoZSBjdXJyZW50IHNlc3Npb25cbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy5zZW5kQ29tbWFuZCgnLycsICdERUxFVEUnKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGxvZy53YXJuKGBEaWQgbm90IGdldCBjb25maXJtYXRpb24gQXBwaXVtRm9yTWFjIGRlbGV0ZVNlc3Npb24gd29ya2VkOyBgICtcbiAgICAgICAgYEVycm9yIHdhczogJHtlcnJ9YCk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCB7IEFwcGl1bUZvck1hYywgREVGQVVMVF9BNE1fSE9TVCwgREVGQVVMVF9BNE1fUE9SVH07XG5leHBvcnQgZGVmYXVsdCBBcHBpdW1Gb3JNYWM7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=
