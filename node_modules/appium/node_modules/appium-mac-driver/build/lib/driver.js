'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _slicedToArray = require('babel-runtime/helpers/sliced-to-array')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _appiumBaseDriver = require('appium-base-driver');

var _appiumSupport = require('appium-support');

var _appiumForMac = require('./appium-for-mac');

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

// Appium instantiates this class

var MacDriver = (function (_BaseDriver) {
  _inherits(MacDriver, _BaseDriver);

  function MacDriver() {
    var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var shouldValidateCaps = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

    _classCallCheck(this, MacDriver);

    _get(Object.getPrototypeOf(MacDriver.prototype), 'constructor', this).call(this, opts, shouldValidateCaps);
    this.jwpProxyActive = false;
    this.opts.address = opts.address || _appiumForMac.DEFAULT_A4M_HOST;
  }

  _createClass(MacDriver, [{
    key: 'createSession',
    value: function createSession() {
      var _len,
          args,
          _key,
          _ref,
          _ref2,
          sessionId,
          caps,
          args$2$0 = arguments;

      return _regeneratorRuntime.async(function createSession$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            if (_appiumSupport.system.isMac()) {
              context$2$0.next = 2;
              break;
            }

            throw new Error("AppiumForMac tests only run on the Mac");

          case 2:
            context$2$0.prev = 2;

            for (_len = args$2$0.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = args$2$0[_key];
            }

            context$2$0.next = 6;
            return _regeneratorRuntime.awrap(_get(Object.getPrototypeOf(MacDriver.prototype), 'createSession', this).apply(this, args));

          case 6:
            _ref = context$2$0.sent;
            _ref2 = _slicedToArray(_ref, 2);
            sessionId = _ref2[0];
            caps = _ref2[1];
            context$2$0.next = 12;
            return _regeneratorRuntime.awrap(this.startAppiumForMacSession());

          case 12:
            if (!caps.app) {
              context$2$0.next = 16;
              break;
            }

            _logger2['default'].info('Automatically navigating to app \'' + caps.app + '\'');
            context$2$0.next = 16;
            return _regeneratorRuntime.awrap(this.a4mDriver.sendCommand('/url', 'POST', { url: caps.app }));

          case 16:
            return context$2$0.abrupt('return', [sessionId, caps]);

          case 19:
            context$2$0.prev = 19;
            context$2$0.t0 = context$2$0['catch'](2);
            context$2$0.next = 23;
            return _regeneratorRuntime.awrap(this.deleteSession());

          case 23:
            throw context$2$0.t0;

          case 24:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[2, 19]]);
    }
  }, {
    key: 'startAppiumForMacSession',
    value: function startAppiumForMacSession() {
      return _regeneratorRuntime.async(function startAppiumForMacSession$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            this.a4mDriver = new _appiumForMac.AppiumForMac();

            context$2$0.next = 3;
            return _regeneratorRuntime.awrap(this.a4mDriver.start());

          case 3:
            context$2$0.next = 5;
            return _regeneratorRuntime.awrap(this.a4mDriver.startSession(this.caps));

          case 5:
            this.proxyReqRes = this.a4mDriver.proxyReqRes.bind(this.a4mDriver);
            // now that everything has started successfully, turn on proxying so all
            // subsequent session requests go straight to/from AppiumForMac
            this.jwpProxyActive = true;

          case 7:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'deleteSession',
    value: function deleteSession() {
      return _regeneratorRuntime.async(function deleteSession$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            _logger2['default'].debug('Deleting AppiumForMac session');

            if (!(this.a4mDriver && this.jwpProxyActive)) {
              context$2$0.next = 7;
              break;
            }

            context$2$0.next = 4;
            return _regeneratorRuntime.awrap(this.a4mDriver.deleteSession());

          case 4:
            context$2$0.next = 6;
            return _regeneratorRuntime.awrap(this.a4mDriver.stop());

          case 6:
            this.a4mDriver = null;

          case 7:
            this.jwpProxyActive = false;
            context$2$0.next = 10;
            return _regeneratorRuntime.awrap(_get(Object.getPrototypeOf(MacDriver.prototype), 'deleteSession', this).call(this));

          case 10:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'proxyActive',
    value: function proxyActive() {
      // we always have an active proxy to the AppiumForMac server
      return true;
    }
  }, {
    key: 'canProxy',
    value: function canProxy() {
      // we can always proxy to the AppiumForMac server
      return true;
    }
  }, {
    key: 'driverData',
    get: function get() {
      return { A4MPort: this.opts.port };
    }
  }]);

  return MacDriver;
})(_appiumBaseDriver.BaseDriver);

exports.MacDriver = MacDriver;
exports['default'] = MacDriver;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9kcml2ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0NBQTJCLG9CQUFvQjs7NkJBQ3hCLGdCQUFnQjs7NEJBQ08sa0JBQWtCOztzQkFDN0MsVUFBVTs7Ozs7O0lBR3ZCLFNBQVM7WUFBVCxTQUFTOztBQUNELFdBRFIsU0FBUyxHQUNzQztRQUF0QyxJQUFJLHlEQUFHLEVBQUU7UUFBRSxrQkFBa0IseURBQUcsSUFBSTs7MEJBRDdDLFNBQVM7O0FBRVgsK0JBRkUsU0FBUyw2Q0FFTCxJQUFJLEVBQUUsa0JBQWtCLEVBQUU7QUFDaEMsUUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUM7QUFDNUIsUUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sa0NBQW9CLENBQUM7R0FDdEQ7O2VBTEcsU0FBUzs7V0FPTzs7VUFBSSxJQUFJOzs7O1VBS25CLFNBQVM7VUFBRSxJQUFJOzs7Ozs7Z0JBSmpCLHNCQUFPLEtBQUssRUFBRTs7Ozs7a0JBQ1gsSUFBSSxLQUFLLENBQUMsd0NBQXdDLENBQUM7Ozs7O3lDQUZyQyxJQUFJO0FBQUosa0JBQUk7Ozs7d0VBUHhCLFNBQVMsZ0RBWTRDLElBQUk7Ozs7O0FBQXBELHFCQUFTO0FBQUUsZ0JBQUk7OzZDQUNkLElBQUksQ0FBQyx3QkFBd0IsRUFBRTs7O2lCQUNqQyxJQUFJLENBQUMsR0FBRzs7Ozs7QUFDVixnQ0FBTyxJQUFJLHdDQUFxQyxJQUFJLENBQUMsR0FBRyxRQUFJLENBQUM7OzZDQUN2RCxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLEVBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUMsQ0FBQzs7O2dEQUU1RCxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUM7Ozs7Ozs2Q0FFbEIsSUFBSSxDQUFDLGFBQWEsRUFBRTs7Ozs7Ozs7OztLQUc3Qjs7O1dBRThCOzs7O0FBQzdCLGdCQUFJLENBQUMsU0FBUyxHQUFHLGdDQUFrQixDQUFDOzs7NkNBRTlCLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFOzs7OzZDQUN0QixJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDOzs7QUFDNUMsZ0JBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQzs7O0FBR25FLGdCQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQzs7Ozs7OztLQUM1Qjs7O1dBRW1COzs7O0FBQ2xCLGdDQUFPLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxDQUFDOztrQkFFMUMsSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFBOzs7Ozs7NkNBQ2pDLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxFQUFFOzs7OzZDQUM5QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRTs7O0FBQzNCLGdCQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQzs7O0FBRXhCLGdCQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQzs7d0VBNUMxQixTQUFTOzs7Ozs7O0tBOENaOzs7V0FFVyx1QkFBRzs7QUFFYixhQUFPLElBQUksQ0FBQztLQUNiOzs7V0FFUSxvQkFBRzs7QUFFVixhQUFPLElBQUksQ0FBQztLQUNiOzs7U0FFYyxlQUFHO0FBQ2hCLGFBQU8sRUFBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUMsQ0FBQztLQUNsQzs7O1NBNURHLFNBQVM7OztRQStETixTQUFTLEdBQVQsU0FBUztxQkFDSCxTQUFTIiwiZmlsZSI6ImxpYi9kcml2ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlRHJpdmVyIH0gZnJvbSAnYXBwaXVtLWJhc2UtZHJpdmVyJztcbmltcG9ydCB7IHN5c3RlbSB9IGZyb20gJ2FwcGl1bS1zdXBwb3J0JztcbmltcG9ydCB7IEFwcGl1bUZvck1hYywgREVGQVVMVF9BNE1fSE9TVH0gZnJvbSAnLi9hcHBpdW0tZm9yLW1hYyc7XG5pbXBvcnQgbG9nZ2VyIGZyb20gJy4vbG9nZ2VyJztcblxuLy8gQXBwaXVtIGluc3RhbnRpYXRlcyB0aGlzIGNsYXNzXG5jbGFzcyBNYWNEcml2ZXIgZXh0ZW5kcyBCYXNlRHJpdmVyIHtcbiAgY29uc3RydWN0b3IgKG9wdHMgPSB7fSwgc2hvdWxkVmFsaWRhdGVDYXBzID0gdHJ1ZSkge1xuICAgIHN1cGVyKG9wdHMsIHNob3VsZFZhbGlkYXRlQ2Fwcyk7XG4gICAgdGhpcy5qd3BQcm94eUFjdGl2ZSA9IGZhbHNlO1xuICAgIHRoaXMub3B0cy5hZGRyZXNzID0gb3B0cy5hZGRyZXNzIHx8IERFRkFVTFRfQTRNX0hPU1Q7XG4gIH1cblxuICBhc3luYyBjcmVhdGVTZXNzaW9uICguLi5hcmdzKSB7XG4gICAgaWYgKCFzeXN0ZW0uaXNNYWMoKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQXBwaXVtRm9yTWFjIHRlc3RzIG9ubHkgcnVuIG9uIHRoZSBNYWNcIik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICBsZXQgW3Nlc3Npb25JZCwgY2Fwc10gPSBhd2FpdCBzdXBlci5jcmVhdGVTZXNzaW9uKC4uLmFyZ3MpO1xuICAgICAgYXdhaXQgdGhpcy5zdGFydEFwcGl1bUZvck1hY1Nlc3Npb24oKTtcbiAgICAgIGlmIChjYXBzLmFwcCkge1xuICAgICAgICBsb2dnZXIuaW5mbyhgQXV0b21hdGljYWxseSBuYXZpZ2F0aW5nIHRvIGFwcCAnJHtjYXBzLmFwcH0nYCk7XG4gICAgICAgIGF3YWl0IHRoaXMuYTRtRHJpdmVyLnNlbmRDb21tYW5kKCcvdXJsJywgJ1BPU1QnLCB7dXJsOiBjYXBzLmFwcH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIFtzZXNzaW9uSWQsIGNhcHNdO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGF3YWl0IHRoaXMuZGVsZXRlU2Vzc2lvbigpO1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBzdGFydEFwcGl1bUZvck1hY1Nlc3Npb24gKCkge1xuICAgIHRoaXMuYTRtRHJpdmVyID0gbmV3IEFwcGl1bUZvck1hYygpO1xuXG4gICAgYXdhaXQgdGhpcy5hNG1Ecml2ZXIuc3RhcnQoKTtcbiAgICBhd2FpdCB0aGlzLmE0bURyaXZlci5zdGFydFNlc3Npb24odGhpcy5jYXBzKTtcbiAgICB0aGlzLnByb3h5UmVxUmVzID0gdGhpcy5hNG1Ecml2ZXIucHJveHlSZXFSZXMuYmluZCh0aGlzLmE0bURyaXZlcik7XG4gICAgLy8gbm93IHRoYXQgZXZlcnl0aGluZyBoYXMgc3RhcnRlZCBzdWNjZXNzZnVsbHksIHR1cm4gb24gcHJveHlpbmcgc28gYWxsXG4gICAgLy8gc3Vic2VxdWVudCBzZXNzaW9uIHJlcXVlc3RzIGdvIHN0cmFpZ2h0IHRvL2Zyb20gQXBwaXVtRm9yTWFjXG4gICAgdGhpcy5qd3BQcm94eUFjdGl2ZSA9IHRydWU7XG4gIH1cblxuICBhc3luYyBkZWxldGVTZXNzaW9uICgpIHtcbiAgICBsb2dnZXIuZGVidWcoJ0RlbGV0aW5nIEFwcGl1bUZvck1hYyBzZXNzaW9uJyk7XG5cbiAgICBpZiAodGhpcy5hNG1Ecml2ZXIgJiYgdGhpcy5qd3BQcm94eUFjdGl2ZSkge1xuICAgICAgYXdhaXQgdGhpcy5hNG1Ecml2ZXIuZGVsZXRlU2Vzc2lvbigpO1xuICAgICAgYXdhaXQgdGhpcy5hNG1Ecml2ZXIuc3RvcCgpO1xuICAgICAgdGhpcy5hNG1Ecml2ZXIgPSBudWxsO1xuICAgIH1cbiAgICB0aGlzLmp3cFByb3h5QWN0aXZlID0gZmFsc2U7XG4gICAgYXdhaXQgc3VwZXIuZGVsZXRlU2Vzc2lvbigpO1xuICB9XG5cbiAgcHJveHlBY3RpdmUgKCkge1xuICAgIC8vIHdlIGFsd2F5cyBoYXZlIGFuIGFjdGl2ZSBwcm94eSB0byB0aGUgQXBwaXVtRm9yTWFjIHNlcnZlclxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgY2FuUHJveHkgKCkge1xuICAgIC8vIHdlIGNhbiBhbHdheXMgcHJveHkgdG8gdGhlIEFwcGl1bUZvck1hYyBzZXJ2ZXJcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGdldCBkcml2ZXJEYXRhICgpIHtcbiAgICByZXR1cm4ge0E0TVBvcnQ6IHRoaXMub3B0cy5wb3J0fTtcbiAgfVxufVxuXG5leHBvcnQgeyBNYWNEcml2ZXIgfTtcbmV4cG9ydCBkZWZhdWx0IE1hY0RyaXZlcjtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
