'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _events = require('events');

var _events2 = _interopRequireDefault(_events);

var _appiumBaseDriver = require('appium-base-driver');

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var _teen_process = require('teen_process');

var _installer = require('./installer');

var _asyncbox = require('asyncbox');

var _child_process = require('child_process');

var _child_process2 = _interopRequireDefault(_child_process);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var REQUIRED_PARAMS = []; // XXYD 1-5-2018: removed app from required params because you can alternatively use appTopLevelWindow
var DEFAULT_WAD_HOST = '127.0.0.1';
var DEFAULT_WAD_PORT = 4724; //  should be non-4723 to avoid conflict on the same box

var WinAppDriver = (function (_events$EventEmitter) {
  _inherits(WinAppDriver, _events$EventEmitter);

  function WinAppDriver() {
    var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    _classCallCheck(this, WinAppDriver);

    var host = opts.host;
    var port = opts.port;

    _get(Object.getPrototypeOf(WinAppDriver.prototype), 'constructor', this).call(this);

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = _getIterator(REQUIRED_PARAMS), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var req = _step.value;

        if (!opts || !opts[req]) {
          throw new Error('Option \'' + req + '\' is required!');
        }
        this[req] = opts[req];
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator['return']) {
          _iterator['return']();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    this.proxyHost = host || DEFAULT_WAD_HOST;
    this.proxyPort = port || DEFAULT_WAD_PORT;
    this.proc = null;
    this.state = WinAppDriver.STATE_STOPPED;
    this.jwproxy = new _appiumBaseDriver.JWProxy({ server: this.proxyHost, port: this.proxyPort });
  }

  _createClass(WinAppDriver, [{
    key: 'start',
    value: function start() {
      var args, startDetector, processIsAlive, _arr, _loop, _i;

      return _regeneratorRuntime.async(function start$(context$2$0) {
        var _this = this;

        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            context$2$0.next = 2;
            return _regeneratorRuntime.awrap((0, _installer.verifyWAD)());

          case 2:
            if (context$2$0.sent) {
              context$2$0.next = 4;
              break;
            }

            throw new Error("Could not verify WinAppDriver install; re-run install");

          case 4:

            this.changeState(WinAppDriver.STATE_STARTING);

            // XXXYD TODO: would be better if WinAppDriver didn't require passing in /wd/hub as a param
            args = [this.proxyPort + "/wd/hub"];

            startDetector = function startDetector(stdout) {
              return stdout.indexOf("listening for requests") !== -1;
            };

            processIsAlive = false;
            context$2$0.prev = 8;
            context$2$0.next = 11;
            return _regeneratorRuntime.awrap(this.killAll());

          case 11:

            // set up our subprocess object
            this.proc = new _teen_process.SubProcess(_installer.WAD_INSTALL_PATH, args, {
              encoding: 'ucs2'
            });
            processIsAlive = true;

            // handle log output
            _arr = ['STDOUT', 'STDERR'];

            _loop = function () {
              var stream = _arr[_i];
              _this.proc.on('lines-' + stream.toLowerCase(), function (lines) {
                var _iteratorNormalCompletion2 = true;
                var _didIteratorError2 = false;
                var _iteratorError2 = undefined;

                try {
                  for (var _iterator2 = _getIterator(lines), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var l = _step2.value;

                    _logger2['default'].info('[' + stream + '] ' + l.trim());
                  }
                } catch (err) {
                  _didIteratorError2 = true;
                  _iteratorError2 = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion2 && _iterator2['return']) {
                      _iterator2['return']();
                    }
                  } finally {
                    if (_didIteratorError2) {
                      throw _iteratorError2;
                    }
                  }
                }
              });
            };

            for (_i = 0; _i < _arr.length; _i++) {
              _loop();
            }

            // handle out-of-bound exit by simply emitting a stopped state
            this.proc.on('exit', function (code, signal) {
              processIsAlive = false;
              if (_this.state !== WinAppDriver.STATE_STOPPED && _this.state !== WinAppDriver.STATE_STOPPING) {
                var msg = 'WinAppDriver exited unexpectedly with code ' + code + ', ' + ('signal ' + signal);
                _logger2['default'].error(msg);
                _this.changeState(WinAppDriver.STATE_STOPPED);
              }
            });
            _logger2['default'].info('Spawning winappdriver with: ' + args.join(' '));

            // start subproc and wait for startDetector
            context$2$0.next = 20;
            return _regeneratorRuntime.awrap(this.proc.start(startDetector));

          case 20:
            context$2$0.next = 22;
            return _regeneratorRuntime.awrap(this.waitForOnline());

          case 22:
            context$2$0.next = 31;
            break;

          case 24:
            context$2$0.prev = 24;
            context$2$0.t0 = context$2$0['catch'](8);

            this.emit(WinAppDriver.EVENT_ERROR, context$2$0.t0);
            // just because we had an error doesn't mean the winappdriver process
            // finished; we should clean up if necessary

            if (!processIsAlive) {
              context$2$0.next = 30;
              break;
            }

            context$2$0.next = 30;
            return _regeneratorRuntime.awrap(this.proc.stop());

          case 30:
            _logger2['default'].errorAndThrow(context$2$0.t0);

          case 31:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[8, 24]]);
    }
  }, {
    key: 'sessionId',
    value: function sessionId() {
      if (this.state !== WinAppDriver.STATE_ONLINE) {
        return null;
      }

      return this.jwproxy.sessionId;
    }
  }, {
    key: 'waitForOnline',
    value: function waitForOnline() {
      var winappdriverStopped;
      return _regeneratorRuntime.async(function waitForOnline$(context$2$0) {
        var _this2 = this;

        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            winappdriverStopped = false;
            context$2$0.next = 3;
            return _regeneratorRuntime.awrap((0, _asyncbox.retryInterval)(20, 200, function callee$2$0() {
              return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
                while (1) switch (context$3$0.prev = context$3$0.next) {
                  case 0:
                    if (!([WinAppDriver.STATE_STOPPED, WinAppDriver.STATE_ONLINE].indexOf(this.state) >= 0)) {
                      context$3$0.next = 3;
                      break;
                    }

                    // we are either stopped, stopping, or we're online
                    winappdriverStopped = this.state === WinAppDriver.STATE_STOPPED;
                    return context$3$0.abrupt('return');

                  case 3:
                    context$3$0.next = 5;
                    return _regeneratorRuntime.awrap(this.getStatus());

                  case 5:
                    if (!context$3$0.sent) {
                      context$3$0.next = 7;
                      break;
                    }

                    this.changeState(WinAppDriver.STATE_ONLINE);

                  case 7:
                  case 'end':
                    return context$3$0.stop();
                }
              }, null, _this2);
            }));

          case 3:
            if (!winappdriverStopped) {
              context$2$0.next = 5;
              break;
            }

            throw new Error('WinAppDriver crashed during startup.');

          case 5:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'getStatus',
    value: function getStatus() {
      var resBlock;
      return _regeneratorRuntime.async(function getStatus$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            context$2$0.next = 2;
            return _regeneratorRuntime.awrap(this.jwproxy.proxy('/status', 'GET'));

          case 2:
            resBlock = context$2$0.sent;

            if (!(resBlock[0].statusCode === 200)) {
              context$2$0.next = 6;
              break;
            }

            _logger2['default'].info('Status call returned 200. we\'re online and ready to run tests');
            return context$2$0.abrupt('return', true);

          case 6:
            return context$2$0.abrupt('return', false);

          case 7:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'startSession',
    value: function startSession(caps) {
      return _regeneratorRuntime.async(function startSession$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            this.proxyReqRes = this.jwproxy.proxyReqRes.bind(this.jwproxy);
            context$2$0.next = 3;
            return _regeneratorRuntime.awrap(this.jwproxy.command('/session', 'POST', { desiredCapabilities: caps }));

          case 3:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'stop',
    value: function stop() {
      var emitStates = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];
      return _regeneratorRuntime.async(function stop$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            if (emitStates) {
              this.changeState(WinAppDriver.STATE_STOPPING);
            }
            context$2$0.prev = 1;

            if (!this.proc) {
              context$2$0.next = 5;
              break;
            }

            context$2$0.next = 5;
            return _regeneratorRuntime.awrap(this.proc.stop());

          case 5:
            if (emitStates) {
              this.changeState(WinAppDriver.STATE_STOPPED);
            }
            context$2$0.next = 11;
            break;

          case 8:
            context$2$0.prev = 8;
            context$2$0.t0 = context$2$0['catch'](1);

            _logger2['default'].error(context$2$0.t0);

          case 11:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[1, 8]]);
    }
  }, {
    key: 'changeState',
    value: function changeState(state) {
      this.state = state;
      _logger2['default'].debug('WinAppDriver changed state to \'' + state + '\'');
      this.emit(WinAppDriver.EVENT_CHANGED, { state: state });
    }
  }, {
    key: 'sendCommand',
    value: function sendCommand(url, method, body) {
      return _regeneratorRuntime.async(function sendCommand$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            context$2$0.next = 2;
            return _regeneratorRuntime.awrap(this.jwproxy.command(url, method, body));

          case 2:
            return context$2$0.abrupt('return', context$2$0.sent);

          case 3:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'proxyReq',
    value: function proxyReq(req, res) {
      return _regeneratorRuntime.async(function proxyReq$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            context$2$0.next = 2;
            return _regeneratorRuntime.awrap(this.jwproxy.proxyReqRes(req, res));

          case 2:
            return context$2$0.abrupt('return', context$2$0.sent);

          case 3:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this);
    }
  }, {
    key: 'killAll',
    value: function killAll() {
      var cmd;
      return _regeneratorRuntime.async(function killAll$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            cmd = undefined;

            // js hint cannot handle backticks, even escaped, within template literals
            cmd = "FOR /F \"usebackq tokens=5\" %a in (`netstat -nao ^| " + "findstr /R /C:\"" + this.proxyPort + " \"`) do (" + "FOR /F \"usebackq\" %b in (`TASKLIST /FI \"PID eq %a\" ^| " + "findstr /I winappdriver.exe`) do (IF NOT %b==\"\" TASKKILL " + "/F /PID %a))";
            _logger2['default'].info('Killing any old WinAppDrivers on same port, running: ' + cmd);
            context$2$0.prev = 3;
            context$2$0.next = 6;
            return _regeneratorRuntime.awrap(_bluebird2['default'].promisify(_child_process2['default'].exec)(cmd));

          case 6:
            _logger2['default'].info("Successfully cleaned up old WinAppDrivers");
            context$2$0.next = 12;
            break;

          case 9:
            context$2$0.prev = 9;
            context$2$0.t0 = context$2$0['catch'](3);

            _logger2['default'].info("No old WinAppDrivers seemed to exist");

          case 12:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[3, 9]]);
    }
  }, {
    key: 'deleteSession',
    value: function deleteSession() {
      return _regeneratorRuntime.async(function deleteSession$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            _logger2['default'].debug('Deleting WinAppDriver server session');
            // rely on jwproxy's intelligence to know what we're talking about and
            // delete the current session
            context$2$0.prev = 1;
            context$2$0.next = 4;
            return _regeneratorRuntime.awrap(this.jwproxy.command('/', 'DELETE'));

          case 4:
            context$2$0.next = 9;
            break;

          case 6:
            context$2$0.prev = 6;
            context$2$0.t0 = context$2$0['catch'](1);

            _logger2['default'].warn('Did not get confirmation WinAppDriver deleteSession worked; ' + ('Error was: ' + context$2$0.t0));

          case 9:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[1, 6]]);
    }
  }]);

  return WinAppDriver;
})(_events2['default'].EventEmitter);

WinAppDriver.EVENT_ERROR = 'winappdriver_error';
WinAppDriver.EVENT_CHANGED = 'stateChanged';
WinAppDriver.STATE_STOPPED = 'stopped';
WinAppDriver.STATE_STARTING = 'starting';
WinAppDriver.STATE_ONLINE = 'online';
WinAppDriver.STATE_STOPPING = 'stopping';

exports.WinAppDriver = WinAppDriver;
exports.DEFAULT_WAD_HOST = DEFAULT_WAD_HOST;
exports.DEFAULT_WAD_PORT = DEFAULT_WAD_PORT;
exports['default'] = WinAppDriver;

// we need to make sure WAD hasn't crashed

// use cp.exec instead of teen process because of crazy windows quoting
//# sourceMappingURL=data:application/json;charset=utf8;base64,
