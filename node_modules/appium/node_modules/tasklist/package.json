{
  "_args": [
    [
      {
        "raw": "tasklist@https://registry.npmjs.org/tasklist/-/tasklist-3.1.0.tgz",
        "scope": null,
        "escapedName": "tasklist",
        "name": "tasklist",
        "rawSpec": "https://registry.npmjs.org/tasklist/-/tasklist-3.1.0.tgz",
        "spec": "https://registry.npmjs.org/tasklist/-/tasklist-3.1.0.tgz",
        "type": "remote"
      },
      "/Users/saxenan3/myprojects/uiAutomation/mytest_project/node_modules/appium"
    ]
  ],
  "_from": "tasklist@https://registry.npmjs.org/tasklist/-/tasklist-3.1.0.tgz",
  "_id": "tasklist@3.1.0",
  "_inCache": true,
  "_location": "/appium/tasklist",
  "_phantomChildren": {},
  "_requested": {
    "raw": "tasklist@https://registry.npmjs.org/tasklist/-/tasklist-3.1.0.tgz",
    "scope": null,
    "escapedName": "tasklist",
    "name": "tasklist",
    "rawSpec": "https://registry.npmjs.org/tasklist/-/tasklist-3.1.0.tgz",
    "spec": "https://registry.npmjs.org/tasklist/-/tasklist-3.1.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium",
    "/appium/ps-list"
  ],
  "_resolved": "https://registry.npmjs.org/tasklist/-/tasklist-3.1.0.tgz",
  "_shasum": "873a98a4e45cbdecfa2c2ee18865353057e63696",
  "_shrinkwrap": null,
  "_spec": "tasklist@https://registry.npmjs.org/tasklist/-/tasklist-3.1.0.tgz",
  "_where": "/Users/saxenan3/myprojects/uiAutomation/mytest_project/node_modules/appium",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/tasklist/issues"
  },
  "dependencies": {
    "neat-csv": "^2.1.0",
    "pify": "^2.2.0",
    "sec": "^1.0.0"
  },
  "description": "Wrapper for the Windows `tasklist` command. Returns a list of apps and services with their Process ID (PID) for all tasks running on either a local or a remote computer.",
  "devDependencies": {
    "ava": "*",
    "xo": "*"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/sindresorhus/tasklist#readme",
  "keywords": [
    "tasklist",
    "task",
    "list",
    "windows",
    "win",
    "win32",
    "pid",
    "process",
    "processes",
    "services"
  ],
  "license": "MIT",
  "name": "tasklist",
  "optionalDependencies": {},
  "readme": "# tasklist [![Build status](https://ci.appveyor.com/api/projects/status/5yav2915fx0f3d0n/branch/master?svg=true)](https://ci.appveyor.com/project/sindresorhus/tasklist/branch/master)\n\n> Wrapper for the Windows [`tasklist`](https://technet.microsoft.com/en-us/library/bb491010.aspx) command. Returns a list of apps and services with their Process ID (PID) for all tasks running on either a local or a remote computer.\n\nCleans up and normalizes the data.\n\n\n## Install\n\n```\n$ npm install --save tasklist\n```\n\n\n## Usage\n\n```js\nconst tasklist = require('tasklist');\n\ntasklist().then(tasks => {\n\tconsole.log(tasks);\n\t/*\n\t[{\n\t\timageName: 'taskhostex.exe',\n\t\tpid: 1820,\n\t\tsessionName: 'Console',\n\t\tsessionNumber: 1,\n\t\tmemUsage: 4415488,\n\t}, …]\n\t*/\n});\n```\n\n\n## API\n\nSee the [`tasklist` docs](https://technet.microsoft.com/en-us/library/bb491010.aspx) for more.\n\n### tasklist([options])\n\nReturns a `Promise<Array>` with running tasks.\n\n#### options\n\nType: `Object`\n\nThe `system`, `username`, `password` options must be specified together.\n\n##### verbose\n\nType: `boolean`<br>\nDefault: `false`\n\nReturn verbose results.\n\nWithout the `verbose` option, `taskkill` returns tasks with the following properties:\n\n- `imageName` (Type: `string`)\n- `pid` (Type: `number`)\n- `sessionName` (Type: `string`)\n- `sessionNumber` (Type: `number`)\n- `memUsage` in bytes (Type: `number`)\n\nWith the `verbose` option set to `true`, it additionally returns the following properties:\n\n- `status` (Type: `string`): One of `Running`, `Suspended`, `Not Responding`, or `Unknown`\n- `username` (Type: `string`)\n- `cpuTime` in seconds (Type: `number`)\n- `windowTitle` (Type: `string`)\n\n**Note:** It's not guaranteed that the `username` and `windowTitle` properties are returned with proper values. If they are *not available*, `'N/A'` may be returned on English systems. In contrast, `'Nicht zutreffend'` may be returned on German systems, for example.\n\n**Verbose example:**\n\n```js\nconst tasklist = require('tasklist');\n\ntasklist({verbose: true}).then(tasks => {\n\tconsole.log(tasks);\n\t/*\n\t[{\n\t\timageName: 'taskhostex.exe',\n\t\tpid: 1820,\n\t\tsessionName: 'Console',\n\t\tsessionNumber: 1,\n\t\tmemUsage: 4415488,\n\t\tstatus: 'Running',\n\t\tusername: 'SINDRESORHU3930\\\\sindre'\n\t\tcpuTime: 0,\n\t\twindowTitle: 'Task Host Window'\n\t}, …]\n\t*/\n});\n```\n\n**Warning:** Using the `verbose` option may have a considerable performance impact (See: [#6](https://github.com/sindresorhus/tasklist/issues/6)).\n\n##### system\n\nType: `string`\n\nName or IP address of a remote computer (don't use backslashes). The default is the local computer.\n\n##### username\n\nType: `string`<br>\nExample: `SINDRESORHU3930\\\\sindre`\n\nUser specified by `User` or `Domain\\User`. The default is the permissions of the current logged on user on the computer issuing the command.\n\n##### password\n\nType: `string`\n\nPassword of the user account for the specified `username`.\n\n##### filter\n\nType: `array`\n\nSpecify the types of processes to include or exclude. [More info.](https://technet.microsoft.com/en-us/library/bb491010.aspx)\n\n\n## Related\n\n- [taskkill](https://github.com/sindresorhus/taskkill) - Wrapper for the Windows `taskkill` command\n\n\n## Maintainers\n\n- [Sindre Sorhus](https://sindresorhus.com)\n- [Mark Tiedemann](https://marksweb.site)\n\n\n## License\n\nMIT\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/tasklist.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "3.1.0"
}
