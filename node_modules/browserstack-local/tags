!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Local	lib/Local.js	/^function Local(){$/;"	c
Local.addArgs	lib/Local.js	/^  this.addArgs = function(options){$/;"	m
Local.isRunning	lib/Local.js	/^  this.isRunning = function(){$/;"	m
Local.start	lib/Local.js	/^  this.start = function(options, callback){$/;"	m
Local.stop	lib/Local.js	/^  this.stop = function (callback) {$/;"	m
LocalBinary	lib/LocalBinary.js	/^function LocalBinary(){$/;"	c
LocalBinary.binaryPath	lib/LocalBinary.js	/^  this.binaryPath = function(conf, callback){$/;"	m
LocalBinary.checkPath	lib/LocalBinary.js	/^  this.checkPath = function(path, mode){$/;"	m
LocalBinary.download	lib/LocalBinary.js	/^  this.download = function(conf, destParentDir, callback, retries){$/;"	m
LocalBinary.getAvailableDirs	lib/LocalBinary.js	/^  this.getAvailableDirs = function(){$/;"	m
LocalBinary.homedir	lib/LocalBinary.js	/^  this.homedir = function() {$/;"	m
LocalBinary.makePath	lib/LocalBinary.js	/^  this.makePath = function(path){$/;"	m
LocalBinary.retryBinaryDownload	lib/LocalBinary.js	/^  this.retryBinaryDownload = function(conf, destParentDir, callback, retries, binaryPath) {$/;"	m
LocalError	lib/LocalError.js	/^module.exports = function LocalError(message, extra) {$/;"	f
browserstack	node-example.js	/^var browserstack = require('.\/index');$/;"	v
capabilities.browserName	node-example.js	/^  'browserName': 'chrome',$/;"	p
capabilities.browserstack.local	node-example.js	/^  'browserstack.local': true$/;"	p
capabilities.build	node-example.js	/^  build: 'build',$/;"	p
capabilities.os	node-example.js	/^  'os': 'OS X',$/;"	p
childProcess	lib/Local.js	/^var childProcess = require('child_process'),$/;"	v
expect	test/local.js	/^var expect = require('expect.js'),$/;"	v
getBinaryArgs	lib/Local.js	/^  this.getBinaryArgs = function(){$/;"	f
getBinaryPath	lib/Local.js	/^  this.getBinaryPath = function(callback){$/;"	f
https	lib/LocalBinary.js	/^var https = require('https'),$/;"	v
identifier	node-example.js	/^var identifier = 'adqqwdqwd';$/;"	v
module.exports	lib/LocalError.js	/^module.exports = function LocalError(message, extra) {$/;"	c
options.key	node-example.js	/^  'key': process.env.BROWSERSTACK_ACCESS_KEY,$/;"	p
webdriver	node-example.js	/^var webdriver = require('selenium-webdriver');$/;"	v
