'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _events = require('events');

var _events2 = _interopRequireDefault(_events);

/**
 * Initialize a new `Dot` matrix test reporter.
 *
 * @param {Runner} runner
 * @api public
 */

var DotReporter = (function (_events$EventEmitter) {
    _inherits(DotReporter, _events$EventEmitter);

    function DotReporter(baseReporter, config) {
        var _this = this;

        var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

        _classCallCheck(this, DotReporter);

        _get(Object.getPrototypeOf(DotReporter.prototype), 'constructor', this).call(this);

        this.baseReporter = baseReporter;
        var epilogue = this.baseReporter.epilogue;

        this.on('start', function () {
            console.log();
        });

        this.on('test:pending', function () {
            _this.printDots('pending');
        });

        this.on('test:pass', function () {
            _this.printDots('green');
        });

        this.on('test:fail', function () {
            _this.printDots('fail');
        });

        this.on('test:end', function () {
            _this.printDots(null);
        });

        this.on('end', function () {
            epilogue.call(baseReporter);
            console.log();
        });
    }

    _createClass(DotReporter, [{
        key: 'printDots',
        value: function printDots(status) {
            var _baseReporter = this.baseReporter;
            var color = _baseReporter.color;
            var symbols = _baseReporter.symbols;

            if (!status) {
                return;
            }

            process.stdout.write(color(status, symbols.dot));
        }
    }]);

    return DotReporter;
})(_events2['default'].EventEmitter);

exports['default'] = DotReporter;
module.exports = exports['default'];
